; 
; 
; 
;  @(#) TSMC 0.18UM ASSURA LVS/RC COMMAND FILE 
;  @(#) TSMC 0.18um Mixed-Signal RF SALICIDE(1P6M+, 1.8V/3.3V) 
;  @(#) SPICE MODEL DOCUMENT : T-018-CM-SP-018    V1.0    
;  @(#) EDA TOOL VERSION: ASSURA AV41 
;  @(#)  
;  @(#) COMMAND FILE DOCUMENT: T-018-CM-SP-018-U1  
;  @(#) COMMAND FILE VERSION : V1.0b 
;  @(#) COMMAND FILE METAL SCHEME: 1P6M  
;  @(#) COMMAND FILE DATE: 12/16/2009 
; 
;////////////////////////////////////////////////////////////////////////////// 
; 
; DISCLAIMER 
; 
; This file usually contains the super set of device extraction rule at TSMC
; processes. However, all of device in basic deck may not be offered at current
; SPICE model. PLEASE ALWAYS REFER TO THE CORRESPONDING SPICE MODEL DOCUMENT
; FOR ANY DEVICE YOU WOULD LIKE USE.
; 
; The information contained herein is provided by TSMC on an "AS IS" basis 
; without any warranty, and TSMC has no obligation to support or otherwise 
; maintain the information.  TSMC disclaims any representation that the 
; information does not infringe any intellectual property rights or proprietary 
; rights of any third parties.  There are no other warranties given by TSMC, 
; whether express, implied or statutory, including, without limitation, implied 
; warranties of merchantability and fitness for a particular purpose. 
; 
; STATEMENT OF USE 
; 
; This information contains confidential and proprietary information of TSMC. 
; No part of this information may be reproduced, transmitted, transcribed, 
; stored in a retrieval system, or translated into any human or computer 
; language, in any form or by any means, electronic, mechanical, magnetic, 
; optical, chemical, manual, or otherwise, without the prior written permission 
; of TSMC.  This information was prepared for informational purpose and is for 
; use by TSMC's customers only.  TSMC reserves the right to make changes in the 
; information at any time and without notice. 
; 
;////////////////////////////////////////////////////////////////////////////// 
; 
;                            CHANGE HISTORY 
;  
;   Date     version   Who                      Description 
; ---------- ------- --------- ---------------------------------------------------------- 
;        10/05/2009  v1.0a  tmwub    1) New deck 
;				    2) moscap_rf and moscap_rf33 in this CR018GPII deck are not identical with those  
;				       two 018 rf moscap in old days. Following list the differences(DMW and properties). 
; 
;			    CR018GPII deck: 
;			    moscap_rf       Varactor on thin  oxide : w/i DNW and properties BR, GR, LR and WR   
;			    moscap_rf33     Varactor on thick oxide : w/i DNW and properties BR, GR, LR and WR 
;			    moscap_rf_nw    Varactor on thin  oxide : w/o DNW and properties BR, GR, LR and WR   
;			    moscap_rf33_nw  Varactor on thick oxide : w/o DNW and properties BR, GR, LR and WR  
;					        
;			    Other 018 decks: 
;			    moscap_rf       Varactor on thin  oxide : doesn't care DNW and w/i properties A, PJ, B and G   
;			    moscap_rf33     Varactor on thick oxide : doesn't care DNW and w/i properties A, PJ, B and G  
; 
;				    3) Because 0.18um DRM allow stacking devices under RF mimcap w/i shield and 2T  
;				       baseband mimcap, we add new mimcap_1p0_sin, mimcap_2p0_sin and mimcap_2p0_shield  
;				       with new DUMMY layer : RFDUMMY(drawing3)=(160;50) and CTMDMY(drawing5)=(131;50).  
; 
;				    4) Add a switch "OD_RES_WO_DMNP2V" : Default is off. This switch is for 2T/3T non-silicide OD resistor. 
;				       If turn off it, 2T/3T non-silicide P+ OD resistors should w/i DMP2V.  
;				                       2T/3T non-silicide N+ OD resistors should w/i DMN2V.  
; 
;				    5) Using cell blocking to block rf cells' parasitic R & C. 
;				    6) BJT doesn't extract area. so add paramsNotPassToQRC( BJT "area" ) in compare.rul 
;        12/16/2009  v1.0b   tmwub   1) Update transfer property for rf mos 
; 
;////////////////////////////////////////////////////////////////////////////// 
; 
; 
; 
;                              
;                             DEVICE FORMULA 
;   ----- ----------------------------- ---------------------------------- 
;   NAME  DESCRIPTION                   DEVICE LAYER OPERATION 
;   ----- ----------------------------- ---------------------------------- 
;   GENERIC DEVICE 
;   --------------------------------------------------------------------- 
;   M[N]           CORE Nominal VT NMOS          ((NGATE-OD2-NTN)-DNW)  
;   M[N1]          CORE Nominal VT NMOS/DNW      ((NGATE-OD2-NTN)*DNW)  
;   M[NL]          CORE native device            ((NGATE-OD2)*NTN)  
;   M[NN]          I/O  native device            ((NGATE*OD2)*NTN)  
;   M[ND]          I/O  Nominal VT NMOS          ((NGATE*OD2-NTN)-DNW)  
;   M[N2]          I/O  Nominal VT NMOS/DNW      ((NGATE*OD2-NTN)*DNW)  
;   M[NA]          CORE medium  VT NMOS          ((NGATE-OD2-NTN)-DNW*VTMN) 
;   M[NB]          I/O  medium  VT NMOS          ((NGATE*OD2-NTN)-DNW*VTMN) 
;   M[PA]          CORE medium  VT PMOS          (PGATE-OD2*VTMP) 
;   M[P]           CORE Nominal VT PMOS          (PGATE-OD2) 
;   M[PD]          I/O  Nominal VT PMOS          (PGATE*OD2) 
;   R[PR]          P+Poly resistor w/o Silicide  (RPDMYX*POLY1*PIMP*RPO*DMP2V-RFDUMMY)  
;   R[NR]          N+Poly resistor w/o Silicide  (RPDMYX*POLY1*NIMP*RPO*DMN2V-RFDUMMY)  
;   R[PS]          P+Poly resistor w/i Silicide  (RPDMYX*POLY1*PIMP-RPO-RFDUMMY)  
;   R[NS] 	  N+Poly resistor w/i Silicide  (RPDMYX*POLY1*NIMP-RPO-RFDUMMY)  
;   R[WR]          N-Well resister under STI     (RWDMYX*NWELL-(OD*RPO))  
;   R[LR]          HRI high resistance poly R    (RPDMYX*POLY1*HRI*RLPPDMY*RPO-NIMP-PIMP-RFDUMMY)  
;   R[WO]          N-Well resistor under OD      (RWDMYX*NWELL*(OD*RPO))  
;   R[PD]          P+diff resistor w/o Silicide  (RPDMYX*NWELL*OD*PIMP*RPO-RFDUMMY*DMP2V)  
;   R[ND] 	  N+diff resistor w/o Silicide  (RPDMYX*OD*NIMP*RPO-RFDUMMY*DMN2V)  
;   R[PI] 	  P+diff resistor w/i Silicide  (RPDMYX*NWELL*OD*PIMP-RPO-RFDUMMY)  
;   R[NI]   	  N+diff resistor w/i Silicide  (RPDMYX*OD*NIMP-RPO-RFDUMMY)  
;   R[M1] 	  METAL1 resistor               (RMDMY1*METAL1)  
;   R[M2] 	  METAL2 resistor               (RMDMY2*METAL2)  
;   R[M3] 	  METAL3 resistor               (RMDMY3*METAL3)  
;   R[M4] 	  METAL4 resistor               (RMDMY4*METAL4)  
;   R[M5] 	  METAL5 resistor               (RMDMY5*METAL5)  
;   R[MT]	  METAL6 resistor               (RMDMY6*METAL6)  
;   mimcap_1p0_sin     Baseband 2T mimcap 1.0fF    (CTMDMY*CTM5*M5-CTMDMY_3t-IP_MIG)  
;   mimcap_1p0_sin_3t  Baseband 3T mimcap 1.0fF    (CTMDMY*CTM5*M5*CTMDMY_3t-IP_MIG)  
;   mimcap_2p0_sin     Baseband 2T mimcap 2.0ff    (CTMDMY*CTMDMY2p0*CTM5*M5-CTMDMY_3t-IP_MIG)  
;   mimcap_2p0_sin_3t  Baseband 3T mimcap 2.0ff    (CTMDMY*CTMDMY2p0*CTM5*M5*CTMDMY_3t-IP_MIG)   
;   D[DP]	  CORE diode P+/NW              (DIODMY*OD*PIMP-OD2*anwel)  
;   D[D1]	  I/O  diode P+/NW              (DIODMY*OD*PIMP*OD2*anwel)  
;   D[DN]	  CORE diode N+/PW              (DIODMY*OD*NIMP-OD2*PSUB)  
;   D[D2]	  I/O  diode N+/PW              (DIODMY*OD*NIMP*OD2*PSUB)  
;   D[DW]	  CORE diode NW/PW              (DIODMY*anwel-OD2)  
;   D[D3]	  I/O  diode NW/PW              (DIODMY*anwel*OD2)  
;   D[ndio_m]      CORE diode N+/PW with VTMN    (DIODMY*OD*NIMP*VTMN*PSUB-OD2) 
;   D[ndio_3m]     I/O diode N+/PW with VTMN     (DIODMY*OD*NIMP*VTMN*PSUB*OD2) 
;   D[pdio_m]      CORE diode P+/NW with VTMN    (DIODMY*OD*PIMP*VTMP*anwel-OD2) 
;   D[DB]	  I/O  ESD diode                (ESD3DMY*OD*NIMP*RPO-NWELL-POLY1) 
;   D[dnwpsub]     DNW/PSUB diode		(DNW*PSUB*anwel) 
;   D[pwdnw]       PSUB(R-WELL)/DNW diode	(DNW*PSUB-anwel) 
; 
;   Q[PV]	  CORE PNP-BJT                  (BJTDMY*OD*PIMP-OD2*NWELL)  
;   Q[PV_mis]	  CORE PNP-BJT                  (BJTDMY*LVSDMY*OD*PIMP-OD2*NWELL)  
;   Q[NV_mis]      CORE NPN-BJT		        (BJTDMY*LVSDMY*OD*NIMP-OD2*NWELL*DNW) 
;   Q[NV]          CORE NPN-BJT		        (BJTDMY*OD*NIMP-OD2*NWELL*DNW) 
;   Q[P1]	  I/O  PNP-BJT                  (BJTDMY*OD*PIMP*OD2*NWELL)  
;   rnwod_m         N-Well resistor under OD      (RWDMY1*NWELL*(OD*RPO))  
;   rpodrpo_m       P+diff resistor w/o Silicide  (RPDMY1*OD*PIMP*RPO*NWELL*DMP2V)  
;   rnodrpo_m       N+diff resistor w/o Silicide  (RPDMY1*OD*NIMP*RPO*DMN2V)  
;   rpod_m          P+diff resistor w/i Silicide  (RPDMY1*OD*PIMP-RPO*NWELL)  
;   rnod_m          N+diff resistor w/i Silicide  (RPDMY1*OD*NIMP-RPO)  
;   rpodw_m         P+diff resistor w/i Silicide  (RPDMY1*OD*PIMP-RPO*NWELL)  
;   rnodw_m         N+diff resistor w/i Silicide  (RPDMY1*OD*NIMP-RPO) 
;   rnwsti_m        N-well resistor under STI     (RWDMY1*NWELL-(OD*RPO))  
;   rnpo1rpo_dis     N+Poly resistor w/o Silicide(distributed)  (RPDMY1*POLY1*NIMP*RPO*DMN2V)  
;   rppo1rpo_dis     P+Poly resistor w/o Silicide(distributed)  (RPDMY1*POLY1*PIMP*RPO*DMP2V)  
;   rnpo1w_dis       N+Poly resistor w/i Silicide(distributed)  (RPDMY1*POLY1*NIMP-RPO)  
;   rppo1w_dis       P+Poly resistor w/i Silicide(distributed)  (RPDMY1*POLY1*PIMP-RPO)  
;   rppolyhri_dis    HRI High poly resistor                     (RPDMY1*POLY1*HRI*RLPPDMY*RPO-NIMP-PIMP)  
;   rnpo1_dis        N+Poly resistor w/i Silicide(distributed)  (RPDMY1*POLY1*NIMP-RPO)  
;   rppo1_dis        P+Poly resistor w/i Silicide(distributed)  (RPDMY1*POLY1*PIMP-RPO)  
;   nmoscap        CORE NMOS Varactor            (VARGT-OD2-RFDUMMY) 
;   nmoscap_33      I/O  NMOS Varactor            (VARGT*OD2-RFDUMMY) 
; 
;   crtmom         Baseband RTMOM                (M1*M2*MOMDMY1*MOMDMY2*POLY1-RFDUMMY1-MOMDMY100-MOMDMY22) 
;   cfmom          Baseband FMOM w/i poly shielding     (M1*M2*MOMDMY1*MOMDMY2*POLY1*NIMP-RFDUMMY1*MOMDMY100-MOMDMY22) 
;   cfmom_mx       Baseband FMOM w/i poly shielding(MX) (M1*M2*MOMDMY1*MOMDMY2*POLY1*NIMP-RFDUMMY1*MOMDMY100*MOMDMY22*MOMDMY23*MOMDMY24*MOMDMY25) 
;   --------------------------------------------------------------------- 
;   MM/RF DEVICE 
;   --------------------------------------------------------------------- 
;   nmos_rf         CORE Nominal VT NMOS/DNW      ((RFNGATE-OD2-ESD3DMY-NTN)*DRAIN*DNW*RFDUMMY1)  
;   nmos_rf33       I/O  Nominal VT NMOS/DNW      ((RFNGATE*OD2-ESD3DMY-NTN)*DRAIN*DNW*RFDUMMY1)  
;   pmos_rf         CORE Nominal VT PMOS/DNW      (RFPGATE-OD2*DRAIN*DNW*RFDUMMY1)  
;   pmos_rf_nw      CORE Nominal VT PMOS          (RFPGATE-OD2*DRAIN-DNW*RFDUMMY1)  
;   pmos_rf33       I/O  Nominal VT PMOS/DNW      (RFPGATE*OD2*DRAIN*DNW*RFDUMMY1)  
;   pmos_rf33_nw    I/O  Nominal VT PMOS          (RFPGATE*OD2*DRAIN-DNW*RFDUMMY1)  
;   nmos_rf_6t      CORE Nominal VT NMOS/DNW(6T)  ((RFNGATE-OD2-ESD3DMY-NTN)*DRAIN*DNW*RFDUMMY1*RFDUMMY6T)  
;   nmos_rf33_6t    I/O  Nominal VT NMOS/DNW(6T)  ((RFNGATE*OD2-ESD3DMY-NTN)*DRAIN*DNW*RFDUMMY1*RFDUMMY6T)  
;   pmos_rf_5t      CORE Nominal VT PMOS/DNW(5T)  (RFPGATE-OD2*DRAIN*DNW*RFDUMMY1*RFDUMMY5T)  
;   pmos_rf_nw_5t   CORE Nominal VT PMOS    (5T)  (RFPGATE-OD2*DRAIN-DNW*RFDUMMY1*RFDUMMY5T)  
;   pmos_rf33_5t    I/O  Nominal VT PMOS/DNW(5T)  (RFPGATE*OD2*DRAIN*DNW*RFDUMMY1*RFDUMMY5T)  
;   pmos_rf33_nw_5t I/O  Nominal VT PMOS    (5T)  (RFPGATE*OD2*DRAIN-DNW*RFDUMMY1*RFDUMMY5T)     
;   moscap_rf       Varactor on thin oxide  w/i DNW (VARDMY*NWELL*NIMP*POLY1*RFDUMMY1*-OD2*DNW)  
;   moscap_rf33     Varactor on thick oxide w/i DNW (VARDMY*NWELL*NIMP*POLY1*RFDUMMY1*OD2*DNW) 
;   moscap_rf_nw    Varactor on thin oxide  w/o DNW (VARDMY*NWELL*NIMP*POLY1*RFDUMMY1*-OD2-DNW)  
;   moscap_rf33_nw  Varactor on thick oxide w/o DNW (VARDMY*NWELL*NIMP*POLY1*RFDUMMY1*OD2-DNW) 
;   rppolyhri_rf    HRI resistor                  (RPDMYX*POLY1*HRI*RLPPDMY*RPO*DNW*RFDUMMY1-NIMP-PIMP) 
;   rppolywo_rf     P+Poly resistor w/o Silicide  (RPDMYX*POLY1*PIMP*RPO*DMP2V*DNW*RFDUMMY1)  ( W > 5.0 ) 
;   rppolyl_rf      P+Poly resistor w/i Silicide  (RPDMYX*POLY1*PIMP*DNW*RFDUMMY1-RPO)        ( W >= 2.0 ) 
;   rppolys_rf      P+Poly resistor w/i Silicide  (RPDMYX*POLY1*PIMP*DNW*RFDUMMY1-RPO)        ( W < 2.0 ) 
;   mimcap_2p0_wos  CTM/M5 capacitor           (CTM5*CTMDMY2p0*M5*RFDUMMY1)  
;   mimcap_2p0_shield CTM/M5 capacitor           (CTM5*CTMDMY2p0*M5*RFDUMMY1*M4)  
;   spiral_std_mu_x_20k     Std Inductor 20k ALCU UTM    (INDDMY*METAL6) 
;   spiral_sym_mu_x_20k     Sym Inductor 20k ALCU UTM    (INDDMY*METAL6) 
;   spiral_sym_ct_mu_x_20k  Sym CT Inductor 20k ALCU UTM (INDDMY*METAL6*METAL4*IND_D4) 
; 
; 
;   xjvar_nr36    Junction Varactor             (JVARD*OD-POLY1*NWELL*NIMP*PIMP*RFDUMMY1)  
;   xjvar_w40     Junction Varactor             (JVARD*OD-POLY1*NWELL*NIMP*PIMP*RFDUMMY1) 
;   sbd_rf         RF Schottky Diode w/i DNW        (SBDUMMY*RFDUMMY1*PIMP*NIMP*NWELL*OD*DNW) 
;   sbd_rf_nw      RF Schottky Diode w/o DNW        (SBDUMMY*RFDUMMY1*PIMP*NIMP*NWELL*OD-DNW) 
;   lcesd1_rf		   low capacitance ESD (50fF)	(OD*PIMP*RFDUMMY1*ESD2DUMMY*lcesd1*lcesd_p*lcesd_m) 
;   lcesd2_rf		   low capacitance ESD(100fF)	(OD*PIMP*RFDUMMY1*ESD2DUMMY*lcesd2*lcesd_p*lcesd_m) 
; 
;   cfmom_rf       RF FMOM w/i poly shielding   (M1*M2*MOMDMY1*MOMDMY2*POLY1*NIMP*RFDUMMY1*MOMDMY100-MOMDMY22) 
;   ----- ----------------------------- ------------------------------------------------------------------------------------- 
;   * NGATE = OD * POLY1 * NIMP - NWELL  
;   * PGATE = OD * POLY1 * PIMP * NWELL  
;   * PSUB = BULK 
;   * anwel = NWELL  
;   * VARDMY = VARDMYX -VARG3 -VARG6 -JVARD 
;   * VARGT = OD * POLY1 * NIMP * NWELL * VARDMYX 
;   * METAL1 = M1  
;   * RMDMY1 = RMDMY1i 
;   * METAL2 = M2  
;   * RMDMY2 = RMDMY2i 
;   * METAL3 = M3  
;   * RMDMY3 = RMDMY3i 
;   * METAL4 = M4  
;   * RMDMY4 = RMDMY4i 
;   * METAL5 = M5  
;   * RMDMY5 = RMDMY5i 
;   * METAL6 = M6  
;   * RMDMY6 = RMDMY6i 
;   * RFNGATE = OD * POLY1 * NIMP - NWELL  
;   * RFPGATE = OD * POLY1 * PIMP * NWELL  
;   * RFDUMMY = RFDUMMYX + RFDUMMY1  
;   * RFDUMMY1 = RFDUMMY1 - RFDUMMYX 
;  
;////////////////////////////////////////////////////////////////////////////// 
; 
; 
;////////////////////////////////////////////////////////////////////////////// 
; USER NOTES :   
;   
; 1) Default setting for property check is 0%. Users should check with   
;    IP/Designe providers for proper tolerance.   
;   
; 2) Thin oxide layers PDIFF (7;0) and NDIFF (8;0) are not recommended to be   
;    used as tape out layers. Please use OD (11:0, 3:0, 12:0) for thin oxide tape out layers.   
;    If PDIFF (7;0) and NDIFF (8;0) layers are used, be sure to check MT (tape out)   
;    form for correctness after modifying this LVS deck (to pass LVS check)   
;  
; 3) Switch for extracting PWDNW and DNWPSUB diodes:  
;     By default, the two diodes, PWDNW and DNWPSUB, are not extracted in this command  
;     file. If you want to apply the extraction of these two diodes, please turn on   
;     the switch, "extract_dnwdio".  
; 
; 4) By default, "?joinPins top" is set for virtual connect. Please set to "nil" in LVS.rsf file 
;    as doing full-chip checking. 
; 
; 5) So far, only 0.18um process 2T BB mimcap and rf mimcap w/i shield support stacking mimcap. 
;    If this LVS deck is 0.18um process and w/i rf devices, it will support device under mimcap.  
;    And please do not put metal resistor w/i RMDMY(69;0) under the mimcap. 
; 
;-----------------------------------------------------------------------------  
;      Specail Notice: (for RCX users)  
;      Due to the new command '-res_blocking' option is used in 'capgen.cmd' file  
;  to ensure correct parasitic RC output for RF devices, please make sure your   
;  Assura tool version is newer than v3.1.4USR1. If you are not sure, please contact  
;  your local Cadence support for detail.   
;lvs_gen.pl version: 1.86 
;assura.pl  version: 1.107 
;#########################################################################
;# ENVIRONMENT SETTING                              
;#########################################################################
drcExtractRules( 

scale = 1.0
wped = 5.0


; Sheet Resistance Table
RVM1 = .078	; Metal 1 Resistor 			rm1
RVM2 = .078	; Metal 2 Resistor 			rm2
RVM3 = .078	; Metal 3 Resistor			rm3
RVM4 = .078	; Metal 4 Resistor			rm4
RVM5 = .078	; Metal 5 Resistor			rm5
RV40K = .007	; 40K Metal Resistor			rmt
RVMT = .0178	; Top Metal Resistor			top metal
RVLR = 1037	; HRI high resistance poly R  		rppolyhri LR RES
RVWR = 927	; N-Well resister under STI 		rnwsti WR RES
RVWO = 440	; N-Well resistor under OD  		rnwod W0 RES
RVPR = 321.8	; P+Poly resistor w/o Silicide	   	rppo1rpo PR RES
RVNR = 295.3	; N+Poly resistor w/o Silicide 		rnpo1rpo NR RES
RVPD = 140.6	; P+diff resistor w/o Silicide 		rpodrpo PD RES	
RVND = 61.6	; N+diff resistor w/o Silicide 		rnodrpo ND RES
RVPS = 7.9	; P+Poly resistor w/i Silicide 		rppo1 PS RES (L & S)
RVNS = 7.89	; N+Poly resistor w/i Silicide 		rnpo1 NS RES (L & S)
RVPI = 7.76	; P+diff resistor w/i Silicide 		rpod PI RES (L & S)
RVNI = 6.82	; N+diff resistor w/i Silicide 		rnod NI RES (L & S)
MIM_CA = 1.025e-3 ; mimcap area
MIM_CF = .2425e-9 ; mimcap perimeter
MIM_CA_2P0 = 1.955e-3 ; mimcap_2p0 area 
MIM_CF_2P0 = .27e-9 ; mimcap_2p0 perimeter

if( avSwitch( "STD_LIB") then 
   NMOS_BOTTOM_EXT = 0.86*1e-6
   PMOS_TOP_EXT = 1.09*1e-6
   MOS_LR_EXT =	100.0*1e-6
else 
   NMOS_BOTTOM_EXT = 0
   PMOS_TOP_EXT = 0
   MOS_LR_EXT =	0
)

; #############################################
; # MAPPING                                   #
; #############################################
layerDefs( "df2" 
    PWELLX     = layer( "PWELL" )     ; P-Well   for cis 
    DMP2V      = layer( "DMP2V" )     ; dummy layer to avoid P2V in P+ poly resistor
    DMN2V      = layer( "DMN2V" )     ; dummy layer to avoid N2V in N+ poly resistor
    VTMP       = layer( "VTM_P" )     ;  blocking region of PMOS VT implantation
    VTMN       = layer( "VTM_N" )     ;  blocking region of NMOS VT implantation
    DNW        = layer( "DNW" )     ; Deep N-Well
    NWELL      = layer( "NWELL" )     ; N-Well
    NTN        = layer( "NTN" )     ; Native Device Blocked Implant
    OD         = layer( "PDIFF" "NDIFF" ("DIFF" type("drawing")) )     ; thin oxide
    DOD        = layer( ("DIFF" type("dummy")) )     ; OD dummy fill
    OD2        = layer( "OD2" )     ; Thick Oxide Definition
    POLY1      = layer( ("POLY1" type("drawing")) )     ; Poly Si
    DPO        = layer( ("POLY1" type("dummy")) )     ; Poly Si dummy
    PIMP       = layer( "PIMP" )     ; P+ S/D Implantation
    NIMP       = layer( "NIMP" )     ; N+ S/D Implantation
    VTDN       = layer( "VTDN" )     ;
    HRI        = layer( "HRI" )     ; High Resistor Implant
    CONT       = layer( "CONT" )     ; Contact
    M1         = layer( ("METAL1" type("drawing")) )     ; Metal-1
    VIA1       = layer( "VIA12" )     ; Via1 Hole
    M2         = layer( ("METAL2" type("drawing")) )     ; Metal-2
    VIA2i      = layer( "VIA23" )     ; Via2 Hole
    M3         = layer( ("METAL3" type("drawing")) )     ; Metal-3
    VIA3i      = layer( "VIA34" )     ; Via3 Hole
    M4         = layer( ("METAL4" type("drawing")) )     ; Metal-4
    VIA4i      = layer( "VIA45" )     ; Via4 Hole
    M5         = layer( ("METAL5" type("drawing")) )     ; Metal-5
    VIA5i      = layer( "VIA56" )     ; Via5 Hole
    M6         = layer( ("METAL6" type("drawing")) )     ; Metal-6
    RPO        = layer( "RPO" )     ; Non-salicide OD Area Definition
    PSUB2      = layer( "PSUB2" )     ; apply for subtract2 ground
    RODMY      = layer( "RODUMMY" )     ; dummy layer to remove OD
    BJTDMY     = layer( "BJTDUMMY" )     ; BJT dummy layer to form BJT
    DIODMY     = layer( "PTDIODE" "DIODUMMY" )     ; dummy layer to form diode
    RWDMYX     = layer( "RWDUMMY" )     ; dummy layer to form N-Well resistor
    RPDMYX     = layer( "RHDUMMY" "RPDUMMY" )     ; dummy layer to form OD/POLY resistor
    RLPPDMY    = layer( "RLPPDUMMY" )     ;  dummy layer to form High_Poly resistor
    RMDMY      = layer( ("RMDUMMY" type("drawing")) )     ; dummy layer to form METAL resistor
    RMDMY1i    = layer( ("RMDUMMY" type("drawing1")) )     ; dummy layer to form METAL1 resistor
    RMDMY2i    = layer( ("RMDUMMY" type("drawing2")) )     ; dummy layer to form METAL2 resistor
    RMDMY3i    = layer( ("RMDUMMY" type("drawing3")) )     ; dummy layer to form METAL3 resistor
    RMDMY4i    = layer( ("RMDUMMY" type("drawing4")) )     ; dummy layer to form METAL4 resistor
    RMDMY5i    = layer( ("RMDUMMY" type("drawing5")) )     ; dummy layer to form METAL5 resistor
    RMDMY6i    = layer( ("RMDUMMY" type("drawing6")) )     ; dummy layer to form METAL6 resistor
    PV_P       = layer( "PV_P" )     ; pmos varactor P+ implant layer
    PV_N       = layer( "PV_N" )     ; pmos varactor N+ blocking layer
    INDDMY     = layer( ("INDDUMMY" type("drawing")) )     ; dummy layer to form spiral inductor
    IND_RAD    = layer( ("INDDUMMY" type("drawing2")) )     ; For RF Inductor devices radious
    IND_GDIS   = layer( ("INDDUMMY" type("drawing3")) )     ; For RF Inductor devices guardring distance
    IND_NR     = layer( ("INDDUMMY" type("drawing4")) )     ; For RF Inductor devices turns
    IND_MP     = layer( ("INDDUMMY" type("drawing5")) )     ; For RF Inductor devices mimus pin 
    IND_D4     = layer( ("INDDUMMY" type("drawing6")) )     ; For RF Inductor devices CTAP pin 
    IND_W      = layer( ("INDDUMMY" type("drawing7")) )     ; For RF Inductor devices width 
    IND_S      = layer( ("INDDUMMY" type("drawing8")) )     ; For RF Inductor devices space 
    VARDMYX    = layer( "VARDUMMY" )     ; dummy layer to form Varactor
    ESD3DMY    = layer( "ESD3DUMMY" )     ; ESD3DMY
    RFDUMMYX   = layer( ("RFDUMMY" type("drawing")) )     ; FOR normal RF device dummy layer
    RFDUMMY1   = layer( ("RFDUMMY" type("drawing1")) )     ; FOR RF device additional terminal dummy layer
    RFDUMMY5T  = layer( ("RFDUMMY" type("drawing5")) )     ; For RF_5T Device using only
    RFDUMMY6T  = layer( ("RFDUMMY" type("drawing4")) )     ; For RF_6T Device using only
    RFDUMMYUD  = layer( ("RFDUMMY" type("drawing3")) )     ; Please change RFDMY to be RFDMYUD to allow putting devices under w/i shield RF mimcap Devices (mimcap use only)
    asym_rf    = layer( ("RFDUMMY" type("drawing2")) )     ; FOR RF device special recognition. 
    VARG3      = layer( ("VARDUMMY" type("drawing1")) )     ; dummy layer for RF mos varactor moscap_g3
    VARG6      = layer( ("VARDUMMY" type("drawing2")) )     ; dummy layer for RF mos varactor moscap_g6
    JVARD      = layer( ("VARDUMMY" type("drawing3")) )     ; dummy layer for RF junction varactor xjvar
    CTM2       = layer( ("CTM2" type("drawing")) )     ; Capacitor Top Metal-2
    CTM3       = layer( ("CTM3" type("drawing")) )     ; Capacitor Top Metal-3
    CTM4       = layer( ("CTM4" type("drawing")) )     ; Capacitor Top Metal-4
    CTM5       = layer( ("CTM5" type("drawing")) )     ; Capacitor Top Metal-5
    CTMDMY     = layer( ("CTMDUMMY" type("drawing")) )     ; dummy layer for MIMCAP
    CTMDMY1p0  = layer( ("CTMDUMMY" type("drawing2")) )     ; dummy layer for MIMCAP (1p0)
    CTMDMY1p5  = layer( ("CTMDUMMY" type("drawing3")) )     ; dummy layer for MIMCAP (1p5)
    CTMDMY2p0  = layer( ("CTMDUMMY" type("drawing4")) )     ; dummy layer for MIMCAP (2p0)
    CTMDMY_3t  = layer( ("CTMDUMMY" type("drawing1")) )     ; dummy layer for MIMCAP (3t)
    CTMDMYUD   = layer( ("CTMDUMMY" type("drawing5")) )     ; Please add CTMDMYUD to allow putting devices under 2T BB mimcap Devices (mimcap use only)
    PLMIDE     = layer( ("PLMIDE" type("drawing")) )     ; Polyimide
    VIAD       = layer( "VIAD" )     ; VIA between MD and Mtop
    MD         = layer( "MD" )     ; RDL layer (Cu)
    CBD        = layer( "CBD" )     ; 
    UBM        = layer( "UBM" )     ; Under bump metal
    TSVI       = layer( "TSV" )     ; i-TSV (in-process through-silicon-via etching)
    DTSVI      = layer( ("TSV" type("pin")) )     ; dummy pattern of I-TSV
    DUM1       = layer( ("METAL1" type("dummy")) )     ; dummy metal M1
    DUM2       = layer( ("METAL2" type("dummy")) )     ; dummy metal M2
    DUM3       = layer( ("METAL3" type("dummy")) )     ; dummy metal M3
    DUM4       = layer( ("METAL4" type("dummy")) )     ; dummy metal M4
    DUM5       = layer( ("METAL5" type("dummy")) )     ; dummy metal M5
    DUM6       = layer( ("METAL6" type("dummy")) )     ; dummy metal M6
    M1SLOT     = layer( ("METAL1" type("slot")) )     ; M1 slot
    M2SLOT     = layer( ("METAL2" type("slot")) )     ; M2 slot
    M3SLOT     = layer( ("METAL3" type("slot")) )     ; M3 slot
    M4SLOT     = layer( ("METAL4" type("slot")) )     ; M4 slot
    M5SLOT     = layer( ("METAL5" type("slot")) )     ; M5 slot
    M6SLOT     = layer( ("METAL6" type("slot")) )     ; M6 slot
    DRAIN      = layer( ("DIFF" type("drain")) )     ; Drain layer for mos drain terminal
    RWDMY1     = layer( ("RWDUMMY" type("drawing1")) )     ; dummy layer to form N-Well resistor 3 terminals
    RPDMY1     = layer( ("RPDUMMY" type("drawing1")) )     ; dummy layer to form OD/POLY resistor 3 terminals
    SBDUMMY    = layer( ("SBDDMY" type("drawing")) )     ; dummy layer to form schottky diode
    MOMDMY0    = layer( ("MOMDMY" type("drawing")) )     ; MOM dummy for crtmom
    MOMDMY1    = layer( ("MOMDMY" type("drawing1")) )     ; MOM dummy for crtmom
    MOMDMY2    = layer( ("MOMDMY" type("drawing2")) )     ; MOM dummy for crtmom
    MOMDMY3    = layer( ("MOMDMY" type("drawing3")) )     ; MOM dummy for crtmom
    MOMDMY4    = layer( ("MOMDMY" type("drawing4")) )     ; MOM dummy for crtmom
    MOMDMY5    = layer( ("MOMDMY" type("drawing5")) )     ; MOM dummy for crtmom
    MOMDMY6    = layer( ("MOMDMY" type("drawing6")) )     ; MOM dummy for crtmom
    MOMDMY22   = layer( ("MOMDMY" type("dummy")) )     ; MOM dummy for MX mom
    MOMDMY23   = layer( ("MOMDMY" type("dummy1")) )     ; MOM dummy for MX mom plus1 & minus1
    MOMDMY24   = layer( ("MOMDMY" type("dummy2")) )     ; MOM dummy for MX mom plus2 & minus2
    MOMDMY25   = layer( ("MOMDMY" type("dummy3")) )     ; MOM dummy for MX mom plus1 & plus2
    MOMDMY100  = layer( ("MOMDMY" type("dummy4")) )     ; MOM dummy for fmom
    LVSDMY     = layer( ("LVSDMY" type("dummy1")) )     ; LVS dummy layer for mismatch device
    IP_MIG     = layer( ("IP_MIG" type("drawing")) )     ; Non-shrinkable dummy layer for mimcap
    CELLM      = layer( ("IMSOR" type("CELLMV")) )     ; Define blocking region of Cell VT implantation for medium VT NMOS 
    CELLH      = layer( ("IMSOR" type("CELLH")) )     ; Define Cell High VT implantation (only for standard CIS)
    NPS        = layer( ("IMSOR" type("NPS")) )     ; Define N type photo sensor implantation
    PL         = layer( ("IMSOR" type("PL")) )     ; 
    GM         = layer( ("IMSOR" type("GM")) )     ;
    RM         = layer( ("IMSOR" type("RM")) )     ;
    BM         = layer( ("IMSOR" type("BM")) )     ;
    ML         = layer( ("IMSOR" type("ML")) )     ;
    PPS        = layer( ("IMSOR" type("PPS")) )     ; Define P type photo sensor implantation
    NMOS_VT    = layer( ("IMSOR" type("NMOS_VT")) )     ; For logic VT implant
    CI         = layer( ("IMSOR" type("CI")) )     ; 
    CIRPO      = layer( ("IMSOR" type("CIRPO")) )     ; Define od salicide protection in pixel
    GM1        = layer( ("IMSOR" type("GM1")) )     ;
    GM2        = layer( ("IMSOR" type("GM2")) )     ;
    CELLD      = layer( ("IMSOR" type("CELLD")) )     ;
    BGP        = layer( ("IMSOR" type("BGP")) )     ;
    BGN        = layer( ("IMSOR" type("BGN")) )     ;
    CELL_TX    = layer( ("IMSOR" type("CELL_TX")) )     ;
    CELL_RS    = layer( ("IMSOR" type("CELL_RS")) )     ;
    CAP_IMP    = layer( ("IMSOR" type("CAP_IMP")) )     ; polycap implant
    CELL_SL    = layer( ("IMSOR" type("SEL")) )     ; 
    BASE_N     = layer( ("BASE_N" type("drawing")) )     ;
    LDDMY      = layer( ("LDDMY" type("drawing")) )     ; dummy layer to cover HVMOS area 
    SH_P       = layer( ("HV" type("SH_P")) )     ; layer to define 5V PW implant area for HV device
    ESD2DUMMY  = layer( ("ESD2DUMMY" type("drawing")) )     ; for lcesd1_rf and lcesd2_rf devices
    lcesd1     = layer( ("RFDUMMY" type("drawing6")) )     ; dummy layer for lcesd1_rf device
    lcesd2     = layer( ("RFDUMMY" type("drawing7")) )     ; dummy layer for lcesd2_rf device
    lcesd_p    = layer( ("RFDUMMY" type("drawing8")) )     ; dummy layer for rf lcesd device's PLUS pin
    lcesd_m    = layer( ("RFDUMMY" type("drawing9")) )     ; dummy layer for rf lcesd device's MINUS pin
  ; text layer for recognition
    IND_TEXT     = text( "INDDUMMY" type("drawing9") idOnly)
  ; define no port text layer
  ; define text layer 
    metal1_text  = textToPin( "METAL1" type("pin")) 
    metal2_text  = textToPin( "METAL2" type("pin")) 
    metal3_text  = textToPin( "METAL3" type("pin")) 
    metal4_text  = textToPin( "METAL4" type("pin")) 
    metal5_text  = textToPin( "METAL5" type("pin")) 
    metal6_text  = textToPin( "METAL6" type("pin")) 
    metal1_ptext  = pinText( "METAL1" )
    metal2_ptext  = pinText( "METAL2" )
    metal3_ptext  = pinText( "METAL3" )
    metal4_ptext  = pinText( "METAL4" )
    metal5_ptext  = pinText( "METAL5" )
    metal6_ptext  = pinText( "METAL6" )
); end df2 layerDefs 


layerDefs( "gds2" 
    PWELLX     = layer(    1 )     ; P-Well   for cis 
    DMP2V      = layer(  149 )     ; dummy layer to avoid P2V in P+ poly resistor
    DMN2V      = layer(  184 )     ; dummy layer to avoid N2V in N+ poly resistor
    VTMP       = layer(   23 )     ;  blocking region of PMOS VT implantation
    VTMN       = layer(   24 )     ;  blocking region of NMOS VT implantation
    DNW        = layer(   82 )     ; Deep N-Well
    NWELL      = layer(    2 )     ; N-Well
    NTN        = layer(  129 )     ; Native Device Blocked Implant
    OD         = layer(   11   12 (    3 type(  0 2 4:255)) )     ; thin oxide
    DOD        = layer(    3 type(  1) )     ; OD dummy fill
    OD2        = layer(    4 )     ; Thick Oxide Definition
    POLY1      = layer( (   13 type(  0 2:255)) )     ; Poly Si
    DPO        = layer(   13 type(  1) )     ; Poly Si dummy
    PIMP       = layer(    7 )     ; P+ S/D Implantation
    NIMP       = layer(    8 )     ; N+ S/D Implantation
    VTDN       = layer(   26 )     ;
    HRI        = layer(   48 )     ; High Resistor Implant
    CONT       = layer(   15 )     ; Contact
    M1         = layer( (   16 type(  0 3:255)) )     ; Metal-1
    VIA1       = layer(   17 )     ; Via1 Hole
    M2         = layer( (   18 type(  0 3:255)) )     ; Metal-2
    VIA2i      = layer(   27 )     ; Via2 Hole
    M3         = layer( (   28 type(  0 3:255)) )     ; Metal-3
    VIA3i      = layer(   29 )     ; Via3 Hole
    M4         = layer( (   31 type(  0 3:255)) )     ; Metal-4
    VIA4i      = layer(   32 )     ; Via4 Hole
    M5         = layer( (   33 type(  0 3:255)) )     ; Metal-5
    VIA5i      = layer(   39 )     ; Via5 Hole
    M6         = layer( (   38 type(  0 3:255)) )     ; Metal-6
    RPO        = layer(   34 )     ; Non-salicide OD Area Definition
    PSUB2      = layer(   50 )     ; apply for subtract2 ground
    RODMY      = layer(   75 )     ; dummy layer to remove OD
    BJTDMY     = layer(   49 )     ; BJT dummy layer to form BJT
    DIODMY     = layer(   37   56 )     ; dummy layer to form diode
    RWDMYX     = layer(   52 )     ; dummy layer to form N-Well resistor
    RPDMYX     = layer(  132   54 )     ; dummy layer to form OD/POLY resistor
    RLPPDMY    = layer(  134 )     ;  dummy layer to form High_Poly resistor
    RMDMY      = layer(   69 type(  0) )     ; dummy layer to form METAL resistor
    RMDMY1i    = layer(   69 type(  1) )     ; dummy layer to form METAL1 resistor
    RMDMY2i    = layer(   69 type(  2) )     ; dummy layer to form METAL2 resistor
    RMDMY3i    = layer(   69 type(  3) )     ; dummy layer to form METAL3 resistor
    RMDMY4i    = layer(   69 type(  4) )     ; dummy layer to form METAL4 resistor
    RMDMY5i    = layer(   69 type(  5) )     ; dummy layer to form METAL5 resistor
    RMDMY6i    = layer(   69 type(  6) )     ; dummy layer to form METAL6 resistor
    PV_P       = layer(   71 )     ; pmos varactor P+ implant layer
    PV_N       = layer(   72 )     ; pmos varactor N+ blocking layer
    INDDMY     = layer(  139 type(  0) )     ; dummy layer to form spiral inductor
    IND_RAD    = layer(  139 type( 30) )     ; For RF Inductor devices radious
    IND_GDIS   = layer(  139 type( 31) )     ; For RF Inductor devices guardring distance
    IND_NR     = layer(  139 type( 32) )     ; For RF Inductor devices turns
    IND_MP     = layer(  139 type( 33) )     ; For RF Inductor devices mimus pin 
    IND_D4     = layer(  139 type( 34) )     ; For RF Inductor devices CTAP pin 
    IND_W      = layer(  139 type( 35) )     ; For RF Inductor devices width 
    IND_S      = layer(  139 type( 36) )     ; For RF Inductor devices space 
    VARDMYX    = layer(  138 )     ; dummy layer to form Varactor
    ESD3DMY    = layer(  234 )     ; ESD3DMY
    RFDUMMYX   = layer( (  160 type(  0 9:49 51:255)) )     ; FOR normal RF device dummy layer
    RFDUMMY1   = layer(  160 type(  1) )     ; FOR RF device additional terminal dummy layer
    RFDUMMY5T  = layer(  160 type(  3) )     ; For RF_5T Device using only
    RFDUMMY6T  = layer(  160 type(  4) )     ; For RF_6T Device using only
    RFDUMMYUD  = layer(  160 type( 50) )     ; Please change RFDMY to be RFDMYUD to allow putting devices under w/i shield RF mimcap Devices (mimcap use only)
    asym_rf    = layer(  160 type(  2) )     ; FOR RF device special recognition. 
    VARG3      = layer(  138 type(  1) )     ; dummy layer for RF mos varactor moscap_g3
    VARG6      = layer(  138 type(  2) )     ; dummy layer for RF mos varactor moscap_g6
    JVARD      = layer(  138 type(  3) )     ; dummy layer for RF junction varactor xjvar
    CTM2       = layer(   67 type(  2) )     ; Capacitor Top Metal-2
    CTM3       = layer(   67 type(  3) )     ; Capacitor Top Metal-3
    CTM4       = layer(   67 type(  4) )     ; Capacitor Top Metal-4
    CTM5       = layer(   67 type(  5) )     ; Capacitor Top Metal-5
    CTMDMY     = layer(  131 type(  0) )     ; dummy layer for MIMCAP
    CTMDMY1p0  = layer(  131 type( 10) )     ; dummy layer for MIMCAP (1p0)
    CTMDMY1p5  = layer(  131 type( 15) )     ; dummy layer for MIMCAP (1p5)
    CTMDMY2p0  = layer(  131 type( 20) )     ; dummy layer for MIMCAP (2p0)
    CTMDMY_3t  = layer(  131 type( 21) )     ; dummy layer for MIMCAP (3t)
    CTMDMYUD   = layer(  131 type( 50) )     ; Please add CTMDMYUD to allow putting devices under 2T BB mimcap Devices (mimcap use only)
    PLMIDE     = layer(   89 type(  0) )     ; Polyimide
    VIAD       = layer(  167 )     ; VIA between MD and Mtop
    MD         = layer(  168 )     ; RDL layer (Cu)
    CBD        = layer(  169 )     ; 
    UBM        = layer(  170 )     ; Under bump metal
    TSVI       = layer(  251 )     ; i-TSV (in-process through-silicon-via etching)
    DTSVI      = layer(  251 type(  1) )     ; dummy pattern of I-TSV
    DUM1       = layer(   16 type(  1) )     ; dummy metal M1
    DUM2       = layer(   18 type(  1) )     ; dummy metal M2
    DUM3       = layer(   28 type(  1) )     ; dummy metal M3
    DUM4       = layer(   31 type(  1) )     ; dummy metal M4
    DUM5       = layer(   33 type(  1) )     ; dummy metal M5
    DUM6       = layer(   38 type(  1) )     ; dummy metal M6
    M1SLOT     = layer(   16 type(  2) )     ; M1 slot
    M2SLOT     = layer(   18 type(  2) )     ; M2 slot
    M3SLOT     = layer(   28 type(  2) )     ; M3 slot
    M4SLOT     = layer(   31 type(  2) )     ; M4 slot
    M5SLOT     = layer(   33 type(  2) )     ; M5 slot
    M6SLOT     = layer(   38 type(  2) )     ; M6 slot
    DRAIN      = layer(    3 type(  3) )     ; Drain layer for mos drain terminal
    RWDMY1     = layer(   52 type(  1) )     ; dummy layer to form N-Well resistor 3 terminals
    RPDMY1     = layer(   54 type(  1) )     ; dummy layer to form OD/POLY resistor 3 terminals
    SBDUMMY    = layer(  144 type(  0) )     ; dummy layer to form schottky diode
    MOMDMY0    = layer(  145 type(  0) )     ; MOM dummy for crtmom
    MOMDMY1    = layer(  145 type(  1) )     ; MOM dummy for crtmom
    MOMDMY2    = layer(  145 type(  2) )     ; MOM dummy for crtmom
    MOMDMY3    = layer(  145 type(  3) )     ; MOM dummy for crtmom
    MOMDMY4    = layer(  145 type(  4) )     ; MOM dummy for crtmom
    MOMDMY5    = layer(  145 type(  5) )     ; MOM dummy for crtmom
    MOMDMY6    = layer(  145 type(  6) )     ; MOM dummy for crtmom
    MOMDMY22   = layer(  145 type( 22) )     ; MOM dummy for MX mom
    MOMDMY23   = layer(  145 type( 23) )     ; MOM dummy for MX mom plus1 & minus1
    MOMDMY24   = layer(  145 type( 24) )     ; MOM dummy for MX mom plus2 & minus2
    MOMDMY25   = layer(  145 type( 25) )     ; MOM dummy for MX mom plus1 & plus2
    MOMDMY100  = layer(  145 type(100) )     ; MOM dummy for fmom
    LVSDMY     = layer(  208 type(  1) )     ; LVS dummy layer for mismatch device
    IP_MIG     = layer(   63 type(180) )     ; Non-shrinkable dummy layer for mimcap
    CELLM      = layer(  133 type(  0) )     ; Define blocking region of Cell VT implantation for medium VT NMOS 
    CELLH      = layer(  133 type(  1) )     ; Define Cell High VT implantation (only for standard CIS)
    NPS        = layer(  133 type(  2) )     ; Define N type photo sensor implantation
    PL         = layer(  133 type(  3) )     ; 
    GM         = layer(  133 type(  4) )     ;
    RM         = layer(  133 type(  5) )     ;
    BM         = layer(  133 type(  6) )     ;
    ML         = layer(  133 type(  7) )     ;
    PPS        = layer(  133 type(  8) )     ; Define P type photo sensor implantation
    NMOS_VT    = layer(  133 type(  9) )     ; For logic VT implant
    CI         = layer(  133 type( 10) )     ; 
    CIRPO      = layer(  133 type( 11) )     ; Define od salicide protection in pixel
    GM1        = layer(  133 type( 12) )     ;
    GM2        = layer(  133 type( 13) )     ;
    CELLD      = layer(  133 type( 14) )     ;
    BGP        = layer(  133 type( 21) )     ;
    BGN        = layer(  133 type( 22) )     ;
    CELL_TX    = layer(  133 type( 23) )     ;
    CELL_RS    = layer(  133 type( 24) )     ;
    CAP_IMP    = layer(  133 type( 25) )     ; polycap implant
    CELL_SL    = layer(  133 type( 30) )     ; 
    BASE_N     = layer(  250 type(  1) )     ;
    LDDMY      = layer(  127 type(  0) )     ; dummy layer to cover HVMOS area 
    SH_P       = layer(  141 type(  1) )     ; layer to define 5V PW implant area for HV device
    ESD2DUMMY  = layer(  137 type(  0) )     ; for lcesd1_rf and lcesd2_rf devices
    lcesd1     = layer(  160 type(  5) )     ; dummy layer for lcesd1_rf device
    lcesd2     = layer(  160 type(  6) )     ; dummy layer for lcesd2_rf device
    lcesd_p    = layer(  160 type(  7) )     ; dummy layer for rf lcesd device's PLUS pin
    lcesd_m    = layer(  160 type(  8) )     ; dummy layer for rf lcesd device's MINUS pin
    IND_TEXT     = text( 139 type( 37) idOnly)
  ; define no port text layer 
  ; define text layer 
    metal1_text  = textToPin(  40 )
    metal2_text  = textToPin(  41 )
    metal3_text  = textToPin(  42 )
    metal4_text  = textToPin(  43 )
    metal5_text  = textToPin(  44 )
    metal6_text  = textToPin(  45 )
    metal1_ptext  = textToPin(  40 )
    metal2_ptext  = textToPin(  41 )
    metal3_ptext  = textToPin(  42 )
    metal4_ptext  = textToPin(  43 )
    metal5_ptext  = textToPin(  44 )
    metal6_ptext  = textToPin(  45 )
); end gds2 layerDefs 
; #############################################
; # LOGIC OPERATION POOL                      #
; #############################################

; Form BULK layer
 BULK1       = geomBkgnd() 
 BULK        = geomSize( BULK1 0.005)

; ***** Define connectivity/via layer -- mom5m2 ****
M5X = geomOr(M5 DUM5)  ;
M5Y = geomAndNot(M5X M5SLOT)  ;
RMDMY5 = geomOr(RMDMY5i RMDMY)  ;
M5Z = geomAnd(M5Y RMDMY5)  ;
mt5res = geomButtOrOver(M5Z M5)  ; metal5 resistor
mt5x = geomAndNot(M5Y mt5res)  ;
ind_dmy1 = geomAnd(RFDUMMY1 INDDMY)  ;
ind_dmy2 = geomAnd(ind_dmy1 NTN)  ;
ind_dmy = geomSize(ind_dmy2 -0.005)  ;
metal5 = geomAndNot(mt5x ind_dmy)  ;
mom5p21 = geomAnd(metal5 MOMDMY24)  ;
mom5m2 = geomAndNot(mom5p21 geomButtOrOver(mom5p21 MOMDMY25))  ;

; ***** Define connectivity/via layer -- emit ****
diff1 = geomOr(OD DOD)  ;
diff = geomAndNot(diff1 RODMY)  ;
dfhr1 = geomAnd(diff RPO)  ;
RPDMY = geomAndNot(RPDMYX RPDMY1)  ;
drdum = geomButtOrOver(RPDMY diff)  ; diff resistor dummy
rdop1 = geomButtOrOver(dfhr1 drdum)  ;
mdiff1 = geomAndNot(diff rdop1)  ;
dflr1 = geomAnd(diff drdum)  ;
rdip = geomAndNot(dflr1 geomButtOrOver(dflr1 RPO))  ;
mdiff2 = geomAndNot(mdiff1 rdip)  ;
t_rdop1 = geomButtOrOver(dfhr1 RPDMY1)  ;
t_rdop2 = geomButtOrOver(t_rdop1 OD)  ;
RFDUMMY = geomAndNot(RFDUMMYX RFDUMMY1)  ;
t_rdop = geomAndNot(t_rdop2 RFDUMMY)  ;
mdiff3 = geomAndNot(mdiff2 t_rdop)  ;
t_dflr1 = geomAnd(diff RPDMY1)  ;
t_rdip1 = geomAndNot(t_dflr1 geomButtOrOver(t_dflr1 RPO))  ;
t_rdip = geomButtOrOver(t_rdip1 OD)  ;
mdiff = geomAndNot(mdiff3 t_rdip)  ;
pthin = geomAnd(mdiff PIMP)  ; define P+ thin oxide
rpoly = geomOr(POLY1 DPO)  ;
p1hr1 = geomAnd(rpoly RPO)  ;
RPDMYa = geomOr(RPDMYX RPDMY1)  ;
rpa = geomAndNot(RPDMYa geomButtOrOver(RPDMYa diff))  ;
prduma = geomButtOrOver(rpa rpoly)  ;
rpop1 = geomButtOrOver(p1hr1 prduma)  ;
hripo1 = geomAnd(rpop1 HRI)  ;
hripo2 = geomAnd(hripo1 RLPPDMY)  ;
hripo3 = geomAndNot(hripo2 NIMP)  ;
hripo4 = geomAndNot(hripo3 PIMP)  ;
lrpop1 = geomAndNot(hripo4 RFDUMMY1)  ;
lrpop2 = geomButtOrOver(lrpop1 POLY1)  ;
poly1a = geomAndNot(rpoly lrpop2)  ;
lrpop_rf = geomAnd(hripo4 RFDUMMY1)  ; RF HRI high poly resistor
poly2 = geomAndNot(poly1a lrpop_rf)  ;
rpop = geomAndNot(rpop1 geomButtOrOver(rpop1 hripo1))  ;
poly3 = geomAndNot(poly2 rpop)  ;
p1lr1 = geomAnd(rpoly prduma)  ;
rpip = geomAndNot(p1lr1 geomButtOrOver(p1lr1 RPO))  ;
poly4 = geomAndNot(poly3 rpip)  ; Interconnect poly
MOMDMYall_0 = geomOr(MOMDMY0 MOMDMY1)  ;
MOMDMYall_1 = geomOr(MOMDMYall_0 MOMDMY2)  ;
MOMDMYall_2 = geomOr(MOMDMYall_1 MOMDMY3)  ;
MOMDMYall_3 = geomOr(MOMDMYall_2 MOMDMY4)  ;
MOMDMYall_4 = geomOr(MOMDMYall_3 MOMDMY5)  ;
MOMDMYall_5 = geomOr(MOMDMYall_4 MOMDMY6)  ;
poly = geomAndNot(poly4 MOMDMYall_5)  ;
gate = geomAnd(poly mdiff)  ;
tpdiff = geomAndNot(pthin gate)  ; define P+ diffusion region
ttdiff = geomAnd(tpdiff BJTDMY)  ;
anwel = geomOr(NWELL BASE_N)  ;
RWDMY = geomAndNot(RWDMYX RWDMY1)  ;
nxwell_a = geomAndNot(anwel RWDMY)  ; define N_well region
nxwell = geomAndNot(nxwell_a RWDMY1)  ;
nbase_a = geomAndNot(nxwell geomButtOrOver(nxwell DNW))  ;
nbase_gen = geomAnd(nbase_a BJTDMY)  ;
emit_gen = geomAnd(ttdiff nbase_gen)  ;
emit = geomAndNot(emit_gen OD2)  ; define 1.8V BJT[PV] emitter

; ***** Define connectivity/via layer -- ydio_hole ****
ydio_a = geomAnd(ESD3DMY OD)  ;
ydio_c = geomSize(ydio_a -0.2)  ;
ydio_d = geomAnd(ydio_c NIMP)  ;
ydio_e = geomAnd(ydio_d RPO)  ;
ydio_f = geomAndNot(ydio_e NWELL)  ;
ydio_g = geomAnd(ESD3DMY POLY1)  ;
ydio_h = geomSize(ydio_g 0.2)  ;
ydio_i = geomAndNot(ydio_f ydio_h)  ;
ydio_j = geomSize(ydio_i -0.8)  ;
ydio = geomSize(ydio_j 0.6)  ;
ydio_hole = geomHoles(ydio)  ;

; ***** Define connectivity/via layer -- mom4m1 ****
M4X = geomOr(M4 DUM4)  ;
M4Y = geomAndNot(M4X M4SLOT)  ;
RMDMY4 = geomOr(RMDMY4i RMDMY)  ;
M4Z = geomAnd(M4Y RMDMY4)  ;
mt4res = geomButtOrOver(M4Z M4)  ; metal4 resistor
metal4 = geomAndNot(M4Y mt4res)  ; metal4 interconnect
mom4p11 = geomAnd(metal4 MOMDMY23)  ;
mom4m1 = geomAndNot(mom4p11 geomButtOrOver(mom4p11 MOMDMY25))  ;

; ***** Define connectivity/via layer -- pm_cbd ****
pm_cbd = geomAnd(PLMIDE CBD)  ;

; ***** Define connectivity/via layer -- indm4c ****
indm6a = geomSize(INDDMY 0.005)  ;
indm4 = geomAnd(indm6a M4Y)  ;
indm4c = geomAnd(indm4 IND_D4)  ;

; ***** Define connectivity/via layer -- rw ****
ppsub = geomAndNot(BULK anwel)  ;
psub2s = geomSize(PSUB2 0.01)  ;
psubband = geomAndNot(psub2s PSUB2)  ; psub separator band (doughnut).
psub_w5w6 = geomAndNot(ppsub psubband)  ;
rw = geomInside(psub_w5w6 DNW)  ;

; ***** Define connectivity/via layer -- lcesdm ****
nthin1 = geomAnd(mdiff NIMP)  ;
nthin = geomAndNot(nthin1 ydio)  ; define N+ thin oxide
tndiff = geomAndNot(nthin gate)  ; define N+ diffusion region
lcesdm = geomAnd(tndiff lcesd_m)  ;

; ***** Define connectivity/via layer -- nplug ****
nplug = geomAnd(tndiff nxwell)  ; define N_well contact

; ***** Define connectivity/via layer -- mom5m1 ****
mom5p11 = geomAnd(metal5 MOMDMY23)  ;
mom5m1 = geomAndNot(mom5p11 geomButtOrOver(mom5p11 MOMDMY25))  ;

; ***** Define connectivity/via layer -- lcesdp ****
lcesdp = geomAnd(tpdiff lcesd_p)  ;

; ***** Define connectivity/via layer -- rfdmy56 ****
rfdmy56 = geomOr(RFDUMMY5T RFDUMMY6T)  ;

; ***** Define connectivity/via layer -- polyCont ****
polyCont = geomButtOrOver(CONT rpoly)  ; define POLY1 contact

; ***** Define connectivity/via layer -- psub ****
psub_norwel = geomAndNot(psub_w5w6 rfdmy56)  ;
psub = geomOr(psub_norwel rw)  ;

; ***** Define connectivity/via layer -- VIA4 ****
cv4 = geomAnd(VIA4i CTM4)  ; via for CTM4/M5
VIA4 = geomAndNot(VIA4i cv4)  ; via for M5/M5

; ***** Define connectivity/via layer -- d_tndiff ****
d_tndiff = geomAnd(tndiff DRAIN)  ;

; ***** Define connectivity/via layer -- ctm ****
ctm = geomCat(CTM5)  ;

; ***** Define connectivity/via layer -- poly_nw ****
poly_term1 = geomAnd(rpoly RPDMY1)  ;
poly_term2 = geomSize(poly_term1 0.005)  ;
poly_term = geomAndNot(poly_term2 poly_term1)  ;
poly_nw = geomAnd(poly_term nxwell)  ;

; ***** Define connectivity/via layer -- mom5p2 ****
mom5p2 = geomButtOrOver(mom5p21 MOMDMY25)  ;

; ***** Define connectivity/via layer -- emit_od2 ****
emit_od2 = geomButtOrOver(emit_gen OD2)  ; define 3.3V BJT[P1] emitter

; ***** Define connectivity/via layer -- mom4p1 ****
mom4p1 = geomButtOrOver(mom4p11 MOMDMY25)  ;

; ***** Define connectivity/via layer -- metal3 ****
M3X = geomOr(M3 DUM3)  ;
M3Y = geomAndNot(M3X M3SLOT)  ;
RMDMY3 = geomOr(RMDMY3i RMDMY)  ;
M3Z = geomAnd(M3Y RMDMY3)  ;
mt3res = geomButtOrOver(M3Z M3)  ; metal3 resistor
metal3 = geomAndNot(M3Y mt3res)  ; metal3 interconnect

; ***** Define connectivity/via layer -- metal2 ****
M2X = geomOr(M2 DUM2)  ;
M2Y = geomAndNot(M2X M2SLOT)  ;
RMDMY2 = geomOr(RMDMY2i RMDMY)  ;
M2Z = geomAnd(M2Y RMDMY2)  ;
mt2res = geomButtOrOver(M2Z M2)  ; metal2 resistor
metal2 = geomAndNot(M2Y mt2res)  ; metal2 interconnect

; ***** Define connectivity/via layer -- ntap ****
ntap1 = geomAnd(tndiff nxwell)  ;
ntap2 = geomButtOrOver(ntap1 CONT)  ;
tpdiffco = geomButtOrOver(tpdiff CONT)  ;
ntap3 = geomButtOrOver(ntap1 tpdiffco)  ;
ntap = geomOr(ntap2 ntap3)  ;

; ***** Define connectivity/via layer -- mom3p2 ****
mom3p21 = geomAnd(metal3 MOMDMY24)  ;
mom3p2 = geomButtOrOver(mom3p21 MOMDMY25)  ;

; ***** Define connectivity/via layer -- s_tndiff ****
s_tndiff1 = geomAndNot(tndiff d_tndiff)  ;
gate_rf1 = geomAnd(gate RFDUMMY1)  ;
poly_rf1 = geomButtOrOver(poly CONT)  ;
poly_rf = geomButtOrOver(poly_rf1 DRAIN)  ;
gate_rf2 = geomAnd(gate_rf1 poly_rf)  ;
VARDMYA1 = geomAndNot(VARDMYX VARG3)  ;
VARDMYA2 = geomAndNot(VARDMYA1 VARG6)  ;
VARDMY = geomAndNot(VARDMYA2 JVARD)  ;
gate_rf3 = geomAndNot(gate_rf2 VARDMY)  ;
gate_rf = geomAndNot(gate_rf3 JVARD)  ;
s_tndiff = geomButtOrOver(s_tndiff1 gate_rf)  ;

; ***** Define connectivity/via layer -- mom3p1 ****
mom3p11 = geomAnd(metal3 MOMDMY23)  ;
mom3p1 = geomButtOrOver(mom3p11 MOMDMY25)  ;

; ***** Define connectivity/via layer -- ctm_via ****
cv5 = geomAnd(VIA5i CTM5)  ; via for CTM5/M6
ctm_via = geomCat(cv5)  ;

; ***** Define connectivity/via layer -- schottky_p ****
schottky_p1 = geomStraddle(diff PIMP)  ;
schottky_p2 = geomAnd(schottky_p1 nxwell)  ;
schottky_p = geomAnd(schottky_p2 SBDUMMY)  ;

; ***** Define connectivity/via layer -- VIA6 ****
VIA6 = geomCat(VIAD)  ;

; ***** Define connectivity/via layer -- dnwc ****
dnwc = geomAnd(DNW nxwell)  ;

; ***** Define connectivity/via layer -- tiod ****
tioda = geomAndNot(diff tpdiff)  ;
tiodb = geomAndNot(tioda tndiff)  ;
tiod1 = geomAndNot(tiodb POLY1)  ;
tiod2 = geomAndNot(tiod1 RPO)  ;
tiod3 = geomAndNot(tiod2 RPDMY)  ;
tiod4 = geomAndNot(tiod3 RPDMY1)  ;
tiod5 = geomAndNot(tiod4 RWDMY1)  ;
tiod = geomAndNot(tiod5 RWDMY)  ; RPO, RPDMY, RWDMY cut ti-od

; ***** Define connectivity/via layer -- ncoll ****
npnrg = geomAnd(DNW BJTDMY)  ; define NPN region
ncollrg = geomAnd(nxwell npnrg)  ;
pbase = geomAnd(psub npnrg)  ;define 1.8V BJT[NV] base terminal
ncoll1 = geomButtOnly(ncollrg pbase)  ;
ncoll = geomOr(ncoll1 pbase)  ;define 1.8V BJT[NV] collector

; ***** Define connectivity/via layer -- coll ****
nbase = geomAndNot(nbase_gen OD2)  ; define 1.8V BJT[PV] base terminal
collsur = geomButtOnly(psub nbase)  ;
coll1a = geomOr(collsur nbase)  ;  define BJT[PV] collector
collsura = geomButtOnly(collsur emit)  ;
coll1b = geomAndNot(coll1a collsura)  ;
coll = geomAndNot(coll1b emit)  ;  define pnp collector

; ***** Define connectivity/via layer -- n_psub ****
nw_dnw1 = geomButtOrOver(NWELL DNW)  ;
nw_dnw = geomButtOrOver(nw_dnw1 rw)  ;
n_ppsub = geomAndNot(BULK nw_dnw)  ;
n_psub = geomAndNot(n_ppsub psubband)  ;

; ***** Define connectivity/via layer -- psub_term ****
psub_term_a = geomAndNot(psub2s PSUB2)  ;
psub_term_b = geomAndNot(BULK psub_term_a)  ;
psub_term_c = geomAnd(BULK DNW)  ;
psub_term_d = geomAndNot(BULK psub_term_c)  ;
psub_term_e = geomAnd(psub_term_b psub_term_d)  ;
psub_term = geomButtOrOver(psub_term_e DNW)  ;

; ***** Define connectivity/via layer -- metal6 ****
M6X = geomOr(M6 DUM6)  ;
M6Y = geomAndNot(M6X M6SLOT)  ;
RMDMY6 = geomOr(RMDMY6i RMDMY)  ;
M6Z = geomAnd(M6Y RMDMY6)  ;
mt6res = geomButtOrOver(M6Z M6)  ; metal6 resistor
mt6x = geomAndNot(M6Y mt6res)  ;
metal6 = geomAndNot(mt6x ind_dmy)  ;

; ***** Define connectivity/via layer -- mim_block ****
mim_block = geomAnd(CTM5 M5)  ;

; ***** Define connectivity/via layer -- metal7 ****
metal7 = geomCat(MD)  ; Mtop+1 as RDL

; ***** Define connectivity/via layer -- s_tpdiff ****
d_tpdiff = geomAnd(tpdiff DRAIN)  ;
s_tpdiff1 = geomAndNot(tpdiff d_tpdiff)  ;
s_tpdiff = geomButtOrOver(s_tpdiff1 gate_rf)  ;

; ***** Define connectivity/via layer -- n_pplug ****
n_pplug1 = geomButtOrOver(mdiff CONT)  ;
n_pplug2 = geomAnd(n_pplug1 PIMP)  ;
n_pplug3 = geomAndNot(n_pplug2 nxwell)  ;
n_pplug = geomAnd(n_pplug3 n_psub)  ;

; ***** Define connectivity/via layer -- mom4p2 ****
mom4p21 = geomAnd(metal4 MOMDMY24)  ;
mom4p2 = geomButtOrOver(mom4p21 MOMDMY25)  ;

; ***** Define connectivity/via layer -- gate1_not_IO1 ****
gate1_not_IO1 = geomAndNot(gate OD2)  ;

; ***** Define connectivity/via layer -- VIA5 ****
tv51 = geomAndNot(VIA5i cv5)  ; 
ind_via = geomAnd(VIA5i ind_dmy)  ;
VIA5 = geomAndNot(tv51 ind_via)  ; via for M5/M6

; ***** Define connectivity/via layer -- mom5p1 ****
mom5p1 = geomButtOrOver(mom5p11 MOMDMY25)  ;

; ***** Define connectivity/via layer -- mim_po ****
capm5a = geomButtOrOver(mim_block VIA5i)  ;
capm5b = geomAndNot(capm5a RFDUMMY)  ;
capm5_rf3ta1 = geomAnd(capm5b CTMDMY)  ;
capm5_rf3ta2 = geomAndNot(capm5_rf3ta1 CTMDMYUD)  ;
capm5_rf3ta3 = geomAnd(capm5_rf3ta2 RFDUMMY1)  ;
capm5_rf3ta = geomAndNot(capm5_rf3ta3 RFDUMMYUD)  ;
capm5_rf3t_shield_poly = geomInside(capm5_rf3ta POLY1)  ; Added by KMLiu
mim_po = geomButtOrOver(POLY1 capm5_rf3t_shield_poly)  ;

; ***** Define connectivity/via layer -- metal1 ****
M1X = geomOr(M1 DUM1)  ;
M1Y = geomAndNot(M1X M1SLOT)  ;
RMDMY1 = geomOr(RMDMY1i RMDMY)  ;
M1Z = geomAnd(M1Y RMDMY1)  ;
mt1res = geomButtOrOver(M1Z M1)  ; metal1 resistor
metal1 = geomAndNot(M1Y mt1res)  ; metal1 interconnect

; ***** Define connectivity/via layer -- mom3m1 ****
mom3m1 = geomAndNot(mom3p11 geomButtOrOver(mom3p11 MOMDMY25))  ;

; ***** Define connectivity/via layer -- rf_pplug ****
rf_pplug1 = geomAnd(tpdiff rfdmy56)  ;
rf_pplug2 = geomButtOrOver(rf_pplug1 CONT)  ;
tndiffco = geomButtOrOver(tndiff CONT)  ;
rf_pplug3 = geomButtOrOver(rf_pplug1 tndiffco)  ;
rf_pplug4 = geomOr(rf_pplug2 rf_pplug3)  ;
rf_pplug5 = geomAndNot(rf_pplug4 psub)  ;
rf_pplug = geomAndNot(rf_pplug5 nxwell)  ;

; ***** Define connectivity/via layer -- nxwell_npn ****
ncolls = geomButtOnly(ncollrg pbase)  ;
nndiff = geomAnd(tndiff npnrg)  ;
nemit = geomAnd(nndiff pbase)  ;define 1.8V BJT[NV] emitter
ncollsa = geomButtOnly(ncolls nemit)  ;
nxwell_npn = geomAndNot(ncolls ncollsa)  ;

; ***** Define connectivity/via layer -- indm6m ****
indm6 = geomAnd(indm6a metal6)  ;
indm6m = geomAnd(indm6 IND_MP)  ;

; ***** Define connectivity/via layer -- ptap ****
ptap1 = geomAnd(tpdiff psub)  ;
ptap2 = geomButtOrOver(ptap1 CONT)  ;
ptap3 = geomButtOrOver(ptap1 tndiffco)  ;
ptap = geomOr(ptap2 ptap3)  ;

; ***** Define connectivity/via layer -- ppoly ****
ppoly = geomAnd(poly PIMP)  ; For HRI high poly resistor terminals

; ***** Define connectivity/via layer -- mom4m2 ****
mom4m2 = geomAndNot(mom4p21 geomButtOrOver(mom4p21 MOMDMY25))  ;

; ***** Define connectivity/via layer -- VIA2 ****
cv2 = geomAnd(VIA2i CTM2)  ; via for CTM2/M3
VIA2 = geomAndNot(VIA2i cv2)  ; via for M3/M3

; ***** Define connectivity/via layer -- VIA3 ****
cv3 = geomAnd(VIA3i CTM3)  ; via for CTM3/M4
VIA3 = geomAndNot(VIA3i cv3)  ; via for M4/M4

; ***** Define connectivity/via layer -- pplug ****
pplug = geomAnd(tpdiff psub)  ; define p_sub contact

; ***** Define connectivity/via layer -- indm6p ****
indm6p1 = geomAndNot(indm6 IND_MP)  ;
indm6p2 = geomAndNot(indm6p1 geomButtOrOver(indm6p1 IND_MP))  ;
indm6p = geomAndNot(indm6p2 IND_D4)  ;

; ***** Define connectivity/via layer -- schottky_n ****
schottky_n1 = geomAnd(mdiff NIMP)  ;
schottky_n2 = geomAnd(schottky_n1 nxwell)  ;
schottky_n = geomAnd(schottky_n2 SBDUMMY)  ;

; ***** Define connectivity/via layer -- mom3m2 ****
mom3m2 = geomAndNot(mom3p21 geomButtOrOver(mom3p21 MOMDMY25))  ;

; ***** Define connectivity/via layer -- odCont ****
odCont = geomAndNot(CONT polyCont)  ; define OD contact 

; ***** Define connectivity/via layer -- nbase_od2 ****
nbase_od2 = geomButtOrOver(nbase_gen OD2)  ; define 3.3V BJT[P1] base terminal

; ***** Define connectivity/via layer -- crt_poly ****
crt_poly = geomAndNot(poly4 poly)  ;

; ***** Define connectivity/via layer -- poly_psub ****
poly_psub = geomAnd(poly_term psub)  ;

; ***** Define connectivity/via layer -- coll_od2 ****
collsur_3 = geomButtOnly(psub nbase_od2)  ;
coll2a = geomOr(collsur_3 nbase_od2)  ;  define BJT[PV] collector
collsurb = geomButtOnly(collsur_3 emit_od2)  ;
coll2b = geomAndNot(coll2a collsurb)  ;
coll_od2 = geomAndNot(coll2b emit_od2)  ;  define pnp collector

; ***** Define connectivity/via layer -- rfdmy56_via ****
rfdmy56gr = geomSize(rfdmy56 0.005)  ;
rfdmy56band = geomAndNot(rfdmy56gr rfdmy56)  ;
rfdmy56_via = geomAnd(rfdmy56band psub)  ;
std_mu_x_20k_ind = geomGetTexted( INDDMY IND_TEXT "spiral_std_mu_x_20k" )
sym_mu_x_20k_ind = geomGetTexted( INDDMY IND_TEXT "spiral_sym_mu_x_20k" )
sym_ct_mu_x_20k_ind = geomGetTexted( INDDMY IND_TEXT "spiral_sym_ct_mu_x_20k" )

;//#############################################
;//# FORM DEVICE LAYER                         #
;//#############################################
;
;* Define device -- nmos N
gate_rf_mdiff = geomButtOrOver(mdiff gate_rf)  ;
gate_norf = geomAndNot(gate gate_rf_mdiff)  ;
tngate1 = geomAnd(gate_norf NIMP)  ;
tngate2 = geomAndNot(tngate1 nxwell)  ;
tngate3 = geomAndNot(tngate2 LDDMY)  ;
tngate4 = geomAndNot(tngate3 CIRPO)  ;
tngate5 = geomAndNot(tngate4 lcesd1)  ;
tngate = geomAndNot(tngate5 lcesd2)  ;
ngate1 = geomAndNot(tngate OD2)  ;
ngate3 = geomAndNot(ngate1 NTN)  ;
ngate4 = geomAndNot(ngate3 DNW)  ;
ngate5 = geomAndNot(ngate4 VTMN)  ;
ngate6 = geomAndNot(ngate5 RFDUMMY)  ;
if( avSwitch("MACRO") then;
MAC = geomCat(OD);
else;
od_1 = geomSize(OD 0.005);
MAC = geomAndNot(OD od_1);
) ;if 
ngate = geomAndNot(ngate6 MAC)  ; 1.8V Nominal VT NMOS
;
;* Define device -- nmos N1
nrgate1 = geomAnd(ngate3 DNW)  ;
nrgate2 = geomAndNot(nrgate1 VTMN)  ;
nrgate3 = geomAndNot(nrgate2 RFDUMMY)  ;
nrgate = geomAndNot(nrgate3 MAC)  ; 1.8V nominal VT NMOS on DNW
;
;* Define device -- nmos ND
bngate1 = geomAnd(tngate OD2)  ;
bngate2 = geomAndNot(bngate1 NTN)  ;
bngate3 = geomAndNot(bngate2 DNW)  ;
bngate4 = geomAndNot(bngate3 CAP_IMP)  ;
bngate5 = geomAndNot(bngate4 VTMN)  ;
bngate6 = geomAndNot(bngate5 RFDUMMY)  ;
bngate = geomAndNot(bngate6 MAC)  ; 3.3/5V Nominal VT NMOS
;
;* Define device -- nmos N2
bnrgate1 = geomAnd(bngate2 DNW)  ;
bnrgate2 = geomAndNot(bnrgate1 RFDUMMY)  ;
bnrgate = geomAndNot(bnrgate2 MAC)  ; 3.3/5V nominal VT NMOS on DNW
;
;* Define device -- nmos NL
nlgate1 = geomAnd(ngate1 NTN)  ;
nlgate2 = geomAndNot(nlgate1 RFDUMMY)  ;
nlgate = geomAndNot(nlgate2 MAC)  ; 1.8V native NMOS
;
;* Define device -- nmos NN
bnlgate1 = geomAnd(bngate1 NTN)  ;
bnlgate2 = geomAndNot(bnlgate1 RFDUMMY)  ;
bnlgate = geomAndNot(bnlgate2 MAC)  ; 3.3/5V native NMOS
;
;* Define device -- pmos P
tpgate1 = geomAnd(gate_norf PIMP)  ;
tpgate2 = geomAndNot(tpgate1 LDDMY)  ;
tpgate = geomAnd(tpgate2 nxwell)  ;
pgate1 = geomAndNot(tpgate OD2)  ;
pgate2 = geomAndNot(pgate1 VTMP)  ;
pgate3 = geomAndNot(pgate2 RFDUMMY)  ;
pgate = geomAndNot(pgate3 MAC)  ; 1.8V Norminal VT PMOS
;
;* Define device -- pmos PD
bpgate1 = geomAnd(tpgate OD2)  ;
bpgate2 = geomAndNot(bpgate1 VTMP)  ;
bpgate4 = geomAndNot(bpgate2 RFDUMMY)  ;
bpgate = geomAndNot(bpgate4 MAC)  ; 3.3V Nominal VT PMOS
;
;* Define device -- nmos NA
mvt_ngate1 = geomAnd(ngate4 VTMN)  ;
mvt_ngate2 = geomAndNot(mvt_ngate1 RFDUMMY)  ;
mvt_ngate = geomAndNot(mvt_ngate2 MAC)  ; 1.8V medium VT NMOS
;
;* Define device -- nmos NB
bmvt_ngate1 = geomAnd(bngate4 VTMN)  ;
bmvt_ngate2 = geomAndNot(bmvt_ngate1 RFDUMMY)  ;
bmvt_ngate = geomAndNot(bmvt_ngate2 MAC)  ; 3.3/5V medium VT NMOS
;
;* Define device -- pmos PA
mvt_pgate1 = geomAnd(pgate1 VTMP)  ;
mvt_pgate2 = geomAndNot(mvt_pgate1 RFDUMMY)  ;
mvt_pgate = geomAndNot(mvt_pgate2 MAC)  ; 1.8V medium VT PMOS
;
;* Define device -- nmos nch_mac
ngate_mac = geomAnd(ngate6 MAC)  ; 1.8V Nominal VT NMOS macro model
;
;* Define device -- nmos nch_dnw_mac
nrgate_mac = geomAnd(nrgate3 MAC)  ; 1.8V nominal VT NMOS on DNW macro model
;
;* Define device -- nmos mench_mac
mvt_ngate_mac = geomAnd(mvt_ngate2 MAC)  ; 1.8V medium VT NMOS macro model
;
;* Define device -- nmos nanch_mac
nlgate_mac = geomAnd(nlgate2 MAC)  ; 1.8V native NMOS macro model
;
;* Define device -- nmos nch3_mac
bngate_mac = geomAnd(bngate6 MAC)  ; 3.3/5V Nominal VT NMOS macro model
;
;* Define device -- nmos mench3_mac
bmvt_ngate_mac = geomAnd(bmvt_ngate2 MAC)  ; 3.3/5V medium VT NMOS macro model
;
;* Define device -- nmos nanch3_mac
bnlgate_mac = geomAnd(bnlgate2 MAC)  ; 3.3/5V native NMOS macro model
;
;* Define device -- nmos nch3_dnw_mac
bnrgate_mac = geomAnd(bnrgate2 MAC)  ; 3.3/5V nominal VT NMOS on DNW macro model
;
;* Define device -- pmos pch_mac
pgate_mac = geomAnd(pgate3 MAC)  ; 1.8V Norminal VT PMOS macro model
;
;* Define device -- pmos mepch_mac
mvt_pgate_mac = geomAnd(mvt_pgate2 MAC)  ; 1.8V medium VT PMOS macro model
;
;* Define device -- pmos pch3_mac
bpgate_mac = geomAnd(bpgate4 MAC)  ; 3.3V Nominal VT PMOS macro model
;
;* Define device -- diode DP
pdio_a = geomAnd(tpdiff DIODMY)  ;
pdio_b = geomAnd(pdio_a nxwell)  ;
pdio_c = geomAndNot(pdio_b VTMP)  ;
pdio = geomAndNot(pdio_c OD2)  ; 1.8V P+/NW diode
;
;* Define device -- diode D1
pdio_3 = geomAnd(pdio_c OD2)  ; 3.3V P+/NW diode
;
;* Define device -- diode DN
ndio_a = geomAnd(tndiff DIODMY)  ;
ndio_b = geomAnd(ndio_a psub)  ;
ndio_c = geomAndNot(ndio_b VTMN)  ;
ndio = geomAndNot(ndio_c OD2)  ; 1.2V N+/PW diode
;
;* Define device -- diode D2
ndio_3 = geomAnd(ndio_c OD2)  ; 2.5V N+/PW diode
;
;* Define device -- diode DW
DIONW = geomOutside(DIODMY tpdiff)  ;
nwdio_a = geomAnd(nxwell DIONW)  ;
nwdio = geomAndNot(nwdio_a OD2)  ; 1.8V NW/PW diode
;
;* Define device -- diode D3
nwdio_3 = geomAnd(nwdio_a OD2)  ; 3.3V NW/PW diode
;
;* Define device -- diode pdio_m
pdio_m1 = geomAnd(pdio_b VTMP)  ;
pdio_m = geomAndNot(pdio_m1 OD2)  ; 1.8V Medium-Vt P+/NW diode
;
;* Define device -- diode ndio_m
ndio_m1 = geomAnd(ndio_b VTMN)  ;
ndio_m = geomAndNot(ndio_m1 OD2)  ; 1.8V Medium-Vt N+/PW diode
;
;* Define device -- diode ndio_3m
ndio_3m = geomAnd(ndio_m1 OD2)  ; 3.3V Medium-Vt N+/PW diode
;
;* Define device -- r LR
lrpop = geomAndNot(lrpop2 RPDMY1)  ;
;
;* Define device -- xdev WR
trwell1 = geomAnd(RWDMY NWELL)  ;
trwell = geomAndNot(trwell1 RWDMY1)  ; N-well resistor layer
nwsti = geomAndNot(trwell dfhr1)  ; RWDMY*NWELL -RPO -diff --> nwsti 
;
;* Define device -- xdev WO
nwod = geomAnd(trwell dfhr1)  ;  RWDMY*NWELL*RPO*diff --> nwod
;
;* Define device -- r PD
rdop = geomAndNot(rdop1 RFDUMMY)  ;
prdop1 = geomAnd(rdop PIMP)  ;
prdop2 = geomAnd(prdop1 nxwell)  ;
prdop3 = geomAndNot(prdop2 RPDMY1)  ;
if(avSwitch("OD_RES_WO_DMNP2V") then;
  prdop = geomButtOrOver(prdop3 OD)  ;
else    ;
  prdop_1 = geomButtOrOver(prdop3 OD)  ;
  prdop = geomButtOrOver(prdop_1 DMP2V) ;
) ; 
;
;* Define device -- r ND
nrdop1 = geomAnd(rdop NIMP)  ;
nrdop2 = geomAndNot(nrdop1 nxwell)  ;
nrdop3 = geomAndNot(nrdop2 RPDMY1)  ;
if(avSwitch("OD_RES_WO_DMNP2V") then;
  nrdop = geomButtOrOver(nrdop3 OD)  ;
else    ;
  nrdop_1 = geomButtOrOver(nrdop3 OD)  ;
  nrdop = geomButtOrOver(nrdop_1 DMN2V) ;
) ; 
;
;* Define device -- r PR
prpop1 = geomButtOrOver(rpop DMP2V)  ;
prpop2 = geomAnd(prpop1 PIMP)  ;
prpop3 = geomAndNot(prpop2 RFDUMMY)  ;
prpop4 = geomAndNot(prpop3 RFDUMMY1)  ;
prpop5 = geomButtOrOver(prpop4 POLY1)  ;
prpop = geomAndNot(prpop5 RPDMY1)  ; (PR) P+POLY w/o silicide
;
;* Define device -- r NR
nrpop1 = geomButtOrOver(rpop DMN2V)  ;
nrpop2 = geomAnd(nrpop1 NIMP)  ;
nrpop3 = geomAndNot(nrpop2 RFDUMMY)  ;
nrpop4 = geomButtOrOver(nrpop3 POLY1)  ;
nrpop = geomAndNot(nrpop4 RPDMY1)  ; (NR) N+POLY w/o silicide
;
;* Define device -- r PI1
prdip1 = geomAnd(rdip PIMP)  ;
prdip2 = geomAnd(prdip1 nxwell)  ;
prdip3 = geomAndNot(prdip2 RPDMY1)  ;
prdip = geomButtOrOver(prdip3 OD)  ; P+OD resistor w/i silicide
rpod_edge = geomGetEdge(prdip inside diff)  ;
l_rpod = geomGetLength(rpod_edge 2 <= keep < 99999999) ;
l_rpod_edge_su001=geomSize(l_rpod 0.005 edges);
rpodl_r = geomButtOrCoin( prdip l_rpod_edge_su001 )  ; P+OD resistor w/i silicide >= 2
;
;* Define device -- r PI2
rpods_r = geomAndNot(prdip rpodl_r)  ; P+OD resistor w/i silicide < 2
;
;* Define device -- r NI1
nrdip1 = geomAnd(rdip NIMP)  ;
nrdip2 = geomAndNot(nrdip1 nxwell)  ;
nrdip3 = geomAndNot(nrdip2 RPDMY1)  ;
nrdip = geomButtOrOver(nrdip3 OD)  ; N+OD resistor w/i silicide
rnod_edge = geomGetEdge(nrdip inside diff)  ;
l_rnod = geomGetLength(rnod_edge 2 <= keep < 99999999) ;
l_rnod_edge_su001=geomSize(l_rnod 0.005 edges);
rnodl_r = geomButtOrCoin( nrdip l_rnod_edge_su001 )  ; N+OD resistor w/i silicide >= 2
;
;* Define device -- r NI2
rnods_r = geomAndNot(nrdip rnodl_r)  ; N+OD resistor w/i silicide < 2
;
;* Define device -- r PS1
prpip1 = geomAnd(rpip PIMP)  ;
prpip2 = geomAndNot(prpip1 RFDUMMY)  ;
prpip3 = geomAndNot(prpip2 RFDUMMY1)  ;
prpip4 = geomAnd(prpip3 RPDMYa)  ;
prpip5 = geomButtOrOver(prpip4 POLY1)  ;
rppoly_edge = geomGetEdge(prpip5 inside rpoly)  ;
l_rppoly = geomGetLength(rppoly_edge 2 <= keep < 99999999) ;
l_rppoly_edge_su001=geomSize(l_rppoly 0.005 edges);
rppolyl_r_1 = geomButtOrCoin( prpip5 l_rppoly_edge_su001 )  ;
rppolyl_r_2 = geomAndNot(rppolyl_r_1 RPDMY1)  ;
rppolyl_r = geomAnd(rppolyl_r_2 RPDMYX)  ; P+POLY resistor w/i silicide >= 2
;
;* Define device -- r PS2
rppolys_r_1 = geomAndNot(prpip5 rppolyl_r_1)  ;
rppolys_r_2 = geomAndNot(rppolys_r_1 RPDMY1)  ;
rppolys_r = geomAnd(rppolys_r_2 RPDMYX)  ; P+POLY resistor w/i silicide < 2
;
;* Define device -- r NS1
nrpip1 = geomAnd(rpip NIMP)  ;
nrpip2 = geomAndNot(nrpip1 RFDUMMY)  ;
nrpip3 = geomAndNot(nrpip2 RFDUMMY1)  ;
nrpip4 = geomAnd(nrpip3 RPDMYa)  ; for rnpo1_dis and rnpo1w_dis (3T)
nrpip5 = geomButtOrOver(nrpip4 POLY1)  ;
rnpoly_edge = geomGetEdge(nrpip5 inside rpoly)  ;
l_rnpoly = geomGetLength(rnpoly_edge 2 <= keep < 99999999) ;
l_rnpoly_edge_su001=geomSize(l_rnpoly 0.005 edges);
rnpolyl_r_1 = geomButtOrCoin( nrpip5 l_rnpoly_edge_su001 )  ;
rnpolyl_r = geomAndNot(rnpolyl_r_1 RPDMY1)  ; N+POLY resistor w/i silicide >= 2
;
;* Define device -- r NS2
rnpolys_r_1 = geomAndNot(nrpip5 rnpolyl_r_1)  ;
rnpolys_r = geomAndNot(rnpolys_r_1 RPDMY1)  ; N+POLY resistor w/i silicide < 2
;
;* Define device -- xdev rpodrpo_m
if(avSwitch("OD_RES_WO_DMNP2V") then;
  t_prdop = geomAnd(t_rdop PIMP)  ;
else    ;
  t_prdop_1 = geomAnd(t_rdop PIMP)  ;
  t_prdop = geomButtOrOver(t_prdop_1 DMP2V) ;
) ; 
;
;* Define device -- xdev rnodrpo_m
if(avSwitch("OD_RES_WO_DMNP2V") then;
  t_nrdop = geomAnd(t_rdop NIMP)  ;
else    ;
  t_nrdop_1 = geomAnd(t_rdop NIMP)  ;
  t_nrdop = geomButtOrOver(t_nrdop_1 DMN2V) ;
) ; 
;
;* Define device -- xdev rpod_m
t_rdip_edge = geomGetEdge(t_rdip inside diff)  ;
l_trdip = geomGetLength(t_rdip_edge 2 <= keep < 99999999) ;
l_trdip_edge_su001=geomSize(l_trdip 0.005 edges);
l_trdip_r = geomButtOrCoin( t_rdip l_trdip_edge_su001 )  ;
l_rpodl_3t = geomAnd(l_trdip_r PIMP)  ;P+OD resistor w/i silicide w>= 2
;
;* Define device -- xdev rpodw_m
s_trdip_r = geomAndNot(t_rdip l_trdip_r)  ;
s_rpods_3t = geomAnd(s_trdip_r PIMP)  ;P+OD resistor w/i silicide w<2
;
;* Define device -- xdev rnod_m
l_rnodl_3t = geomAnd(l_trdip_r NIMP)  ;N+OD resistor w/i silicide w>= 2
;
;* Define device -- xdev rnodw_m
s_rnods_3t = geomAnd(s_trdip_r NIMP)  ;N+OD resistor w/i silicide w<2
;
;* Define device -- xdev rnwod_m
trwella = geomAnd(RWDMY1 NWELL)  ; N-well resistor layer
nwoda = geomAnd(trwella dfhr1)  ; RWDMY*NWELLRPOdiff --> nwod
;
;* Define device -- xdev rnwsti_m
nwstia = geomAndNot(trwella dfhr1)  ;
;
;* Define device -- xdev rnpo1rpo_dis
nrpop_3t = geomAnd(nrpop4 RPDMY1)  ; 3T (NR) N+POLY w/o silicide
;
;* Define device -- xdev rppo1rpo_dis
prpop_3t = geomAnd(prpop5 RPDMY1)  ; 3T (PR) P+POLY w/o silicid 
;
;* Define device -- xdev rnpo1w_dis
rnpolys_r_3t = geomAnd(rnpolys_r_1 RPDMY1)  ; 3T N+POLY resistor w/i silicide < 2
;
;* Define device -- xdev rppo1w_dis
rppolys_r_3t = geomAnd(rppolys_r_1 RPDMY1)  ; 3T P+POLY resistor w/i silicide < 2 karena
;
;* Define device -- xdev rnpo1_dis
rnpolyl_r_3t = geomAnd(rnpolyl_r_1 RPDMY1)  ; 3T N+POLY resistor w/i silicide >= 2
;
;* Define device -- xdev rppo1_dis
rppolyl_r_3t = geomAnd(rppolyl_r_1 RPDMY1)  ; 3T P+POLY resistor w/i silicide >= 2
;
;* Define device -- xdev rppolyhri_dis
lrpop_3t = geomAnd(lrpop2 RPDMY1)  ; 3T HRI high poly resistor
;
;* Define device -- xdev PV2
emit2_temp = drc(emit 3.999 < area < 4.001) ;
emit2 = geomAndNot(emit2_temp LVSDMY)  ;define Q[PV]	   pnp2      CORE PNP-BJT
;
;* Define device -- xdev PV5
emit5_temp = drc(emit 24.999 < area < 25.001) ;
emit5 = geomAndNot(emit5_temp LVSDMY)  ;define Q[PV]	   pnp5	     CORE PNP-BJT
;
;* Define device -- xdev PV10
emit10_temp = drc(emit 99.999 < area < 100.001) ;
emit10 = geomAndNot(emit10_temp LVSDMY)  ;define Q[PV]     pnp10     CORE PNP-BJT
;
;* Define device -- xdev NV2
nemit2_temp = drc(nemit 3.999 < area < 4.001) ;
nemit2 = geomAndNot(nemit2_temp LVSDMY)  ;define Q[NV]     npn2	 CORE NPN-BJT
;
;* Define device -- xdev NV5
nemit5_temp = drc(nemit 24.999 < area < 25.001) ;
nemit5 = geomAndNot(nemit5_temp LVSDMY)  ;define Q[NV]     npn5      CORE NPN-BJT
;
;* Define device -- xdev NV10
nemit10_temp = drc(nemit 99.999 < area < 100.001) ;
nemit10 = geomAndNot(nemit10_temp LVSDMY)  ;define Q[NV]     npn10     CORE NPN-BJT
;
;* Define device -- xdev P12
iemit2 = drc(emit_od2 3.999 < area < 4.001) ;define Q[P1]     pnp2_3  IO   PNP-BJT
;
;* Define device -- xdev P15
iemit5 = drc(emit_od2 24.999 < area < 25.001) ;define Q[P1]     pnp5_3  IO   PNP-BJT
;
;* Define device -- xdev P110
iemit10 = drc(emit_od2 99.999 < area < 100.001) ;define Q[P1]     pnp10_3 IO   PNP-BJT
;
;* Define device -- xdev NV2_mis
nemit2_mis = geomAnd(nemit2_temp LVSDMY)  ;define Q[NV_mis] npn2_mis  CORE NPN-BJT
;
;* Define device -- xdev NV5_mis
nemit5_mis = geomAnd(nemit5_temp LVSDMY)  ;define Q[NV_mis] npn5_mis  CORE NPN-BJT
;
;* Define device -- xdev NV10_mis
nemit10_mis = geomAnd(nemit10_temp LVSDMY)  ;define Q[NV_mis] npn10_mis CORE NPN-BJT
;
;* Define device -- xdev PV2_mis
emit2_mis = geomAnd(emit2_temp LVSDMY)  ;define Q[PV_mis] pnp2_mis  CORE PNP-BJT mismatch model
;
;* Define device -- xdev PV5_mis
emit5_mis = geomAnd(emit5_temp LVSDMY)  ;define Q[PV_mis] pnp5_mis  CORE PNP-BJT mismatch model
;
;* Define device -- xdev PV10_mis
emit10_mis = geomAnd(emit10_temp LVSDMY)  ;define Q[PV_mis] pnp10_mis CORE PNP-BJT mismatch model
;
;* Define device -- xdev mimcap_1p0_sin
RFDUMMYall = geomOr(RFDUMMY1 RFDUMMYUD)  ;
capm5c = geomAndNot(capm5b RFDUMMYall)  ;
capm5d = geomAnd(capm5c CTMDMY)  ;
capm5 = geomAndNot(capm5d CTMDMYUD)  ;
capm5_2t = geomAndNot(capm5 CTMDMY_3t)  ;
CTMDMYall = geomOr(CTMDMY CTMDMYUD)  ;
capdmy1p0a = geomAndNot(CTMDMYall CTMDMY1p5)  ;
capdmy1p0 = geomAndNot(capdmy1p0a CTMDMY2p0)  ;
capm5_1p0 = geomButtOrOver(capm5_2t capdmy1p0)  ;
capm5ud1 = geomAndNot(capm5b RFDUMMYUD)  ;
capm5ud2 = geomAndNot(capm5ud1 CTMDMY)  ;
capm5_ud = geomAnd(capm5ud2 CTMDMYUD)  ;
capm5_ud_2t = geomAndNot(capm5_ud CTMDMY_3t)  ;
capm5_1p0_ud = geomButtOrOver(capm5_ud_2t capdmy1p0)  ;
;
;* Define device -- xdev mimcap_2p0_sin
capdmy2p0a = geomAndNot(capdmy1p0a CTMDMY1p0)  ;
capdmy2p0 = geomAnd(capdmy2p0a CTMDMY2p0)  ;ctmdmy2p0
capm5_2p0 = geomButtOrOver(capm5_2t capdmy2p0)  ;
capm5_2p0_ud = geomButtOrOver(capm5_ud_2t capdmy2p0)  ;
;
;* Define device -- xdev mimcap_1p0_sin_3t
capm5_3t = geomAnd(capm5 CTMDMY_3t)  ;
capm5_1p0_3t = geomButtOrOver(capm5_3t capdmy1p0)  ;
;
;* Define device -- xdev mimcap_2p0_sin_3t
capm5_2p0_3t = geomButtOrOver(capm5_3t capdmy2p0)  ;
;
;* Define device -- xdev pmos_rf33
pgate_rf1 = geomAnd(gate_rf PIMP)  ;
pgate_rf2 = geomAndNot(pgate_rf1 VTMP)  ;
pgate_rf3 = geomButtOrOver(pgate_rf2 nxwell)  ;
bpgate_rf = geomAnd(pgate_rf3 OD2)  ;
bpgate_rf4t1 = geomAnd(bpgate_rf RFDUMMY1)  ;
bpgate_rf4t = geomAnd(bpgate_rf4t1 DNW)  ; 3.3V RF PMOS 4 terminals with DNW
bpgate_4t_pthin_1 = geomButtOrOver(pthin bpgate_rf4t)  ;
bpgate_4t_pthin_2 = geomAndNot(bpgate_4t_pthin_1 geomButtOrOver(bpgate_4t_pthin_1 asym_rf))  ;
bpgate_4t_pthin = geomAndNot(bpgate_4t_pthin_2 RFDUMMY5T)  ; pmos_rf33
;
;* Define device -- xdev pmos_rf33_nw
bpgate_rf4t_nw = geomAndNot(bpgate_rf4t1 DNW)  ; 3.3V RF PMOS 4 terminals without DNW
bpgate_4t_pthin_nw_1 = geomButtOrOver(pthin bpgate_rf4t_nw)  ;
bpgate_4t_pthin_nw_2 = geomAndNot(bpgate_4t_pthin_nw_1 geomButtOrOver(bpgate_4t_pthin_nw_1 asym_rf))  ;
bpgate_4t_pthin_nw = geomAndNot(bpgate_4t_pthin_nw_2 RFDUMMY5T)  ; pmos_rf33_nw
;
;* Define device -- xdev pmos_rf
pgate_rf = geomAndNot(pgate_rf3 OD2)  ;
pgate_rf4t1 = geomAnd(pgate_rf RFDUMMY1)  ;
pgate_rf4t = geomAnd(pgate_rf4t1 DNW)  ; 1.8V RF PMOS 4 terminals with DNW
pgate_4t_pthin_1 = geomButtOrOver(pthin pgate_rf4t)  ;
pgate_4t_pthin_2 = geomAndNot(pgate_4t_pthin_1 geomButtOrOver(pgate_4t_pthin_1 asym_rf))  ;
pgate_4t_pthin = geomAndNot(pgate_4t_pthin_2 RFDUMMY5T)  ; pmos_rf
;
;* Define device -- xdev pmos_rf_nw
pgate_rf4t_nw = geomAndNot(pgate_rf4t1 DNW)  ; 1.8V RF PMOS 4 terminals without DNW
pgate_4t_pthin_nw_1 = geomButtOrOver(pthin pgate_rf4t_nw)  ;
pgate_4t_pthin_nw_2 = geomAndNot(pgate_4t_pthin_nw_1 geomButtOrOver(pgate_4t_pthin_nw_1 asym_rf))  ;
pgate_4t_pthin_nw = geomAndNot(pgate_4t_pthin_nw_2 RFDUMMY5T)  ; pmos_rf_nw
;
;* Define device -- xdev nmos_rf33
nrgate_rf1 = geomAnd(gate_rf NIMP)  ;
nrgate_rf2 = geomAndNot(nrgate_rf1 NTN)  ;
nrgate_rf3 = geomAndNot(nrgate_rf2 VTMN)  ;
nrgate_rf4 = geomAnd(nrgate_rf3 DNW)  ;
bnrgate_rf = geomAnd(nrgate_rf4 OD2)  ;
bnrgate_rf4t = geomAnd(bnrgate_rf RFDUMMY1)  ; 3.3V RF NMOS 4 terminals
bnrgate_4t_nthin_1 = geomButtOrOver(nthin bnrgate_rf4t)  ;
bnrgate_4t_nthin_2 = geomAndNot(bnrgate_4t_nthin_1 geomButtOrOver(bnrgate_4t_nthin_1 asym_rf))  ;
bnrgate_4t_nthin = geomAndNot(bnrgate_4t_nthin_2 RFDUMMY6T)  ; nmos_rf33
;
;* Define device -- xdev nmos_rf
nrgate_rf = geomAndNot(nrgate_rf4 OD2)  ;
nrgate_rf4t = geomAnd(nrgate_rf RFDUMMY1)  ; 1.8V RF NMOS 4 terminals
nrgate_4t_nthin_1 = geomButtOrOver(nthin nrgate_rf4t)  ;
nrgate_4t_nthin_2 = geomAndNot(nrgate_4t_nthin_1 geomButtOrOver(nrgate_4t_nthin_1 asym_rf))  ;
nrgate_4t_nthin = geomAndNot(nrgate_4t_nthin_2 RFDUMMY6T)  ; nmos_rf
;
;* Define device -- xdev pmos_rf_5t
pgate_5t_pthin = geomAnd(pgate_4t_pthin_2 RFDUMMY5T)  ; pmos_rf_5t
;
;* Define device -- xdev pmos_rf_nw_5t
pgate_5t_pthin_nw = geomAnd(pgate_4t_pthin_nw_2 RFDUMMY5T)  ; pmos_rf_nw_5t
;
;* Define device -- xdev pmos_rf33_5t
bpgate_5t_pthin = geomAnd(bpgate_4t_pthin_2 RFDUMMY5T)  ; pmos_rf33_5t
;
;* Define device -- xdev pmos_rf33_nw_5t
bpgate_5t_pthin_nw = geomAnd(bpgate_4t_pthin_nw_2 RFDUMMY5T)  ; pmos_rf33_nw_5t
;
;* Define device -- xdev nmos_rf_6t
nrgate_6t_nthin = geomAnd(nrgate_4t_nthin_2 RFDUMMY6T)  ; nmos_rf_6t
;
;* Define device -- xdev nmos_rf33_6t
bnrgate_6t_nthin = geomAnd(bnrgate_4t_nthin_2 RFDUMMY6T)  ; nmos_rf33_6t
;
;* Define device -- xdev moscap_rf
varnwm_rf1 = geomAnd(nxwell VARDMY)  ;
varnwm_rf2 = geomAnd(varnwm_rf1 RFDUMMY1)  ;
varnwmc_rf_1 = geomAndNot(varnwm_rf2 OD2)  ; modified by KMLiu
all_bc = geomOr(PV_P PV_N)  ; Original definition is (BC1 OR BC2).
varnwmc_rf_2 = geomAndNot(varnwmc_rf_1 geomButtOrOver(varnwmc_rf_1 all_bc))  ;
varnwmc_rf_3 = geomAndNot(varnwmc_rf_2 geomButtOrOver(varnwmc_rf_2 VTDN))  ;
varnwmc_rf_dnw_1 = geomAnd(varnwmc_rf_3 DNW)  ;
varnwmc_rf_dnw = geomAndNot(varnwmc_rf_dnw_1 SBDUMMY)  ;moscap_rf
;
;* Define device -- xdev moscap_rf_nw
vargt1 = geomAnd(tngate1 nxwell)  ;
vargt2 = geomAnd(vargt1 VARDMY)  ;
vargt3 = geomAndNot(vargt2 RFDUMMY)  ;
vargt3_rf1 = geomAnd(vargt3 RFDUMMY1)  ;
vargt3_rf = geomAndNot(vargt3_rf1 OD2)  ; core mos varactor 3 terminals
;
;* Define device -- xdev moscap_rf33
varnwm_rf3 = geomAnd(varnwm_rf2 OD2)  ;
varnwmi_rf_dnw_1 = geomAnd(varnwm_rf3 DNW)  ;
varnwmi_rf_dnw = geomAndNot(varnwmi_rf_dnw_1 SBDUMMY)  ;moscap_rf33
;
;* Define device -- xdev moscap_rf33_nw
bvargt3_rf = geomAnd(vargt3_rf1 OD2)  ; io mos varactor 3 terminals
varnwmc_rf_nw_1 = geomAndNot(varnwmc_rf_3 DNW)  ;
varnwmc_rf_nw = geomAndNot(varnwmc_rf_nw_1 SBDUMMY)  ;moscap_rf_nw
varnwmi_rf_nw_1 = geomAndNot(varnwm_rf3 DNW)  ;
varnwmi_rf_nw = geomAndNot(varnwmi_rf_nw_1 SBDUMMY)  ;moscap_rf33_nw
;
;* Define device -- xdev xjvar_nr36
varnwj_rf = geomAnd(nxwell JVARD)  ;
jvar1_rf = geomButtOrOver(varnwj_rf tpdiff)  ;
jvar2_rf = geomButtOrOver(jvar1_rf tndiff)  ;
jvar3_rf = geomAndNot(jvar2_rf RFDUMMY)  ;
jvar_rf3t = geomAnd(jvar3_rf RFDUMMY1)  ; Junction varactor 3 terminals
jvarp_rf = geomAnd(jvar2_rf tpdiff)  ;
jvarn_rf = geomAnd(jvar2_rf tndiff)  ;
;
;* Define device -- xdev mimcap_2p0_wos
capm5_rf3t_shield_m4 = geomInside(capm5_rf3ta M4)  ; modified by KMLiu
capm5_rf3t_woa = geomAndNot(capm5_rf3ta capm5_rf3t_shield_m4)  ;
capm5_rf3t_shield_m3 = geomInside(capm5_rf3ta M3)  ; Added by KMLiu
capm5_rf3t_wob = geomAndNot(capm5_rf3t_woa capm5_rf3t_shield_m3)  ;
capm5_rf3t_woc = geomAndNot(capm5_rf3t_wob capm5_rf3t_shield_poly)  ;
capm5_rf3t_shield_ntn = geomInside(capm5_rf3ta NTN)  ; Added by KMLiu
capm5_rf3t = geomAndNot(capm5_rf3t_woc capm5_rf3t_shield_ntn)  ; new mimcap no shield
capm5_rf3t_2p0 = geomButtOrOver(capm5_rf3t capdmy2p0)  ;
;
;* Define device -- xdev mimcap_2p0_shield
capm5_rf3t_shield_m4_2p0 = geomButtOrOver(capm5_rf3t_shield_m4 capdmy2p0)  ;
capm5_rf3ta_ud = geomAnd(capm5_rf3ta2 RFDUMMYUD)  ;
capm5_rf3t_shield_m4_ud = geomInside(capm5_rf3ta_ud M4)  ; modified by KMLiu
capm5_rf3t_shield_m4_2p0_ud = geomButtOrOver(capm5_rf3t_shield_m4_ud capdmy2p0)  ;
;
;* Define device -- xdev rppolywo_rf
prpop_rf3t = geomAnd(prpop3 RFDUMMY1)  ; rppolywo_rf 3 terminals
;
;* Define device -- xdev rppolyl_rf
prpip_rf1 = geomAnd(prpip1 RPDMYX)  ;
prpip_rf2 = geomAndNot(prpip_rf1 RPDMY1)  ;
prpip_rf3t = geomAnd(prpip_rf2 RFDUMMY1)  ; rppoly_rf 3 terminals
rppoly_rf_edge = geomGetEdge(prpip_rf3t inside rpoly)  ;
l_rppoly_rf = geomGetLength(rppoly_rf_edge 2 <= keep < 99999999) ;
l_rppoly_rf_edge_su001=geomSize(l_rppoly_rf 0.005 edges);
rppolyl_rf_3t = geomButtOrCoin( prpip_rf3t l_rppoly_rf_edge_su001 )  ; rppoly_rf 3 terminal >2
;
;* Define device -- xdev rppolys_rf
rppolys_rf_3t = geomAndNot(prpip_rf3t rppolyl_rf_3t)  ; rppoly_rf 3 terminal <2
;
;* Define device -- xdev spiral_std_mu_x_20k
;
;* Define device -- xdev spiral_sym_mu_x_20k
;
;* Define device -- xdev spiral_sym_ct_mu_x_20k
;
;* Define device -- xdev lcesd1_rf
lcesd_p_rf1 = geomAnd(lcesd_p RFDUMMY1)  ;
lcesd_p_rf = geomButtOrOver(lcesd_p_rf1 ESD2DUMMY)  ;
lcesd1_rl_1 = geomAnd(lcesd_p_rf lcesd1)  ;
lcesd1_rl_2 = geomButtOrOver(lcesd1_rl_1 tpdiff)  ;
lcesd1_rl = geomAndNot(lcesd1_rl_2 lcesd2)  ;lcesd1_rf 50fF
;
;* Define device -- xdev lcesd2_rf
lcesd2_rl_1 = geomAnd(lcesd_p_rf lcesd2)  ;
lcesd2_rl_2 = geomButtOrOver(lcesd2_rl_1 tpdiff)  ;
lcesd2_rl = geomAndNot(lcesd2_rl_2 lcesd1)  ;lcesd2_rf 100fF
;
;* Define device -- xdev nmoscap
nthin_var1 = geomAnd(nthin nxwell)  ;
nthin_var2 = geomAnd(nthin_var1 VARDMY)  ;
nthin_var3 = geomAndNot(nthin_var2 RFDUMMY)  ;
nthin_var4 = geomAndNot(nthin_var3 RFDUMMY1)  ;
nthin_var5 = geomButtOrOver(nthin_var4 tngate1)  ;
nthin_var_1 = geomAndNot(nthin_var5 OD2)  ;Myron
nthin_var = geomAndNot(nthin_var_1 VTDN)  ;Myron
vargt4 = geomAndNot(vargt3 RFDUMMY1)  ;
vargt = geomAndNot(vargt4 OD2)  ;1.8V baseband varactor
;
;* Define device -- xdev nmoscap_33
nthin_bvar = geomAnd(nthin_var5 OD2)  ;
bvargt = geomAnd(vargt4 OD2)  ;3.3V baseband varactor
;
;* Define device -- xdev sbd_rf
schottky_body1 = geomButtOrOver(nxwell schottky_n)  ;
schottky_body2 = geomButtOrOver(schottky_body1 schottky_p)  ;
schottky_body3 = geomButtOrOver(schottky_body2 SBDUMMY)  ;
schottky_body5 = geomAnd(schottky_body3 RFDUMMY1)  ;
sbd_rf = geomButtOrOver(schottky_body5 DNW)  ;
;
;* Define device -- xdev sbd_rf_nw
sbd_rf_nw = geomAndNot(schottky_body5 geomButtOrOver(schottky_body5 DNW))  ;
;
;* Define device -- xdev dnwpsub
dnwdio_b = geomButtOrOver(nxwell DNW)  ;
dnwdio_a = geomInside(nxwell DNW)  ;
dnwdio_c = geomAndNot(dnwdio_b dnwdio_a)  ;
dnwdio_d = geomButtOrOver(DNW dnwdio_c)  ;
dnwdio = geomAndNot(dnwdio_d rfdmy56)  ;
;
;* Define device -- xdev pwdnw
rwdio_a = geomAndNot(DNW nxwell)  ;
rwdio_b = geomAndNot(rwdio_a BJTDMY)  ;
rwdio = geomAndNot(rwdio_b rfdmy56)  ;
;
;* Define ERC or other layers
c_pmall = geomAndNot(NWELL NTN)  ; pmos all for WPE (clear tone)
c_pmIO = geomAnd(c_pmall OD2)  ; pmos all for WPE (clear tone)
erc_exclude1 = geomOr(VARDMYX VARG3)  ;
erc_exclude = geomOr(erc_exclude1 VARG6)  ;
erc_pmos_gates = geomAndNot(tpgate erc_exclude)  ;
c_pmcore = geomAndNot(c_pmall OD2)  ; pmos all for WPE (clear tone)
nw_ntn = geomOr(NWELL NTN)  ;
c_nmIO = geomAndNot(OD2 nw_ntn)  ; nmos IO for WPE (clear tone) 
nxwell_float1 = geomAndNot(nxwell geomButtOrOver(nxwell trwell))  ;
nxwell_float = geomAndNot(nxwell_float1 geomButtOrOver(nxwell_float1 VARDMY))  ;
erc_nmos_gates = geomAndNot(tngate3 erc_exclude)  ;
d_nmcore = geomOr(OD2 nw_ntn)  ; nmos core for WPE (Dark tone)
c_nmcore = geomAndNot(BULK d_nmcore)  ; nmos core for WPE (clear tone)


; ***** logic operation from XDEV statements *****
jvar_nr = geomEnclose(jvar_rf3t jvarp_rf keep == 36)   ; nr ==36
jvar_ws = geomEnclose(jvar_rf3t jvarp_rf ignore == 36) ; nr != 36
w_fac   = drc(jvarp_rf jvarn_rf sep < 0.29 opposite)
jvar_nr = geomEnclose(jvar_rf3t jvarp_rf keep == 36)   ; nr ==36
jvar_ws = geomEnclose(jvar_rf3t jvarp_rf ignore == 36) ; nr != 36
w_fac   = drc(jvarp_rf jvarn_rf sep < 0.29 opposite)
MOM_field1 = geomAnd(M1 MOMDMY1)
MOM_field2 = geomAnd(M2 MOMDMY2)
MOM_field3 = geomAnd(M3 MOMDMY3)
MOM_field4 = geomAnd(M4 MOMDMY4)
MOM_field5 = geomAnd(M5 MOMDMY5)
MOM_pin3 = geomAnd( metal3 MOMDMY22 )    
MOM_pin4 = geomAnd( metal4 MOMDMY22 )    
MOM_pin5 = geomAnd( metal5 MOMDMY22 )    
F_reg1a = drc( MOM_field1 0 < sep < 0.565 opposite parallel shielded) 
F_reg1  = geomAndNot( geomAnd( F_reg1a MOMDMY1 ) M1 )
F_reg2a = drc( MOM_field2 0 < sep < 0.565 opposite parallel shielded) 
F_reg2  = geomAndNot( geomAnd( F_reg2a MOMDMY2 ) M2 )
F_reg3a = drc( MOM_field3 0 < sep < 0.565 opposite parallel shielded) 
F_reg3  = geomAndNot( geomAnd( F_reg3a MOMDMY3 ) M3 )
F_reg4a = drc( MOM_field4 0 < sep < 0.565 opposite parallel shielded) 
F_reg4  = geomAndNot( geomAnd( F_reg4a MOMDMY4 ) M4 )
F_reg5a = drc( MOM_field5 0 < sep < 0.565 opposite parallel shielded) 
F_reg5  = geomAndNot( geomAnd( F_reg5a MOMDMY5 ) M5 )
mom13_1 = geomButtOrOver(MOMDMY3 MOM_field1)
mom13_2 = geomButtOrOver(mom13_1 MOM_field2)
mom13_3 = geomButtOrOver(mom13_2 MOM_field3)
mom13_idt = geomAndNot(MOM_field3 MOM_field2)
mom13_4 = geomAndNot(mom13_3 geomButtOrOver(mom13_3 MOM_field4))
mom13_5 = geomAndNot(mom13_4 geomButtOrOver(mom13_4 MOM_field5))
mom13_reg1 = geomAndNot(mom13_5 geomButtOrOver(mom13_5 RFDUMMY))
mom13_reg0 = geomAndNot(mom13_reg1 RFDUMMY1)
mom13_reg = geomButtOrOver(mom13_reg0 mom13_idt)
mom13_reg_rf0 = geomAnd(mom13_reg1 RFDUMMY1)
mom13_reg_rf = geomButtOrOver(mom13_reg_rf0 mom13_idt)
fmom13_reg1	= geomAndNot(mom13_5 geomButtOrOver(mom13_5 RFDUMMY))
fmom13_reg2	= geomAndNot(fmom13_reg1 geomButtOrOver(fmom13_reg1 RFDUMMY1))
fmom13_reg3	= geomAndNot(fmom13_reg2 geomButtOrOver(fmom13_reg2 mom13_idt))
fmom13_reg4	= geomButtOrOver(fmom13_reg3 MOMDMY100) 
fmom13_reg5	= geomAndNot(fmom13_reg4  geomButtOrOver(fmom13_reg4 MOMDMY22))
fmom13_reg	= geomButtOrOver(fmom13_reg5 NIMP) 
fmom13_rf_reg1 = geomButtOrOver(mom13_5 RFDUMMY1)
fmom13_rf_reg2 = geomAndNot(fmom13_rf_reg1 geomButtOrOver(fmom13_rf_reg1 mom13_idt))
fmom13_rf_reg3 = geomButtOrOver(fmom13_rf_reg2 MOMDMY100)
fmom13_rf_reg4 = geomAndNot(fmom13_rf_reg3 geomButtOrOver(fmom13_rf_reg3 MOMDMY22))
fmom13_rf_reg  = geomButtOrOver(fmom13_rf_reg4 NIMP)
fmom13_mx_reg1 = geomAndNot(MOMDMY22 geomButtOrOver(MOMDMY22 RFDUMMY))
fmom13_mx_reg2 = geomAndNot(fmom13_mx_reg1 geomButtOrOver(fmom13_mx_reg1 RFDUMMY1))
fmom13_mx_reg3 = geomButtOrOver(fmom13_mx_reg2 mom13_5)
fmom13_mx_reg4 = geomAndNot(fmom13_mx_reg3 geomButtOrOver(fmom13_mx_reg3 mom13_idt))
fmom13_mx_reg5 = geomButtOrOver(fmom13_mx_reg4 MOMDMY100)
fmom13_mx_reg  = geomButtOrOver(fmom13_mx_reg5 NIMP)
mom13_mx_aux   = geomAnd(mom13_5 MOMDMY22)
mom14_1 = geomButtOrOver(MOMDMY4 MOM_field1)
mom14_2 = geomButtOrOver(mom14_1 MOM_field2)
mom14_3 = geomButtOrOver(mom14_2 MOM_field3)
mom14_4 = geomButtOrOver(mom14_3 MOM_field4)
mom14_idt = geomAndNot(MOM_field4 MOM_field3)
mom14_5 = geomAndNot(mom14_4 geomButtOrOver(mom14_4 MOM_field5))
mom14_reg1 = geomAndNot(mom14_5 geomButtOrOver(mom14_5 RFDUMMY))
mom14_reg0 = geomAndNot(mom14_reg1 RFDUMMY1)
mom14_reg = geomButtOrOver(mom14_reg0 mom14_idt)
mom14_reg_rf0 = geomAnd(mom14_reg1 RFDUMMY1)
mom14_reg_rf = geomButtOrOver(mom14_reg_rf0 mom14_idt)
fmom14_reg1	= geomAndNot(mom14_5 geomButtOrOver(mom14_5 RFDUMMY))
fmom14_reg2	= geomAndNot(fmom14_reg1 geomButtOrOver(fmom14_reg1 RFDUMMY1))
fmom14_reg3	= geomAndNot(fmom14_reg2 geomButtOrOver(fmom14_reg2 mom14_idt))
fmom14_reg4	= geomButtOrOver(fmom14_reg3 MOMDMY100) 
fmom14_reg5	= geomAndNot(fmom14_reg4  geomButtOrOver(fmom14_reg4 MOMDMY22))
fmom14_reg	= geomButtOrOver(fmom14_reg5 NIMP) 
fmom14_rf_reg1 = geomButtOrOver(mom14_5 RFDUMMY1)
fmom14_rf_reg2 = geomAndNot(fmom14_rf_reg1 geomButtOrOver(fmom14_rf_reg1 mom14_idt))
fmom14_rf_reg3 = geomButtOrOver(fmom14_rf_reg2 MOMDMY100)
fmom14_rf_reg4 = geomAndNot(fmom14_rf_reg3 geomButtOrOver(fmom14_rf_reg3 MOMDMY22))
fmom14_rf_reg  = geomButtOrOver(fmom14_rf_reg4 NIMP)
fmom14_mx_reg1 = geomAndNot(MOMDMY22 geomButtOrOver(MOMDMY22 RFDUMMY))
fmom14_mx_reg2 = geomAndNot(fmom14_mx_reg1 geomButtOrOver(fmom14_mx_reg1 RFDUMMY1))
fmom14_mx_reg3 = geomButtOrOver(fmom14_mx_reg2 mom14_5)
fmom14_mx_reg4 = geomAndNot(fmom14_mx_reg3 geomButtOrOver(fmom14_mx_reg3 mom14_idt))
fmom14_mx_reg5 = geomButtOrOver(fmom14_mx_reg4 MOMDMY100)
fmom14_mx_reg  = geomButtOrOver(fmom14_mx_reg5 NIMP)
mom14_mx_aux   = geomAnd(mom14_5 MOMDMY22)
mom15_1 = geomButtOrOver(MOMDMY5 MOM_field1)
mom15_2 = geomButtOrOver(mom15_1 MOM_field2)
mom15_3 = geomButtOrOver(mom15_2 MOM_field3)
mom15_4 = geomButtOrOver(mom15_3 MOM_field4)
mom15_5 = geomButtOrOver(mom15_4 MOM_field5)
mom15_idt = geomAndNot(MOM_field5 MOM_field4)
mom15_reg1 = geomAndNot(mom15_5 geomButtOrOver(mom15_5 RFDUMMY))
mom15_reg0 = geomAndNot(mom15_reg1 RFDUMMY1)
mom15_reg = geomButtOrOver(mom15_reg0 mom15_idt)
mom15_reg_rf0 = geomAnd(mom15_reg1 RFDUMMY1)
mom15_reg_rf = geomButtOrOver(mom15_reg_rf0 mom15_idt)
fmom15_reg1	= geomAndNot(mom15_5 geomButtOrOver(mom15_5 RFDUMMY))
fmom15_reg2	= geomAndNot(fmom15_reg1 geomButtOrOver(fmom15_reg1 RFDUMMY1))
fmom15_reg3	= geomAndNot(fmom15_reg2 geomButtOrOver(fmom15_reg2 mom15_idt))
fmom15_reg4	= geomButtOrOver(fmom15_reg3 MOMDMY100) 
fmom15_reg5	= geomAndNot(fmom15_reg4  geomButtOrOver(fmom15_reg4 MOMDMY22))
fmom15_reg	= geomButtOrOver(fmom15_reg5 NIMP) 
fmom15_rf_reg1 = geomButtOrOver(mom15_5 RFDUMMY1)
fmom15_rf_reg2 = geomAndNot(fmom15_rf_reg1 geomButtOrOver(fmom15_rf_reg1 mom15_idt))
fmom15_rf_reg3 = geomButtOrOver(fmom15_rf_reg2 MOMDMY100)
fmom15_rf_reg4 = geomAndNot(fmom15_rf_reg3 geomButtOrOver(fmom15_rf_reg3 MOMDMY22))
fmom15_rf_reg  = geomButtOrOver(fmom15_rf_reg4 NIMP)
fmom15_mx_reg1 = geomAndNot(MOMDMY22 geomButtOrOver(MOMDMY22 RFDUMMY))
fmom15_mx_reg2 = geomAndNot(fmom15_mx_reg1 geomButtOrOver(fmom15_mx_reg1 RFDUMMY1))
fmom15_mx_reg3 = geomButtOrOver(fmom15_mx_reg2 mom15_5)
fmom15_mx_reg4 = geomAndNot(fmom15_mx_reg3 geomButtOrOver(fmom15_mx_reg3 mom15_idt))
fmom15_mx_reg5 = geomButtOrOver(fmom15_mx_reg4 MOMDMY100)
fmom15_mx_reg  = geomButtOrOver(fmom15_mx_reg5 NIMP)
mom15_mx_aux   = geomAnd(mom15_5 MOMDMY22)
mom24_1 = geomAndNot(MOMDMY4 geomButtOrOver(MOMDMY4 MOM_field1))
mom24_2 = geomButtOrOver(mom24_1 MOM_field2)
mom24_3 = geomButtOrOver(mom24_2 MOM_field3)
mom24_4 = geomButtOrOver(mom24_3 MOM_field4)
mom24_idt = geomAndNot(MOM_field4 MOM_field3)
mom24_5 = geomAndNot(mom24_4 geomButtOrOver(mom24_4 MOM_field5))
mom24_reg1 = geomAndNot(mom24_5 geomButtOrOver(mom24_5 RFDUMMY))
mom24_reg0 = geomAndNot(mom24_reg1 RFDUMMY1)
mom24_reg = geomButtOrOver(mom24_reg0 mom24_idt)
mom24_reg_rf0 = geomAnd(mom24_reg1 RFDUMMY1)
mom24_reg_rf = geomButtOrOver(mom24_reg_rf0 mom24_idt)
fmom24_reg1	= geomAndNot(mom24_5 geomButtOrOver(mom24_5 RFDUMMY))
fmom24_reg2	= geomAndNot(fmom24_reg1 geomButtOrOver(fmom24_reg1 RFDUMMY1))
fmom24_reg3	= geomAndNot(fmom24_reg2 geomButtOrOver(fmom24_reg2 mom24_idt))
fmom24_reg4	= geomButtOrOver(fmom24_reg3 MOMDMY100) 
fmom24_reg5	= geomAndNot(fmom24_reg4  geomButtOrOver(fmom24_reg4 MOMDMY22))
fmom24_reg	= geomButtOrOver(fmom24_reg5 NIMP) 
fmom24_rf_reg1 = geomButtOrOver(mom24_5 RFDUMMY1)
fmom24_rf_reg2 = geomAndNot(fmom24_rf_reg1 geomButtOrOver(fmom24_rf_reg1 mom24_idt))
fmom24_rf_reg3 = geomButtOrOver(fmom24_rf_reg2 MOMDMY100)
fmom24_rf_reg4 = geomAndNot(fmom24_rf_reg3 geomButtOrOver(fmom24_rf_reg3 MOMDMY22))
fmom24_rf_reg  = geomButtOrOver(fmom24_rf_reg4 NIMP)
fmom24_mx_reg1 = geomAndNot(MOMDMY22 geomButtOrOver(MOMDMY22 RFDUMMY))
fmom24_mx_reg2 = geomAndNot(fmom24_mx_reg1 geomButtOrOver(fmom24_mx_reg1 RFDUMMY1))
fmom24_mx_reg3 = geomButtOrOver(fmom24_mx_reg2 mom24_5)
fmom24_mx_reg4 = geomAndNot(fmom24_mx_reg3 geomButtOrOver(fmom24_mx_reg3 mom24_idt))
fmom24_mx_reg5 = geomButtOrOver(fmom24_mx_reg4 MOMDMY100)
fmom24_mx_reg  = geomButtOrOver(fmom24_mx_reg5 NIMP)
mom24_mx_aux   = geomAnd(mom24_5 MOMDMY22)
mom25_1 = geomAndNot(MOMDMY5 geomButtOrOver(MOMDMY5 MOM_field1))
mom25_2 = geomButtOrOver(mom25_1 MOM_field2)
mom25_3 = geomButtOrOver(mom25_2 MOM_field3)
mom25_4 = geomButtOrOver(mom25_3 MOM_field4)
mom25_5 = geomButtOrOver(mom25_4 MOM_field5)
mom25_idt = geomAndNot(MOM_field5 MOM_field4)
mom25_reg1 = geomAndNot(mom25_5 geomButtOrOver(mom25_5 RFDUMMY))
mom25_reg0 = geomAndNot(mom25_reg1 RFDUMMY1)
mom25_reg = geomButtOrOver(mom25_reg0 mom25_idt)
mom25_reg_rf0 = geomAnd(mom25_reg1 RFDUMMY1)
mom25_reg_rf = geomButtOrOver(mom25_reg_rf0 mom25_idt)
fmom25_reg1	= geomAndNot(mom25_5 geomButtOrOver(mom25_5 RFDUMMY))
fmom25_reg2	= geomAndNot(fmom25_reg1 geomButtOrOver(fmom25_reg1 RFDUMMY1))
fmom25_reg3	= geomAndNot(fmom25_reg2 geomButtOrOver(fmom25_reg2 mom25_idt))
fmom25_reg4	= geomButtOrOver(fmom25_reg3 MOMDMY100) 
fmom25_reg5	= geomAndNot(fmom25_reg4  geomButtOrOver(fmom25_reg4 MOMDMY22))
fmom25_reg	= geomButtOrOver(fmom25_reg5 NIMP) 
fmom25_rf_reg1 = geomButtOrOver(mom25_5 RFDUMMY1)
fmom25_rf_reg2 = geomAndNot(fmom25_rf_reg1 geomButtOrOver(fmom25_rf_reg1 mom25_idt))
fmom25_rf_reg3 = geomButtOrOver(fmom25_rf_reg2 MOMDMY100)
fmom25_rf_reg4 = geomAndNot(fmom25_rf_reg3 geomButtOrOver(fmom25_rf_reg3 MOMDMY22))
fmom25_rf_reg  = geomButtOrOver(fmom25_rf_reg4 NIMP)
fmom25_mx_reg1 = geomAndNot(MOMDMY22 geomButtOrOver(MOMDMY22 RFDUMMY))
fmom25_mx_reg2 = geomAndNot(fmom25_mx_reg1 geomButtOrOver(fmom25_mx_reg1 RFDUMMY1))
fmom25_mx_reg3 = geomButtOrOver(fmom25_mx_reg2 mom25_5)
fmom25_mx_reg4 = geomAndNot(fmom25_mx_reg3 geomButtOrOver(fmom25_mx_reg3 mom25_idt))
fmom25_mx_reg5 = geomButtOrOver(fmom25_mx_reg4 MOMDMY100)
fmom25_mx_reg  = geomButtOrOver(fmom25_mx_reg5 NIMP)
mom25_mx_aux   = geomAnd(mom25_5 MOMDMY22)
mom35_1 = geomAndNot(MOMDMY5 geomButtOrOver(MOMDMY5 MOM_field1))
mom35_2 = geomAndNot(mom35_1 geomButtOrOver(mom35_1 MOM_field2))
mom35_3 = geomButtOrOver(mom35_2 MOM_field3)
mom35_4 = geomButtOrOver(mom35_3 MOM_field4)
mom35_5 = geomButtOrOver(mom35_4 MOM_field5)
mom35_idt = geomAndNot(MOM_field5 MOM_field4)
mom35_reg1 = geomAndNot(mom35_5 geomButtOrOver(mom35_5 RFDUMMY))
mom35_reg0 = geomAndNot(mom35_reg1 RFDUMMY1)
mom35_reg = geomButtOrOver(mom35_reg0 mom35_idt)
mom35_reg_rf0 = geomAnd(mom35_reg1 RFDUMMY1)
mom35_reg_rf = geomButtOrOver(mom35_reg_rf0 mom35_idt)
fmom35_reg1	= geomAndNot(mom35_5 geomButtOrOver(mom35_5 RFDUMMY))
fmom35_reg2	= geomAndNot(fmom35_reg1 geomButtOrOver(fmom35_reg1 RFDUMMY1))
fmom35_reg3	= geomAndNot(fmom35_reg2 geomButtOrOver(fmom35_reg2 mom35_idt))
fmom35_reg4	= geomButtOrOver(fmom35_reg3 MOMDMY100) 
fmom35_reg5	= geomAndNot(fmom35_reg4  geomButtOrOver(fmom35_reg4 MOMDMY22))
fmom35_reg	= geomButtOrOver(fmom35_reg5 NIMP) 
fmom35_rf_reg1 = geomButtOrOver(mom35_5 RFDUMMY1)
fmom35_rf_reg2 = geomAndNot(fmom35_rf_reg1 geomButtOrOver(fmom35_rf_reg1 mom35_idt))
fmom35_rf_reg3 = geomButtOrOver(fmom35_rf_reg2 MOMDMY100)
fmom35_rf_reg4 = geomAndNot(fmom35_rf_reg3 geomButtOrOver(fmom35_rf_reg3 MOMDMY22))
fmom35_rf_reg  = geomButtOrOver(fmom35_rf_reg4 NIMP)
fmom35_mx_reg1 = geomAndNot(MOMDMY22 geomButtOrOver(MOMDMY22 RFDUMMY))
fmom35_mx_reg2 = geomAndNot(fmom35_mx_reg1 geomButtOrOver(fmom35_mx_reg1 RFDUMMY1))
fmom35_mx_reg3 = geomButtOrOver(fmom35_mx_reg2 mom35_5)
fmom35_mx_reg4 = geomAndNot(fmom35_mx_reg3 geomButtOrOver(fmom35_mx_reg3 mom35_idt))
fmom35_mx_reg5 = geomButtOrOver(fmom35_mx_reg4 MOMDMY100)
fmom35_mx_reg  = geomButtOrOver(fmom35_mx_reg5 NIMP)
mom35_mx_aux   = geomAnd(mom35_5 MOMDMY22)
sbd_w = drc(schottky_p schottky_n sep < 0.49 opposite)

;#############################################
;# CONNECTION                                #
;#############################################
ntap_not_var = geomAndNot(ntap geomOr( geomOr( geomOr( VARDMYX VARG3 ) VARG6 ) JVARD ))
    ;--- geomConnect ---
geomConnect(
    buttOrOver(ntap ntap_not_var)
buttOrOver(gate1_not_IO1 poly)
    buttOrOver(ptap tpdiff)
    buttOrOver(metal6 indm6m)
    buttOrOver(metal6 indm6p)
    via( VIA5  metal6 metal5 ) 
    via( ctm_via  metal6 ctm ) 
    via( VIA6  metal7 metal6 ) 
    buttOrOver(tpdiff lcesdp)
    buttOrOver(tpdiff s_tpdiff)
    buttOrOver(tpdiff d_tpdiff)
    buttOrOver(emit tpdiff)
    via( pm_cbd  UBM metal7 ) 
    buttOrOver(gate1_not_IO1 poly)
    buttOrOver(emit_od2 tpdiff)
    buttOrOver(metal3 mom3p1)
    via( VIA2  metal3 metal2 ) 
    buttOrOver(metal3 mom3m1)
    buttOrOver(metal3 mom3m2)
    buttOrOver(metal3 mom3p2)
    buttOrOver(tndiff ydio_hole)
    buttOrOver(tndiff lcesdm)
    via( nplug  tndiff nxwell_npn ) 
    buttOrOver(tndiff tpdiff)
    buttOrOver(tndiff d_tndiff)
    buttOrOver(tndiff s_tndiff)
    buttOrOver(tndiff ydio)
    via( VIA1  metal2 metal1 ) 
    buttOrOver(ntap tndiff)
    buttOrOver(mim_po poly)
    buttOrOver(poly_rf poly)
    via( odCont  metal1 schottky_n ) 
    via( polyCont  metal1 poly ) 
    via( polyCont  metal1 ppoly ) 
    via( polyCont  metal1 poly_rf ) 
    via( odCont  metal1 tpdiff ) 
    via( odCont  metal1 schottky_p ) 
    via( polyCont  metal1 crt_poly ) 
    via( odCont  metal1 tndiff ) 
    via( nplug  nbase tndiff ) 
    buttOrOver(metal4 mom4p2)
    buttOrOver(metal4 mom4m1)
    buttOrOver(metal4 mom4m2)
    buttOrOver(metal4 mom4p1)
    via( VIA3  metal4 metal3 ) 
    buttOrOver(metal4 indm4c)
    via( nplug  nbase_od2 tndiff ) 
    buttOrOver(crt_poly poly)
    buttOrOver(tiod tpdiff)
    buttOrOver(tiod tndiff)
    via( pplug  pbase tpdiff ) 
    buttOrOver(ncoll nxwell_npn)
    buttOrOver(nemit tndiff)
    via( VIA4  metal5 metal4 ) 
    buttOrOver(metal5 mom5p1)
    buttOrOver(metal5 mom5m1)
    buttOrOver(metal5 mim_block)
    buttOrOver(metal5 mom5m2)
    buttOrOver(metal5 mom5p2)
    ;common geomConnect in xdev statement----
    ;--------------------------------

    label( metal1_text  metal1 ) 
    label( metal2_text  metal2 ) 
    label( metal3_text  metal3 ) 
    label( metal4_text  metal4 ) 
    label( metal5_text  metal5 ) 
    label( metal6_text  metal6 ) 
    label( metal1_ptext  metal1 ) 
    label( metal2_ptext  metal2 ) 
    label( metal3_ptext  metal3 ) 
    label( metal4_ptext  metal4 ) 
    label( metal5_ptext  metal5 ) 
    label( metal6_ptext  metal6 ) 
)

if( avSwitch( "Skip_Soft_Connect_Checks") then 
    geomStamp( nxwell tndiff by ntap ) 
    geomStamp( RFDUMMY5T tpdiff by rf_pplug ) 
    geomStamp( n_psub tpdiff by n_pplug ) 
    geomStamp( psub tpdiff by ptap ) 
    geomStamp( psub_term tpdiff by ptap ) 
    geomStamp( RFDUMMY6T tpdiff by rf_pplug ) 
    geomStamp( coll_od2 tpdiff by pplug ) 
    geomStamp( coll tpdiff by pplug ) 
    geomStamp( rw tpdiff by pplug ) 
    geomStamp( poly_term nxwell by poly_nw ) 
    geomStamp( poly_term psub by poly_psub ) 
    geomStamp( DNW nxwell by dnwc ) 
    geomStamp( rfdmy56 psub by rfdmy56_via ) 
else 
    geomStamp( nxwell tndiff by ntap multStamp ) 
    geomStamp( RFDUMMY5T tpdiff by rf_pplug multStamp ) 
    if( !avSwitch( "NW_RING" ) then
       geomStamp( n_psub tpdiff by n_pplug multStamp ) 
    ) ;if

    geomStamp( psub tpdiff by ptap multStamp ) 
    geomStamp( psub_term tpdiff by ptap multStamp ) 
    geomStamp( RFDUMMY6T tpdiff by rf_pplug multStamp ) 
    geomStamp( coll_od2 tpdiff by pplug multStamp ) 
    geomStamp( coll tpdiff by pplug multStamp ) 
    geomStamp( rw tpdiff by pplug multStamp ) 
    geomStamp( poly_term nxwell by poly_nw multStamp ) 
    geomStamp( poly_term psub by poly_psub ) 
    geomStamp( DNW nxwell by dnwc multStamp ) 
    geomStamp( rfdmy56 psub by rfdmy56_via multStamp ) 
) ;if 
;//#############################################
;//# STAMP NODAL INFO. TO DEVICE LAYER         #
;//#############################################
;#############################################
;# DEFINE PROCEDURE                          #
;#############################################
procedure( WPE_predict( pg sd reg WPE WPEtype )
width  = geomGetEdge( pg  butting sd )
length = geomGetEdge( reg inside  pg )
psub_proximity = geomOr( WPEtype )

if( ( WPE == "n" ) then
;    psub_proximity is followeddfm_device_wi_wpe.rul mask logic operation
;psub_proximity = geomSize( WPEtype 0.001 edges )
measureProximity2(
        reg
        psub_proximity
        wped
        output( SCraw SCBraw SCCraw )
        edgeLayers(width length)
        calculateEdges4( scale*sw * ( 1/(scale*( s0+MOS_LR_EXT ) ) - 1/(scale*( s1+MOS_LR_EXT ) ))
                         scale*sw * ( 1/(scale*( s0+MOS_LR_EXT ) ) - 1/(scale*( s1+MOS_LR_EXT ) ))
                         scale*sw * ( 1/(scale*( s0+NMOS_BOTTOM_EXT )) - 1/(scale*( s1+NMOS_BOTTOM_EXT ) ))
                         scale*sw * ( 1/(scale*s0) - 1/(scale*s1) )
                         scale*sw * ( ( (scale*( s0+MOS_LR_EXT ))*exp(-10*(scale*( s0+MOS_LR_EXT )))/10 ) + ( exp(-10*(scale*( s0+MOS_LR_EXT )))/100 ) - ( (scale*( s1+MOS_LR_EXT ))*exp(-10*(scale*( s1+MOS_LR_EXT )))/10 ) - (exp(-10*(scale*( s1+MOS_LR_EXT )))/100 ) )
                         scale*sw * ( ( (scale*( s0+MOS_LR_EXT ))*exp(-10*(scale*( s0+MOS_LR_EXT )))/10 ) + ( exp(-10*(scale*( s0+MOS_LR_EXT )))/100 ) - ( (scale*( s1+MOS_LR_EXT ))*exp(-10*(scale*( s1+MOS_LR_EXT )))/10 ) - (exp(-10*(scale*( s1+MOS_LR_EXT )))/100 ) )
                         scale*sw * ( ( (scale*( s0+NMOS_BOTTOM_EXT ))*exp(-10*(scale*( s0+NMOS_BOTTOM_EXT )))/10 ) + ( exp(-10*(scale*( s0+NMOS_BOTTOM_EXT )))/100 ) - ( (scale*( s1+NMOS_BOTTOM_EXT ))*exp(-10*(scale*( s1+NMOS_BOTTOM_EXT )))/10 ) - (exp(-10*(scale*( s1+NMOS_BOTTOM_EXT )))/100 ) )
                         scale*sw * ( (  scale*s0*exp(-10*scale*s0)/10 ) + ( exp(-10*scale*s0)/100 ) - ( scale*s1*exp(-10*scale*s1)/10 ) - (exp(-10*scale*s1)/100 ) )
                         scale*sw * ( ( (scale*( s0+MOS_LR_EXT ))*exp(-20*(scale*( s0+MOS_LR_EXT )))/20 ) + ( exp(-20*(scale*( s0+MOS_LR_EXT )))/400 ) - ( (scale*( s1+MOS_LR_EXT ))*exp(-20*(scale*( s1+MOS_LR_EXT )))/20 ) - (exp(-20*(scale*( s1+MOS_LR_EXT )))/400 ) )
                         scale*sw * ( ( (scale*( s0+MOS_LR_EXT ))*exp(-20*(scale*( s0+MOS_LR_EXT )))/20 ) + ( exp(-20*(scale*( s0+MOS_LR_EXT )))/400 ) - ( (scale*( s1+MOS_LR_EXT ))*exp(-20*(scale*( s1+MOS_LR_EXT )))/20 ) - (exp(-20*(scale*( s1+MOS_LR_EXT )))/400 ) )
                         scale*sw * ( ( (scale*( s0+NMOS_BOTTOM_EXT ))*exp(-20*(scale*( s0+NMOS_BOTTOM_EXT )))/20 ) + ( exp(-20*(scale*( s0+NMOS_BOTTOM_EXT )))/400 ) - ( (scale*( s1+NMOS_BOTTOM_EXT ))*exp(-20*(scale*( s1+NMOS_BOTTOM_EXT )))/20 ) - (exp(-20*(scale*( s1+NMOS_BOTTOM_EXT )))/400  ) )
                         scale*sw * ( (  scale*s0*exp(-20*scale*s0)/20 ) + ( exp(-20*scale*s0)/400 ) - ( scale*s1*exp(-20*scale*s1)/20 ) - (exp(-20*scale*s1)/400 ) )

                        )
        inside shieldedWell
        forceMaxS
)
SCAeff = calculateParameter( 1/(scale*gateW) * 1/(scale*gateL) * SCraw )
SCBeff = calculateParameter( 1/(scale*gateW) * 1/(scale*gateL) * SCBraw )
SCCeff = calculateParameter( 1/(scale*gateW) * 1/(scale*gateL) * SCCraw )
nameParameter(SCAeff "sca")
nameParameter(SCBeff "scb")
nameParameter(SCCeff "scc")

else
if( ( WPE == "p" ) then
;    psub_proximity is followed mask logic operation
;psub_proximity = geomSize( WPEtype 0.001 edges )
measureProximity2(
        reg
        psub_proximity
        wped
        output( SCraw SCBraw SCCraw )
        edgeLayers(width length)
        calculateEdges4( scale*sw * ( 1/(scale*( s0+MOS_LR_EXT ) ) - 1/(scale*( s1+MOS_LR_EXT ) ))
                         scale*sw * ( 1/(scale*( s0+MOS_LR_EXT ) ) - 1/(scale*( s1+MOS_LR_EXT ) ))
                         scale*sw * ( 1/(scale*s0) - 1/(scale*s1) )
                         scale*sw * ( 1/(scale*( s0+PMOS_TOP_EXT )) - 1/(scale*( s1+PMOS_TOP_EXT ) ))
                         scale*sw * ( ( (scale*( s0+MOS_LR_EXT ))*exp(-10*(scale*( s0+MOS_LR_EXT )))/10 ) + ( exp(-10*(scale*( s0+MOS_LR_EXT )))/100 ) - ( (scale*( s1+MOS_LR_EXT ))*exp(-10*(scale*( s1+MOS_LR_EXT )))/10 ) - (exp(-10*(scale*( s1+MOS_LR_EXT )))/100 ) )
                         scale*sw * ( ( (scale*( s0+MOS_LR_EXT ))*exp(-10*(scale*( s0+MOS_LR_EXT )))/10 ) + ( exp(-10*(scale*( s0+MOS_LR_EXT )))/100 ) - ( (scale*( s1+MOS_LR_EXT ))*exp(-10*(scale*( s1+MOS_LR_EXT )))/10 ) - (exp(-10*(scale*( s1+MOS_LR_EXT )))/100 ) )
                         scale*sw * ( (  scale*s0*exp(-10*scale*s0)/10 ) + ( exp(-10*scale*s0)/100 ) - ( scale*s1*exp(-10*scale*s1)/10 ) - (exp(-10*scale*s1)/100 ) )
                         scale*sw * ( ( (scale*( s0+PMOS_TOP_EXT ))*exp(-10*(scale*( s0+PMOS_TOP_EXT )))/10 ) + ( exp(-10*(scale*( s0+PMOS_TOP_EXT )))/100 ) - ( (scale*( s1+PMOS_TOP_EXT ))*exp(-10*(scale*( s1+PMOS_TOP_EXT )))/10 ) - (exp(-10*(scale*( s1+PMOS_TOP_EXT )))/100 ) )
                         scale*sw * ( ( (scale*( s0+MOS_LR_EXT ))*exp(-20*(scale*( s0+MOS_LR_EXT )))/20 ) + ( exp(-20*(scale*( s0+MOS_LR_EXT )))/400 ) - ( (scale*( s1+MOS_LR_EXT ))*exp(-20*(scale*( s1+MOS_LR_EXT )))/20 ) - (exp(-20*(scale*( s1+MOS_LR_EXT )))/400 ) )
                         scale*sw * ( ( (scale*( s0+MOS_LR_EXT ))*exp(-20*(scale*( s0+MOS_LR_EXT )))/20 ) + ( exp(-20*(scale*( s0+MOS_LR_EXT )))/400 ) - ( (scale*( s1+MOS_LR_EXT ))*exp(-20*(scale*( s1+MOS_LR_EXT )))/20 ) - (exp(-20*(scale*( s1+MOS_LR_EXT )))/400 ) )
                         scale*sw * ( (  scale*s0*exp(-20*scale*s0)/20 ) + ( exp(-20*scale*s0)/400 ) - ( scale*s1*exp(-20*scale*s1)/20 ) - (exp(-20*scale*s1)/400 ) )
                         scale*sw * ( ( (scale*( s0+PMOS_TOP_EXT ))*exp(-20*(scale*( s0+PMOS_TOP_EXT )))/20 ) + ( exp(-20*(scale*( s0+PMOS_TOP_EXT )))/400 ) - ( (scale*( s1+PMOS_TOP_EXT ))*exp(-20*(scale*( s1+PMOS_TOP_EXT )))/20 ) - (exp(-20*(scale*( s1+PMOS_TOP_EXT )))/400  ) )
                        )
        inside shieldedWell
        forceMaxS
)
SCAeff = calculateParameter( 1/(scale*gateW) * 1/(scale*gateL) * SCraw )
SCBeff = calculateParameter( 1/(scale*gateW) * 1/(scale*gateL) * SCBraw )
SCCeff = calculateParameter( 1/(scale*gateW) * 1/(scale*gateL) * SCCraw )
nameParameter(SCAeff "sca")
nameParameter(SCBeff "scb" )
nameParameter(SCCeff "scc")
 ) ;; end of if WPE ==P
) ;; end of if WPE ==N

)

;#############################################
;# FORM DEVICE                               #
;#############################################
extractMOS("ND" bngate_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch3_mac" )
  cellView( "nmos3v_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (bngate_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (bngate_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") bngate_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") bngate_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") bngate_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" bngate_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( bngate_mac "model" "nch3_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( bngate_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, bngate_mac, "n", c_nmIO )
extractMOS("NL" nlgate poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nanch" )
  cellView( "nmosnvt2v ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (nlgate butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (nlgate) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") nlgate shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") nlgate shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") nlgate shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" nlgate )
   if( !avSwitch( "spice_extraction") then
     saveProperty( nlgate "model" "nanch") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( nlgate
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, nlgate, "n", NTN )
extractMOS("N" ngate poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch" )
  cellView( "nmos2v ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" ngate )
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate "model" "nch") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, ngate, "n", c_nmcore )
extractMOS("N" ngate_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_mac" )
  cellView( "nmos2v_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (ngate_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (ngate_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") ngate_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") ngate_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") ngate_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" ngate_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( ngate_mac "model" "nch_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( ngate_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, ngate_mac, "n", c_nmcore )
extractMOS("N2" bnrgate poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch3" )
  cellView( "nmos3vdnw ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (bnrgate butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (bnrgate) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") bnrgate shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") bnrgate shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") bnrgate shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" bnrgate )
   if( !avSwitch( "spice_extraction") then
     saveProperty( bnrgate "model" "nch3") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( bnrgate
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, bnrgate, "n", c_nmIO )
extractMOS("ND" bngate poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch3" )
  cellView( "nmos3v ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (bngate butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (bngate) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") bngate shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") bngate shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") bngate shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" bngate )
   if( !avSwitch( "spice_extraction") then
     saveProperty( bngate "model" "nch3") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( bngate
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, bngate, "n", c_nmIO )
extractMOS("NL" nlgate_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nanch_mac" )
  cellView( "nmosnvt2v_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (nlgate_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (nlgate_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") nlgate_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") nlgate_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") nlgate_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" nlgate_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( nlgate_mac "model" "nanch_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( nlgate_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, nlgate_mac, "n", NTN )
extractMOS("N1" nrgate_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch_mac" )
  cellView( "nmos2vdnw_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (nrgate_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (nrgate_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") nrgate_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") nrgate_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") nrgate_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" nrgate_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( nrgate_mac "model" "nch_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( nrgate_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, nrgate_mac, "n", c_nmcore )
extractMOS("NB" bmvt_ngate poly("G") tndiff("S" "D") psub("B")
  spiceModel( "mench3" )
  cellView( "nmosmvt3v ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (bmvt_ngate butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (bmvt_ngate) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") bmvt_ngate shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") bmvt_ngate shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") bmvt_ngate shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" bmvt_ngate )
   if( !avSwitch( "spice_extraction") then
     saveProperty( bmvt_ngate "model" "mench3") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( bmvt_ngate
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, bmvt_ngate, "n", c_nmIO )
extractMOS("NN" bnlgate poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nanch3" )
  cellView( "nmosnvt3v ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (bnlgate butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (bnlgate) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") bnlgate shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") bnlgate shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") bnlgate shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" bnlgate )
   if( !avSwitch( "spice_extraction") then
     saveProperty( bnlgate "model" "nanch3") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( bnlgate
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, bnlgate, "n", NTN )
extractMOS("NA" mvt_ngate poly("G") tndiff("S" "D") psub("B")
  spiceModel( "mench" )
  cellView( "nmosmvt2v ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (mvt_ngate butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (mvt_ngate) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") mvt_ngate shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") mvt_ngate shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") mvt_ngate shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" mvt_ngate )
   if( !avSwitch( "spice_extraction") then
     saveProperty( mvt_ngate "model" "mench") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( mvt_ngate
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, mvt_ngate, "n", c_nmcore )
extractMOS("N1" nrgate poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch" )
  cellView( "nmos2vdnw ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (nrgate butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (nrgate) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") nrgate shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") nrgate shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") nrgate shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" nrgate )
   if( !avSwitch( "spice_extraction") then
     saveProperty( nrgate "model" "nch") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( nrgate
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, nrgate, "n", c_nmcore )
extractMOS("NB" bmvt_ngate_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "mench3_mac" )
  cellView( "nmosmvt3v_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (bmvt_ngate_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (bmvt_ngate_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") bmvt_ngate_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") bmvt_ngate_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") bmvt_ngate_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" bmvt_ngate_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( bmvt_ngate_mac "model" "mench3_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( bmvt_ngate_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, bmvt_ngate_mac, "n", c_nmIO )
extractMOS("NN" bnlgate_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nanch3_mac" )
  cellView( "nmosnvt3v_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (bnlgate_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (bnlgate_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") bnlgate_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") bnlgate_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") bnlgate_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" bnlgate_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( bnlgate_mac "model" "nanch3_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( bnlgate_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, bnlgate_mac, "n", NTN )
extractMOS("NA" mvt_ngate_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "mench_mac" )
  cellView( "nmosmvt2v_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (mvt_ngate_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (mvt_ngate_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") mvt_ngate_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") mvt_ngate_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") mvt_ngate_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" mvt_ngate_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( mvt_ngate_mac "model" "mench_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( mvt_ngate_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, mvt_ngate_mac, "n", c_nmcore )
extractMOS("N2" bnrgate_mac poly("G") tndiff("S" "D") psub("B")
  spiceModel( "nch3_mac" )
  cellView( "nmos3vdnw_mac ivpcell" )
  flagMalformed)
   w_NMOS    = measureParameter(length (bnrgate_mac butting tndiff) 0.5e-6)
   area_NMOS = measureParameter(area (bnrgate_mac) 1e-12) 
   l_NMOS    = calculateParameter(area_NMOS/w_NMOS) 
   areaS     = measureParameter( area (tndiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tndiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") bnrgate_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") bnrgate_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_NMOS - l_NMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_NMOS)/w_NMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") bnrgate_mac shared) 
   nameParameter( w_NMOS "w" ) 
   nameParameter( l_NMOS "l" ) 
   attachParameter( w_NMOS "wf" bnrgate_mac )
   if( !avSwitch( "spice_extraction") then
     saveProperty( bnrgate_mac "model" "nch3_mac") 
   ) ;if

      
    gateL =  calculateParameter( l_NMOS * 1e6 )
    gateW =  calculateParameter( w_NMOS * 1e6 )
    measureSTI( bnrgate_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    psub_proximity is followed mask logic operation 
WPE_predict( poly, tndiff, bnrgate_mac, "n", c_nmIO )
extractMOS("PA" mvt_pgate_mac poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "mepch_mac" )
  cellView( "pmosmvt2v_mac ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (mvt_pgate_mac butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (mvt_pgate_mac) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") mvt_pgate_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") mvt_pgate_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") mvt_pgate_mac shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
   attachParameter( w_PMOS "wf" mvt_pgate_mac )
  if( !avSwitch( "spice_extraction") then 
    saveProperty( mvt_pgate_mac "model" "mepch_mac") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( mvt_pgate_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, mvt_pgate_mac, "p", c_pmcore )
extractMOS("PA" mvt_pgate poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "mepch" )
  cellView( "pmosmvt2v ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (mvt_pgate butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (mvt_pgate) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") mvt_pgate shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") mvt_pgate shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") mvt_pgate shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
   attachParameter( w_PMOS "wf" mvt_pgate )
  if( !avSwitch( "spice_extraction") then 
    saveProperty( mvt_pgate "model" "mepch") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( mvt_pgate
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, mvt_pgate, "p", c_pmcore )
extractMOS("P" pgate_mac poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch_mac" )
  cellView( "pmos2v_mac ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate_mac butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate_mac) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate_mac shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
   attachParameter( w_PMOS "wf" pgate_mac )
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate_mac "model" "pch_mac") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( pgate_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, pgate_mac, "p", c_pmcore )
extractMOS("PD" bpgate poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch3" )
  cellView( "pmos3v ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (bpgate butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (bpgate) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") bpgate shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") bpgate shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") bpgate shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
   attachParameter( w_PMOS "wf" bpgate )
  if( !avSwitch( "spice_extraction") then 
    saveProperty( bpgate "model" "pch3") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( bpgate
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, bpgate, "p", c_pmIO )
extractMOS("P" pgate poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch" )
  cellView( "pmos2v ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (pgate butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (pgate) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") pgate shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") pgate shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") pgate shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
   attachParameter( w_PMOS "wf" pgate )
  if( !avSwitch( "spice_extraction") then 
    saveProperty( pgate "model" "pch") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( pgate
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, pgate, "p", c_pmcore )
extractMOS("PD" bpgate_mac poly("G") tpdiff("S" "D") nxwell("B")
  spiceModel( "pch3_mac" )
  cellView( "pmos3v_mac ivpcell" )
  flagMalformed)
   w_PMOS    = measureParameter(length (bpgate_mac butting tpdiff) 0.5e-6)
   area_PMOS = measureParameter(area (bpgate_mac) 1e-12) 
   l_PMOS    = calculateParameter(area_PMOS/w_PMOS) 
   areaS     = measureParameter( area (tpdiff) 1e-12 ) 
   periS     = measureParameter( perimeter (tpdiff) 1e-6 ) 
   attachParameter( areaS ("ad" "D") ("as" "S") bpgate_mac shared) 
   attachParameter( periS ("pd" "D") ("ps" "S") bpgate_mac shared) 
   if( avSwitch("ZERO_NRDS") then 
   nrSD = calculateParameter(l_PMOS - l_PMOS) 
   else 
   nrSD = calculateParameter(((areaS/w_PMOS)/w_PMOS)) 
   ) 
   attachParameter( nrSD  ("nrd" "D") ("nrs" "S") bpgate_mac shared) 
   nameParameter( w_PMOS "w" ) 
   nameParameter( l_PMOS "l" ) 
   attachParameter( w_PMOS "wf" bpgate_mac )
  if( !avSwitch( "spice_extraction") then 
    saveProperty( bpgate_mac "model" "pch3_mac") 
  ) ;if 

      
    gateL =  calculateParameter( l_PMOS * 1e6 )
    gateW =  calculateParameter( w_PMOS * 1e6 )
    measureSTI( bpgate_mac
                OD
                60
                output( invSA invSB )
                calculateExp(  sw/gateW/(sa + gateL*0.5)
			       sw/gateW/(sb + gateL*0.5)
		   	    )
               )
    SA = calculateParameter( (1/invSA - 0.5*gateL) * 1e-6 )
    nameParameter( SA "sa")
    SB = calculateParameter( (1/invSB - 0.5*gateL) * 1e-6 )
    nameParameter( SB "sb")

;    nxwell_proximity is followed mask logic operation
WPE_predict( poly, tpdiff, bpgate_mac, "p", c_pmIO )
extractDIODE("DB" ydio psub("PLUS") ydio_hole("MINUS")
  spiceModel( "endio_3" )
  cellView( "diodesd3v ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (ydio) 1e-12) 
   pj_DIO   = measureParameter(perimeter (ydio) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ydio "model" "endio_3") 
   ) ;if

extractDIODE("D2" ndio_3 psub("PLUS") tndiff("MINUS")
  spiceModel( "ndio_3" )
  cellView( "dioden3v ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (ndio_3) 1e-12) 
   pj_DIO   = measureParameter(perimeter (ndio_3) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ndio_3 "model" "ndio_3") 
   ) ;if

extractDIODE("D3" nwdio_3 psub("PLUS") nxwell("MINUS")
  spiceModel( "nwdio_3" )
  cellView( "diodenw3v ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (nwdio_3) 1e-12) 
   pj_DIO   = measureParameter(perimeter (nwdio_3) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( nwdio_3 "model" "nwdio_3") 
   ) ;if

extractDIODE("DP" pdio tpdiff("PLUS") nxwell("MINUS")
  spiceModel( "pdio" )
  cellView( "diodep ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (pdio) 1e-12) 
   pj_DIO   = measureParameter(perimeter (pdio) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( pdio "model" "pdio") 
   ) ;if

extractDIODE("ndio_3m" ndio_3m psub("PLUS") tndiff("MINUS")
  spiceModel( "ndio_3m" )
  cellView( "ndio_3m ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (ndio_3m) 1e-12) 
   pj_DIO   = measureParameter(perimeter (ndio_3m) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ndio_3m "model" "ndio_3m") 
   ) ;if

extractDIODE("D1" pdio_3 tpdiff("PLUS") nxwell("MINUS")
  spiceModel( "pdio_3" )
  cellView( "diodep3v ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (pdio_3) 1e-12) 
   pj_DIO   = measureParameter(perimeter (pdio_3) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( pdio_3 "model" "pdio_3") 
   ) ;if

extractDIODE("pdio_m" pdio_m tpdiff("PLUS") nxwell("MINUS")
  spiceModel( "pdio_m" )
  cellView( "pdio_m ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (pdio_m) 1e-12) 
   pj_DIO   = measureParameter(perimeter (pdio_m) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( pdio_m "model" "pdio_m") 
   ) ;if

extractDIODE("ndio_m" ndio_m psub("PLUS") tndiff("MINUS")
  spiceModel( "ndio_m" )
  cellView( "ndio_m ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (ndio_m) 1e-12) 
   pj_DIO   = measureParameter(perimeter (ndio_m) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ndio_m "model" "ndio_m") 
   ) ;if

extractDIODE("DN" ndio psub("PLUS") tndiff("MINUS")
  spiceModel( "ndio" )
  cellView( "dioden ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (ndio) 1e-12) 
   pj_DIO   = measureParameter(perimeter (ndio) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( ndio "model" "ndio") 
   ) ;if

extractDIODE("DW" nwdio psub("PLUS") nxwell("MINUS")
  spiceModel( "nwdio" )
  cellView( "diodenw ivpcell" )
  flagMalformed)
   area_DIO = measureParameter(area (nwdio) 1e-12) 
   pj_DIO   = measureParameter(perimeter (nwdio) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( nwdio "model" "nwdio") 
   ) ;if

extractRES( "LR" lrpop poly("PLUS" "MINUS")
  spiceModel( "rppolyhri" )
  cellView( "rphripoly ivpcell" )
  flagMalformed)
   area_RES   = measureParameter(area (lrpop) 1e-12) 
   width_RES  = measureParameter(length (lrpop butting poly) 0.5e-6) 
   length_RES = calculateParameter( area_RES/width_RES ) 
   resist_RES = calculateParameter( length_RES/width_RES * RVLR ) 
   nameParameter( resist_RES "VALUE" ) 
   nameParameter( width_RES "w" ) 
   nameParameter( length_RES "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( lrpop "model" "rppolyhri") 
   ) ;if

extractRES( "M5" mt5res metal5("PLUS" "MINUS")
  spiceModel( "rm5" )
  cellView( "rm5 ivpcell" )
  flagMalformed)
   area_RES   = measureParameter(area (mt5res) 1e-12) 
   width_RES  = measureParameter(length (mt5res butting metal5) 0.5e-6) 
   length_RES = calculateParameter( area_RES/width_RES ) 
   resist_RES = calculateParameter( length_RES/width_RES * RVM5 ) 
   nameParameter( resist_RES "VALUE" ) 
   nameParameter( width_RES "w" ) 
   nameParameter( length_RES "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( mt5res "model" "rm5") 
   ) ;if

extractRES( "NS" rnpolys_r poly("PLUS" "MINUS")
  spiceModel( "rnpo1w" )
  cellView( "rnlpoly ivpcell" )
  flagMalformed)
   area_RES   = measureParameter(area (rnpolys_r) 1e-12) 
   width_RES  = measureParameter(length (rnpolys_r butting poly) 0.5e-6) 
   length_RES = calculateParameter( area_RES/width_RES ) 
   resist_RES = calculateParameter( length_RES/width_RES * RVNS ) 
   nameParameter( resist_RES "VALUE" ) 
   nameParameter( width_RES "w" ) 
   nameParameter( length_RES "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( rnpolys_r "model" "rnpo1w") 
   ) ;if

extractRES( "PS" rppolyl_r poly("PLUS" "MINUS")
  spiceModel( "rppo1" )
  cellView( "rplpoly ivpcell" )
  flagMalformed)
   area_RES   = measureParameter(area (rppolyl_r) 1e-12) 
   width_RES  = measureParameter(length (rppolyl_r butting poly) 0.5e-6) 
   length_RES = calculateParameter( area_RES/width_RES ) 
   resist_RES = calculateParameter( length_RES/width_RES * RVPS ) 
   nameParameter( resist_RES "VALUE" ) 
   nameParameter( width_RES "w" ) 
   nameParameter( length_RES "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( rppolyl_r "model" "rppo1") 
   ) ;if

extractRES( "M4" mt4res metal4("PLUS" "MINUS")
  spiceModel( "rm4" )
  cellView( "rm4 ivpcell" )
  flagMalformed)
   area_RES   = measureParameter(area (mt4res) 1e-12) 
   width_RES  = measureParameter(length (mt4res butting metal4) 0.5e-6) 
   length_RES = calculateParameter( area_RES/width_RES ) 
   resist_RES = calculateParameter( length_RES/width_RES * RVM4 ) 
   nameParameter( resist_RES "VALUE" ) 
   nameParameter( width_RES "w" ) 
   nameParameter( length_RES "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( mt4res "model" "rm4") 
   ) ;if

extractRES( "PI" rpodl_r tpdiff("PLUS" "MINUS")
  spiceModel( "rpod" )
  cellView( "rplplus_2t ivpcell" )
  flagMalformed)
   area_RES   = measureParameter(area (rpodl_r) 1e-12) 
   width_RES  = measureParameter(length (rpodl_r butting tpdiff) 0.5e-6) 
   length_RES = calculateParameter( area_RES/width_RES ) 
   resist_RES = calculateParameter( length_RES/width_RES * RVPI ) 
   nameParameter( resist_RES "VALUE" ) 
   nameParameter( width_RES "w" ) 
   nameParameter( length_RES "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( rpodl_r "model" "rpod") 
   ) ;if

extractRES( "ND" nrdop tndiff("PLUS" "MINUS")
  spiceModel( "rnodrpo" )
  cellView( "rnplus_2t ivpcell" )
  flagMalformed)
   area_RES   = measureParameter(area (nrdop) 1e-12) 
   width_RES  = measureParameter(length (nrdop butting tndiff) 0.5e-6) 
   length_RES = calculateParameter( area_RES/width_RES ) 
   resist_RES = calculateParameter( length_RES/width_RES * RVND ) 
   nameParameter( resist_RES "VALUE" ) 
   nameParameter( width_RES "w" ) 
   nameParameter( length_RES "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( nrdop "model" "rnodrpo") 
   ) ;if

extractRES( "NI" rnods_r tndiff("PLUS" "MINUS")
  spiceModel( "rnodw" )
  cellView( "rnlplus_2t ivpcell" )
  flagMalformed)
   area_RES   = measureParameter(area (rnods_r) 1e-12) 
   width_RES  = measureParameter(length (rnods_r butting tndiff) 0.5e-6) 
   length_RES = calculateParameter( area_RES/width_RES ) 
   resist_RES = calculateParameter( length_RES/width_RES * RVNI ) 
   nameParameter( resist_RES "VALUE" ) 
   nameParameter( width_RES "w" ) 
   nameParameter( length_RES "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( rnods_r "model" "rnodw") 
   ) ;if

extractRES( "M1" mt1res metal1("PLUS" "MINUS")
  spiceModel( "rm1" )
  cellView( "rm1 ivpcell" )
  flagMalformed)
   area_RES   = measureParameter(area (mt1res) 1e-12) 
   width_RES  = measureParameter(length (mt1res butting metal1) 0.5e-6) 
   length_RES = calculateParameter( area_RES/width_RES ) 
   resist_RES = calculateParameter( length_RES/width_RES * RVM1 ) 
   nameParameter( resist_RES "VALUE" ) 
   nameParameter( width_RES "w" ) 
   nameParameter( length_RES "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( mt1res "model" "rm1") 
   ) ;if

extractRES( "NR" nrpop poly("PLUS" "MINUS")
  spiceModel( "rnpo1rpo" )
  cellView( "rnhpoly ivpcell" )
  flagMalformed)
   area_RES   = measureParameter(area (nrpop) 1e-12) 
   width_RES  = measureParameter(length (nrpop butting poly) 0.5e-6) 
   length_RES = calculateParameter( area_RES/width_RES ) 
   resist_RES = calculateParameter( length_RES/width_RES * RVNR ) 
   nameParameter( resist_RES "VALUE" ) 
   nameParameter( width_RES "w" ) 
   nameParameter( length_RES "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( nrpop "model" "rnpo1rpo") 
   ) ;if

extractRES( "PD" prdop tpdiff("PLUS" "MINUS")
  spiceModel( "rpodrpo" )
  cellView( "rpplus_2t ivpcell" )
  flagMalformed)
   area_RES   = measureParameter(area (prdop) 1e-12) 
   width_RES  = measureParameter(length (prdop butting tpdiff) 0.5e-6) 
   length_RES = calculateParameter( area_RES/width_RES ) 
   resist_RES = calculateParameter( length_RES/width_RES * RVPD ) 
   nameParameter( resist_RES "VALUE" ) 
   nameParameter( width_RES "w" ) 
   nameParameter( length_RES "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( prdop "model" "rpodrpo") 
   ) ;if

extractRES( "PR" prpop poly("PLUS" "MINUS")
  spiceModel( "rppo1rpo" )
  cellView( "rphpoly ivpcell" )
  flagMalformed)
   area_RES   = measureParameter(area (prpop) 1e-12) 
   width_RES  = measureParameter(length (prpop butting poly) 0.5e-6) 
   length_RES = calculateParameter( area_RES/width_RES ) 
   resist_RES = calculateParameter( length_RES/width_RES * RVPR ) 
   nameParameter( resist_RES "VALUE" ) 
   nameParameter( width_RES "w" ) 
   nameParameter( length_RES "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( prpop "model" "rppo1rpo") 
   ) ;if

extractRES( "M3" mt3res metal3("PLUS" "MINUS")
  spiceModel( "rm3" )
  cellView( "rm3 ivpcell" )
  flagMalformed)
   area_RES   = measureParameter(area (mt3res) 1e-12) 
   width_RES  = measureParameter(length (mt3res butting metal3) 0.5e-6) 
   length_RES = calculateParameter( area_RES/width_RES ) 
   resist_RES = calculateParameter( length_RES/width_RES * RVM3 ) 
   nameParameter( resist_RES "VALUE" ) 
   nameParameter( width_RES "w" ) 
   nameParameter( length_RES "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( mt3res "model" "rm3") 
   ) ;if

extractRES( "NI" rnodl_r tndiff("PLUS" "MINUS")
  spiceModel( "rnod" )
  cellView( "rnlplus_2t ivpcell" )
  flagMalformed)
   area_RES   = measureParameter(area (rnodl_r) 1e-12) 
   width_RES  = measureParameter(length (rnodl_r butting tndiff) 0.5e-6) 
   length_RES = calculateParameter( area_RES/width_RES ) 
   resist_RES = calculateParameter( length_RES/width_RES * RVNI ) 
   nameParameter( resist_RES "VALUE" ) 
   nameParameter( width_RES "w" ) 
   nameParameter( length_RES "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( rnodl_r "model" "rnod") 
   ) ;if

extractRES( "M2" mt2res metal2("PLUS" "MINUS")
  spiceModel( "rm2" )
  cellView( "rm2 ivpcell" )
  flagMalformed)
   area_RES   = measureParameter(area (mt2res) 1e-12) 
   width_RES  = measureParameter(length (mt2res butting metal2) 0.5e-6) 
   length_RES = calculateParameter( area_RES/width_RES ) 
   resist_RES = calculateParameter( length_RES/width_RES * RVM2 ) 
   nameParameter( resist_RES "VALUE" ) 
   nameParameter( width_RES "w" ) 
   nameParameter( length_RES "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( mt2res "model" "rm2") 
   ) ;if

extractRES( "PS" rppolys_r poly("PLUS" "MINUS")
  spiceModel( "rppo1w" )
  cellView( "rplpoly ivpcell" )
  flagMalformed)
   area_RES   = measureParameter(area (rppolys_r) 1e-12) 
   width_RES  = measureParameter(length (rppolys_r butting poly) 0.5e-6) 
   length_RES = calculateParameter( area_RES/width_RES ) 
   resist_RES = calculateParameter( length_RES/width_RES * RVPS ) 
   nameParameter( resist_RES "VALUE" ) 
   nameParameter( width_RES "w" ) 
   nameParameter( length_RES "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( rppolys_r "model" "rppo1w") 
   ) ;if

extractRES( "PI" rpods_r tpdiff("PLUS" "MINUS")
  spiceModel( "rpodw" )
  cellView( "rplplus_2t ivpcell" )
  flagMalformed)
   area_RES   = measureParameter(area (rpods_r) 1e-12) 
   width_RES  = measureParameter(length (rpods_r butting tpdiff) 0.5e-6) 
   length_RES = calculateParameter( area_RES/width_RES ) 
   resist_RES = calculateParameter( length_RES/width_RES * RVPI ) 
   nameParameter( resist_RES "VALUE" ) 
   nameParameter( width_RES "w" ) 
   nameParameter( length_RES "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( rpods_r "model" "rpodw") 
   ) ;if

extractRES( "NS" rnpolyl_r poly("PLUS" "MINUS")
  spiceModel( "rnpo1" )
  cellView( "rnlpoly ivpcell" )
  flagMalformed)
   area_RES   = measureParameter(area (rnpolyl_r) 1e-12) 
   width_RES  = measureParameter(length (rnpolyl_r butting poly) 0.5e-6) 
   length_RES = calculateParameter( area_RES/width_RES ) 
   resist_RES = calculateParameter( length_RES/width_RES * RVNS ) 
   nameParameter( resist_RES "VALUE" ) 
   nameParameter( width_RES "w" ) 
   nameParameter( length_RES "l" ) 
   if( !avSwitch( "spice_extraction") then
     saveProperty( rnpolyl_r "model" "rnpo1") 
   ) ;if


;* User define devices 
extractDevice("rppo1w_dis" rppolys_r_3t poly("PLUS") poly("MINUS") poly_term("B") physical
   spiceModel("rppo1w_dis") 
   cellView( "rplpoly_dis ivpcell" )
   flagMalformed
)   
   A = measureParameter(area (rppolys_r_3t) 1e-12)
   wr = measureParameter(length (rppolys_r_3t butting poly) 0.5e-6)
   lr = calculateParameter( A/wr )
   M = calculateParameter( A/A )
   nameParameter(wr "w")
   nameParameter(wr "wr")
   nameParameter(wr "sumW")
   nameParameter(lr "l")
   nameParameter(lr "lr")
   nameParameter(lr "sumL")
   nameParameter(M "m")
if( !avSwitch( "spice_extraction") then   
   saveProperty( rppolys_r_3t "model" "rppo1w_dis" )
)

;;defined in crtmom

if( avSwitch( "CAP_2P0") then
extractDevice("mimcap_2p0_sin" capm5_2p0 ctm("TOP") metal5("BOT")
  spiceModel( "mimcap_2p0_sin" )
  cellView( "mimcap_2p0_sin ivpcell" )
  flagMalformed )
  area_CAP = measureParameter(area (capm5_2p0) 1e-12)
  pj_CAP = measureParameter(perimeter (capm5_2p0) 1e-6)
  A_CAP    = measureParameter(area (capm5_2p0))
  P_CAP   = measureParameter(perimeter (capm5_2p0))
  P_2_CAP = calculateParameter( P_CAP * P_CAP)
  AC4 = calculateParameter( A_CAP * 16)
  KKK = calculateParameter( P_2_CAP-AC4)
  SQ = calculateParameter(sqrt(KKK))
  WT = calculateParameter( ((P_CAP - SQ)/4) * 1e-6)
  LT = calculateParameter( ((P_CAP + SQ)/4) * 1e-6)
  M = calculateParameter( LT/LT )
  LAY = calculateParameter( LT/LT*6 )   
  nameParameter( LAY "lay" )
  nameParameter( LAY "mLvl" )
  nameParameter( LT "lt")
  nameParameter( WT "wt")
  nameParameter( LT "l" )
  nameParameter( WT "w" )
  nameParameter( M "m" )
if( !avSwitch( "spice_extraction") then  
  saveProperty( capm5_2p0 "model" "mimcap_2p0_sin")
)  
extractDevice("mimcap_2p0_sin" capm5_2p0_ud ctm("TOP") metal5("BOT")
  spiceModel( "mimcap_2p0_sin" )
  cellView( "mimcap_2p0_sin ivpcell" )
  flagMalformed )
  area_CAP = measureParameter(area (capm5_2p0_ud) 1e-12)
  pj_CAP = measureParameter(perimeter (capm5_2p0_ud) 1e-6)
  A_CAP    = measureParameter(area (capm5_2p0_ud))
  P_CAP   = measureParameter(perimeter (capm5_2p0_ud))
  P_2_CAP = calculateParameter( P_CAP * P_CAP)
  AC4 = calculateParameter( A_CAP * 16)
  KKK = calculateParameter( P_2_CAP-AC4)
  SQ = calculateParameter(sqrt(KKK))
  WT = calculateParameter( ((P_CAP - SQ)/4) * 1e-6)
  LT = calculateParameter( ((P_CAP + SQ)/4) * 1e-6)
  M = calculateParameter( LT/LT )
  LAY = calculateParameter( LT/LT*6 )   
  nameParameter( LAY "lay" )
  nameParameter( LAY "mLvl" )
  nameParameter( LT "lt")
  nameParameter( WT "wt")
  nameParameter( LT "l" )
  nameParameter( WT "w" )
  nameParameter( M "m" )
if( !avSwitch( "spice_extraction") then  
  saveProperty( capm5_2p0_ud "model" "mimcap_2p0_sin")
)  
)
  rcxLayer(capm5_2p0)    
  rcxLayer(capm5_2p0_ud)

extractDevice("pmos_rf33_nw" bpgate_4t_pthin_nw d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B")
   spiceModel("pmos_rf33_nw") 
   cellView( "rfpmos3v_nw ivpcell" )
   flagMalformed
)
   NR = measureParameter(figCount (bpgate_4t_pthin_nw enclosing bpgate_rf4t_nw))
   WD = measureParameter(length (bpgate_rf4t_nw butting d_tpdiff ) 1e-6)
   WS = measureParameter(length (bpgate_rf4t_nw butting s_tpdiff ) 1e-6)
   WR = calculateParameter((WD+WS)/(2*NR))
   area_gate = measureParameter(area (bpgate_rf4t_nw over bpgate_4t_pthin_nw) 1e-12)
   LR = calculateParameter(area_gate/(WR*NR))
   attachParameter(WR "wr" bpgate_4t_pthin_nw)
   attachParameter(LR "lr" bpgate_4t_pthin_nw)
   nameParameter(NR "nr")
   saveProperty( bpgate_4t_pthin_nw "model" "pmos_rf33_nw" )

extractDevice("rppolyhri_dis" lrpop_3t poly("PLUS") poly("MINUS") poly_term("B") physical
   spiceModel("rppolyhri_dis") 
   cellView( "rphripoly_dis ivpcell" )
   flagMalformed
)   
   A = measureParameter(area (lrpop_3t) 1e-12)
   wr = measureParameter(length (lrpop_3t butting poly) 0.5e-6)
   lr = calculateParameter( A/wr )
   M = calculateParameter( A/A )
   nameParameter(wr "w")
   nameParameter(wr "wr")
   nameParameter(wr "sumW")
   nameParameter(lr "l")
   nameParameter(lr "lr")
   nameParameter(lr "sumL")
   nameParameter(M "m")
if( !avSwitch( "spice_extraction") then   
   saveProperty( lrpop_3t "model" "rppolyhri_dis" )
)

extractDevice("rnpo1w_dis" rnpolys_r_3t poly("PLUS") poly("MINUS") poly_term("B") physical
   spiceModel("rnpo1w_dis") 
   cellView( "rnlpoly_dis ivpcell" )
   flagMalformed
)   
   A = measureParameter(area (rnpolys_r_3t) 1e-12)
   wr = measureParameter(length (rnpolys_r_3t butting poly) 0.5e-6)
   lr = calculateParameter( A/wr )
   M = calculateParameter( A/A )
   nameParameter(wr "w")
   nameParameter(wr "wr")
   nameParameter(wr "sumW")
   nameParameter(lr "l")
   nameParameter(lr "lr")
   nameParameter(lr "sumL")
   nameParameter(M "m")
if( !avSwitch( "spice_extraction") then   
   saveProperty( rnpolys_r_3t "model" "rnpo1w_dis" )
)

extractBJT("PV_mis" emit10_mis coll("C") nbase("B") emit("E")
  spiceModel( "pnp10_mis" )
  cellView( "vpnp_mis ivpcell" )
  flagMalformed )
  area_BJT = measureParameter(area (emit10_mis over emit) 1e-12)
  M = calculateParameter(area_BJT/area_BJT)
  nameParameter( area_BJT "area" )
  nameParameter( M "m" )
  saveProperty( emit10_mis "model" "pnp10_mis") 

extractBJT("NV" nemit5 ncoll("C") pbase("B") nemit("E")
  spiceModel( "npn5" )
  cellView( "npn ivpcell" )
  flagMalformed )
  area_BJT = measureParameter(area (nemit5 over nemit) 1e-12)
  M = calculateParameter(area_BJT/area_BJT)
  nameParameter( area_BJT "area" )
  nameParameter( M "m" )
  saveProperty( nemit5 "model" "npn5") 

extractDevice("nmoscap_33" nthin_bvar poly("PLUS") tndiff("MINUS")
   spiceModel("nmoscap_33") 
   cellView( "mos_var_b3 ivpcell" )
   flagMalformed
)
   mr = measureParameter(figCount (nthin_bvar enclosing bvargt))
   A1 = measureParameter(area (bvargt) 1e-12)
   A = calculateParameter(A1/mr)
   lr1 = measureParameter(length (bvargt coincident nthin_bvar) 1e-6)
   lr = calculateParameter(lr1/(mr*2))
   wr = calculateParameter( A/lr )
   m = calculateParameter( mr/mr )
   attachParameter(mr "mr" nthin_bvar)
   attachParameter(lr "lr" nthin_bvar)
   attachParameter(wr "wr" nthin_bvar)
   attachParameter(mr "branch" nthin_bvar)
   attachParameter(lr "lf" nthin_bvar)
   attachParameter(wr "wf" nthin_bvar)
   attachParameter(m "m" nthin_bvar)
   saveProperty( nthin_bvar "model" "nmoscap_33" )

extractBJT("NV_mis" nemit5_mis ncoll("C") pbase("B") nemit("E")
  spiceModel( "npn5_mis" )
  cellView( "npn_mis ivpcell" )
  flagMalformed )
  area_BJT = measureParameter(area (nemit5_mis over nemit) 1e-12)
  M = calculateParameter(area_BJT/area_BJT)
  nameParameter( area_BJT "area" )
  nameParameter( M "m" )
  saveProperty( nemit5_mis "model" "npn5_mis") 

extractDevice("rnod_m" l_rnodl_3t tndiff("PLUS") tndiff("MINUS") psub("B") physical
   spiceModel("rnod_m") 
   cellView( "rnlplus ivpcell" )
   flagMalformed
)   
   A = measureParameter(area (l_rnodl_3t) 1e-12) 
   wr = measureParameter(length (l_rnodl_3t butting tndiff) 0.5e-6) 
   lr = calculateParameter( A/wr ) 
   M = calculateParameter( A/A )
   nameParameter(wr "w")
   nameParameter(wr "wr")
   nameParameter(wr "sumW")
   nameParameter(lr "l")
   nameParameter(lr "lr")
   
   nameParameter(lr "sumL")
   nameParameter(M "m")
   saveProperty( l_rnodl_3t "model" "rnod_m" )

extractDevice("nmos_rf33" bnrgate_4t_nthin d_tndiff("D") poly_rf("G") s_tndiff("S") psub("B")
   spiceModel("nmos_rf33") 
   cellView( "rfnmos3v ivpcell" )
   flagMalformed
)
   NR = measureParameter(figCount (bnrgate_4t_nthin enclosing bnrgate_rf4t))
   WD = measureParameter(length (bnrgate_rf4t butting d_tndiff ))
   WS = measureParameter(length (bnrgate_rf4t butting s_tndiff ))
   WR = calculateParameter((WD+WS)*1e-6/(2*NR))
   area_gate = measureParameter(area (bnrgate_rf4t over bnrgate_4t_nthin) 1e-12)
   LR = calculateParameter(area_gate/(WR*NR))
   attachParameter(WR "wr" bnrgate_4t_nthin)
   attachParameter(LR "lr" bnrgate_4t_nthin)
   nameParameter(NR "nr")
   saveProperty( bnrgate_4t_nthin "model" "nmos_rf33" )

extractBJT("PV" emit2 coll("C") nbase("B") emit("E")
  spiceModel( "pnp2" )
  cellView( "vpnp ivpcell" )
  flagMalformed )
  area_BJT = measureParameter(area (emit2 over emit) 1e-12)
  M = calculateParameter(area_BJT/area_BJT)
  nameParameter( area_BJT "area" )
  nameParameter( M "m" )
  saveProperty( emit2 "model" "pnp2") 

extractBJT("NV" nemit10 ncoll("C") pbase("B") nemit("E")
  spiceModel( "npn10" )
  cellView( "npn ivpcell" )
  flagMalformed )
  area_BJT = measureParameter(area (nemit10 over nemit) 1e-12)
  M = calculateParameter(area_BJT/area_BJT)
  nameParameter( area_BJT "area" )
  nameParameter( M "m" )
  saveProperty( nemit10 "model" "npn10") 

extractDevice("rpodw_m" s_rpods_3t tpdiff("PLUS") tpdiff("MINUS") nxwell("B") physical
   spiceModel("rpodw_m") 
   cellView( "rplplus ivpcell" )
   flagMalformed
)   
   A = measureParameter(area (s_rpods_3t) 1e-12) 
   wr = measureParameter(length (s_rpods_3t butting tpdiff) 0.5e-6) 
   lr = calculateParameter( A/wr ) 
   M = calculateParameter( A/A )
   nameParameter(wr "w")
   nameParameter(wr "wr")
   nameParameter(wr "sumW")
   nameParameter(lr "l")
   nameParameter(lr "lr")
   
   nameParameter(lr "sumL")
   nameParameter(M "m")
   saveProperty( s_rpods_3t "model" "rpodw_m" )

extractDevice("rnodrpo_m" t_nrdop tndiff("PLUS") tndiff("MINUS") psub("B") physical
   spiceModel("rnodrpo_m") 
   cellView( "rnplus ivpcell" )
   flagMalformed
)   
   A = measureParameter(area (t_nrdop) 1e-12) 
   wr = measureParameter(length (t_nrdop butting tndiff) 0.5e-6) 
   lr = calculateParameter( A/wr ) 
   M = calculateParameter( A/A )
   nameParameter(wr "w")
   nameParameter(wr "wr")
   nameParameter(wr "sumW")
   nameParameter(lr "l")
   nameParameter(lr "lr")
   
   nameParameter(lr "sumL")
   nameParameter(M "m")
   saveProperty( t_nrdop "model" "rnodrpo_m" )

;

;
extractDevice( "lcesd1_rf" lcesd1_rl lcesdp("PLUS") lcesdm("MINUS")
   spiceModel("lcesd1_rf")
   cellView("lcesd1_rf ivpcell")
   flagMalformed
)

extractDevice("rppo1_dis" rppolyl_r_3t poly("PLUS") poly("MINUS") poly_term("B") physical
   spiceModel("rppo1_dis") 
   cellView( "rplpoly_dis ivpcell" )
   flagMalformed
)   
   A = measureParameter(area (rppolyl_r_3t) 1e-12)
   wr = measureParameter(length (rppolyl_r_3t butting poly) 0.5e-6)
   lr = calculateParameter( A/wr )
   M = calculateParameter( A/A )
   nameParameter(wr "w")
   nameParameter(wr "wr")
   nameParameter(wr "sumW")
   nameParameter(lr "l")
   nameParameter(lr "lr")
   nameParameter(lr "sumL")
   nameParameter(M "m")
if( !avSwitch( "spice_extraction") then   
   saveProperty( rppolyl_r_3t "model" "rppo1_dis" )
)










    










extractDevice( "crtmom" mom13_reg metal3("PLUS") metal3("MINUS") crt_poly("BULK")
   spiceModel("crtmom")
   cellView("crtmom ivpcell")
   flagMalformed
)
   nv = measureParameter(figCount ( MOMDMY1 enclosing MOM_field1))
   nh = measureParameter(figCount ( MOMDMY2 enclosing MOM_field2))
   w1 = measureParameter(length ( MOM_field2 coincident mom13_reg) 1e-6)
   w  = calculateParameter(w1/nh)
   s1 = measureParameter(length (F_reg1 butting MOM_field1 ))
   s2 = measureParameter(perimeter (F_reg1))
   s  = calculateParameter( (((s2 - s1)/2)/(nv-1)) * 1e-6 )
   stm = calculateParameter(1 * nv/nv)
   spm = calculateParameter(3 * nv/nv)   
   
   attachParameter(stm "stm" mom13_reg)
   attachParameter(spm "spm" mom13_reg)
   attachParameter(nv "nv" mom13_reg)
   attachParameter(nh "nh" mom13_reg)
   attachParameter(s  "s"  mom13_reg)
   attachParameter(w  "w"  mom13_reg)
   attachParameter(s  "sp" mom13_reg)
if( !avSwitch( "spice_extraction") then
	   saveProperty(mom13_reg "model" "crtmom")
)


extractDevice( "cfmom" fmom13_reg metal3("PLUS") metal3("MINUS") crt_poly("BULK")
   spiceModel("cfmom")
   cellView("cfmom ivpcell")
   flagMalformed
)
   nr = measureParameter(figCount ( MOMDMY1 enclosing MOM_field1))
   w1 = measureParameter(length ( MOM_field1 coincident fmom13_reg) 1e-6)
   w  = calculateParameter(w1/nr)	
   s1 = measureParameter(length ( F_reg1 butting MOM_field1 ))
   s2 = measureParameter( perimeter (F_reg1)) 
   s = calculateParameter(((s2-s1)/2/(nr-1))* 1e-6)
   lr1 = measureParameter(length ( F_reg1 butting MOM_field1 ))
   lr = calculateParameter(lr1/2/(nr-1)* 1e-6)
   stm = calculateParameter(1 * nr/nr)
   spm = calculateParameter(3 * nr/nr)
   attachParameter(stm "stm" fmom13_reg)
   attachParameter(spm "spm" fmom13_reg)
   attachParameter(nr "nr" fmom13_reg)
   attachParameter(lr "lr" fmom13_reg)
   attachParameter(s  "s"  fmom13_reg)
   attachParameter(w  "w"  fmom13_reg)
   attachParameter(stm  "StartMn"  fmom13_reg)
   attachParameter(spm  "StopMn"  fmom13_reg)
   attachParameter(s  "Sfinger"  fmom13_reg)
   attachParameter(lr  "Lfinger"  fmom13_reg)
   attachParameter(nr  "Nfinger"  fmom13_reg)
   attachParameter(w  "Wfinger"  fmom13_reg)
if( !avSwitch( "spice_extraction") then
	   saveProperty(fmom13_reg "model" "cfmom")
)

extractDevice( "cfmom_rf" fmom13_rf_reg metal3("PLUS") metal3("MINUS") crt_poly("BULK")
   spiceModel("cfmom_rf")
   cellView("cfmom_rf ivpcell")
   flagMalformed
)
   nr = measureParameter(figCount ( MOMDMY1 enclosing MOM_field1))
   w1 = measureParameter(length ( MOM_field1 coincident fmom13_rf_reg) 1e-6)
   w  = calculateParameter(w1/nr)	
   s1 = measureParameter(length ( F_reg1 butting MOM_field1 ))
   s2 = measureParameter( perimeter (F_reg1)) 
   s = calculateParameter(((s2-s1)/2/(nr-1))* 1e-6)
   lr1 = measureParameter(length ( F_reg1 butting MOM_field1 ))
   lr = calculateParameter(lr1/2/(nr-1)* 1e-6)
   stm = calculateParameter(1 * nr/nr)
   spm = calculateParameter(3 * nr/nr)
   attachParameter(stm "stm" fmom13_rf_reg)
   attachParameter(spm "spm" fmom13_rf_reg)
   attachParameter(nr "nr" fmom13_rf_reg)
   attachParameter(lr "lr" fmom13_rf_reg)
   attachParameter(s  "s"  fmom13_rf_reg)
   attachParameter(w  "w"  fmom13_rf_reg)
   attachParameter(stm  "StartMn"  fmom13_rf_reg)
   attachParameter(spm  "StopMn"  fmom13_rf_reg)
   attachParameter(s  "Sfinger"  fmom13_rf_reg)
   attachParameter(lr  "Lfinger"  fmom13_rf_reg)
   attachParameter(nr  "Nfinger"  fmom13_rf_reg)
   attachParameter(w  "Wfinger"  fmom13_rf_reg)
if( !avSwitch( "spice_extraction") then
	   saveProperty(fmom13_rf_reg "model" "cfmom_rf")
)

extractDevice( "cfmom_mx" fmom13_mx_reg mom3p1("PLUS1") mom3m1("MINUS1") mom3p2("PLUS2") mom3m2("MINUS2") crt_poly("BULK")
   spiceModel("cfmom_mx")
   cellView("cfmom_mx ivpcell")
   flagMalformed
)
    mf2 = measureParameter(figCount ( MOMDMY22 enclosing MOM_pin3 ) )
    mf1 = calculateParameter(mf2-2)
    mf  = calculateParameter(mf1/2)
    nr1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field1))
    nr  = calculateParameter(nr1/mf1)
    lr1 = measureParameter(length ( F_reg1 butting MOM_field1 ))
    lr = calculateParameter(lr1/2/(mf1*(nr-1))* 1e-6)
    w1 = measureParameter(length ( MOM_field2 coincident mom13_mx_aux ) 1e-6)	
    w  = calculateParameter(w1/(nr*mf1))
    s1 = measureParameter(length (F_reg1 butting MOM_field1 ))
    s2 = measureParameter(perimeter (F_reg1))
    s  = calculateParameter( (((s2 - s1)/2)/(mf1*(nr-1))) * 1e-6 )
    stm = calculateParameter( 1 * nr/nr )
    spm = calculateParameter( 3 * nr/nr )
   attachParameter(stm "stm" fmom13_mx_reg)
   attachParameter(spm "spm" fmom13_mx_reg)
   attachParameter(nr "nr" fmom13_mx_reg)
   attachParameter(lr "lr" fmom13_mx_reg)
   attachParameter(s  "s"  fmom13_mx_reg)
   attachParameter(w  "w"  fmom13_mx_reg)
   attachParameter(stm  "StartMn"  fmom13_mx_reg )
   attachParameter(spm  "StopMn"  fmom13_mx_reg)
   attachParameter(s  "Sfinger"  fmom13_mx_reg)
   attachParameter(lr  "Lfinger"  fmom13_mx_reg)
   attachParameter(nr  "Nfinger"  fmom13_mx_reg)
   attachParameter(w  "Wfinger"  fmom13_mx_reg)
if( !avSwitch( "spice_extraction") then
	   saveProperty(fmom13_mx_reg "model" "cfmom_mx")
)







    










extractDevice( "crtmom" mom14_reg metal4("PLUS") metal4("MINUS") crt_poly("BULK")
   spiceModel("crtmom")
   cellView("crtmom ivpcell")
   flagMalformed
)
   nv = measureParameter(figCount ( MOMDMY1 enclosing MOM_field1))
   nh = measureParameter(figCount ( MOMDMY2 enclosing MOM_field2))
   w1 = measureParameter(length ( MOM_field2 coincident mom14_reg) 1e-6)
   w  = calculateParameter(w1/nh)
   s1 = measureParameter(length (F_reg1 butting MOM_field1 ))
   s2 = measureParameter(perimeter (F_reg1))
   s  = calculateParameter( (((s2 - s1)/2)/(nv-1)) * 1e-6 )
   stm = calculateParameter(1 * nv/nv)
   spm = calculateParameter(4 * nv/nv)   
   
   attachParameter(stm "stm" mom14_reg)
   attachParameter(spm "spm" mom14_reg)
   attachParameter(nv "nv" mom14_reg)
   attachParameter(nh "nh" mom14_reg)
   attachParameter(s  "s"  mom14_reg)
   attachParameter(w  "w"  mom14_reg)
   attachParameter(s  "sp" mom14_reg)
if( !avSwitch( "spice_extraction") then
	   saveProperty(mom14_reg "model" "crtmom")
)


extractDevice( "cfmom" fmom14_reg metal4("PLUS") metal4("MINUS") crt_poly("BULK")
   spiceModel("cfmom")
   cellView("cfmom ivpcell")
   flagMalformed
)
   nr = measureParameter(figCount ( MOMDMY1 enclosing MOM_field1))
   w1 = measureParameter(length ( MOM_field1 coincident fmom14_reg) 1e-6)
   w  = calculateParameter(w1/nr)	
   s1 = measureParameter(length ( F_reg1 butting MOM_field1 ))
   s2 = measureParameter( perimeter (F_reg1)) 
   s = calculateParameter(((s2-s1)/2/(nr-1))* 1e-6)
   lr1 = measureParameter(length ( F_reg1 butting MOM_field1 ))
   lr = calculateParameter(lr1/2/(nr-1)* 1e-6)
   stm = calculateParameter(1 * nr/nr)
   spm = calculateParameter(4 * nr/nr)
   attachParameter(stm "stm" fmom14_reg)
   attachParameter(spm "spm" fmom14_reg)
   attachParameter(nr "nr" fmom14_reg)
   attachParameter(lr "lr" fmom14_reg)
   attachParameter(s  "s"  fmom14_reg)
   attachParameter(w  "w"  fmom14_reg)
   attachParameter(stm  "StartMn"  fmom14_reg)
   attachParameter(spm  "StopMn"  fmom14_reg)
   attachParameter(s  "Sfinger"  fmom14_reg)
   attachParameter(lr  "Lfinger"  fmom14_reg)
   attachParameter(nr  "Nfinger"  fmom14_reg)
   attachParameter(w  "Wfinger"  fmom14_reg)
if( !avSwitch( "spice_extraction") then
	   saveProperty(fmom14_reg "model" "cfmom")
)

extractDevice( "cfmom_rf" fmom14_rf_reg metal4("PLUS") metal4("MINUS") crt_poly("BULK")
   spiceModel("cfmom_rf")
   cellView("cfmom_rf ivpcell")
   flagMalformed
)
   nr = measureParameter(figCount ( MOMDMY1 enclosing MOM_field1))
   w1 = measureParameter(length ( MOM_field1 coincident fmom14_rf_reg) 1e-6)
   w  = calculateParameter(w1/nr)	
   s1 = measureParameter(length ( F_reg1 butting MOM_field1 ))
   s2 = measureParameter( perimeter (F_reg1)) 
   s = calculateParameter(((s2-s1)/2/(nr-1))* 1e-6)
   lr1 = measureParameter(length ( F_reg1 butting MOM_field1 ))
   lr = calculateParameter(lr1/2/(nr-1)* 1e-6)
   stm = calculateParameter(1 * nr/nr)
   spm = calculateParameter(4 * nr/nr)
   attachParameter(stm "stm" fmom14_rf_reg)
   attachParameter(spm "spm" fmom14_rf_reg)
   attachParameter(nr "nr" fmom14_rf_reg)
   attachParameter(lr "lr" fmom14_rf_reg)
   attachParameter(s  "s"  fmom14_rf_reg)
   attachParameter(w  "w"  fmom14_rf_reg)
   attachParameter(stm  "StartMn"  fmom14_rf_reg)
   attachParameter(spm  "StopMn"  fmom14_rf_reg)
   attachParameter(s  "Sfinger"  fmom14_rf_reg)
   attachParameter(lr  "Lfinger"  fmom14_rf_reg)
   attachParameter(nr  "Nfinger"  fmom14_rf_reg)
   attachParameter(w  "Wfinger"  fmom14_rf_reg)
if( !avSwitch( "spice_extraction") then
	   saveProperty(fmom14_rf_reg "model" "cfmom_rf")
)

extractDevice( "cfmom_mx" fmom14_mx_reg mom4p1("PLUS1") mom4m1("MINUS1") mom4p2("PLUS2") mom4m2("MINUS2") crt_poly("BULK")
   spiceModel("cfmom_mx")
   cellView("cfmom_mx ivpcell")
   flagMalformed
)
    mf2 = measureParameter(figCount ( MOMDMY22 enclosing MOM_pin4 ) )
    mf1 = calculateParameter(mf2-2)
    mf  = calculateParameter(mf1/2)
    nr1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field1))
    nr  = calculateParameter(nr1/mf1)
    lr1 = measureParameter(length ( F_reg1 butting MOM_field1 ))
    lr = calculateParameter(lr1/2/(mf1*(nr-1))* 1e-6)
    w1 = measureParameter(length ( MOM_field2 coincident mom14_mx_aux ) 1e-6)	
    w  = calculateParameter(w1/(nr*mf1))
    s1 = measureParameter(length (F_reg1 butting MOM_field1 ))
    s2 = measureParameter(perimeter (F_reg1))
    s  = calculateParameter( (((s2 - s1)/2)/(mf1*(nr-1))) * 1e-6 )
    stm = calculateParameter( 1 * nr/nr )
    spm = calculateParameter( 4 * nr/nr )
   attachParameter(stm "stm" fmom14_mx_reg)
   attachParameter(spm "spm" fmom14_mx_reg)
   attachParameter(nr "nr" fmom14_mx_reg)
   attachParameter(lr "lr" fmom14_mx_reg)
   attachParameter(s  "s"  fmom14_mx_reg)
   attachParameter(w  "w"  fmom14_mx_reg)
   attachParameter(stm  "StartMn"  fmom14_mx_reg )
   attachParameter(spm  "StopMn"  fmom14_mx_reg)
   attachParameter(s  "Sfinger"  fmom14_mx_reg)
   attachParameter(lr  "Lfinger"  fmom14_mx_reg)
   attachParameter(nr  "Nfinger"  fmom14_mx_reg)
   attachParameter(w  "Wfinger"  fmom14_mx_reg)
if( !avSwitch( "spice_extraction") then
	   saveProperty(fmom14_mx_reg "model" "cfmom_mx")
)








    










extractDevice( "crtmom" mom15_reg metal5("PLUS") metal5("MINUS") crt_poly("BULK")
   spiceModel("crtmom")
   cellView("crtmom ivpcell")
   flagMalformed
)
   nv = measureParameter(figCount ( MOMDMY1 enclosing MOM_field1))
   nh = measureParameter(figCount ( MOMDMY2 enclosing MOM_field2))
   w1 = measureParameter(length ( MOM_field2 coincident mom15_reg) 1e-6)
   w  = calculateParameter(w1/nh)
   s1 = measureParameter(length (F_reg1 butting MOM_field1 ))
   s2 = measureParameter(perimeter (F_reg1))
   s  = calculateParameter( (((s2 - s1)/2)/(nv-1)) * 1e-6 )
   stm = calculateParameter(1 * nv/nv)
   spm = calculateParameter(5 * nv/nv)   
   
   attachParameter(stm "stm" mom15_reg)
   attachParameter(spm "spm" mom15_reg)
   attachParameter(nv "nv" mom15_reg)
   attachParameter(nh "nh" mom15_reg)
   attachParameter(s  "s"  mom15_reg)
   attachParameter(w  "w"  mom15_reg)
   attachParameter(s  "sp" mom15_reg)
if( !avSwitch( "spice_extraction") then
	   saveProperty(mom15_reg "model" "crtmom")
)


extractDevice( "cfmom" fmom15_reg metal5("PLUS") metal5("MINUS") crt_poly("BULK")
   spiceModel("cfmom")
   cellView("cfmom ivpcell")
   flagMalformed
)
   nr = measureParameter(figCount ( MOMDMY1 enclosing MOM_field1))
   w1 = measureParameter(length ( MOM_field1 coincident fmom15_reg) 1e-6)
   w  = calculateParameter(w1/nr)	
   s1 = measureParameter(length ( F_reg1 butting MOM_field1 ))
   s2 = measureParameter( perimeter (F_reg1)) 
   s = calculateParameter(((s2-s1)/2/(nr-1))* 1e-6)
   lr1 = measureParameter(length ( F_reg1 butting MOM_field1 ))
   lr = calculateParameter(lr1/2/(nr-1)* 1e-6)
   stm = calculateParameter(1 * nr/nr)
   spm = calculateParameter(5 * nr/nr)
   attachParameter(stm "stm" fmom15_reg)
   attachParameter(spm "spm" fmom15_reg)
   attachParameter(nr "nr" fmom15_reg)
   attachParameter(lr "lr" fmom15_reg)
   attachParameter(s  "s"  fmom15_reg)
   attachParameter(w  "w"  fmom15_reg)
   attachParameter(stm  "StartMn"  fmom15_reg)
   attachParameter(spm  "StopMn"  fmom15_reg)
   attachParameter(s  "Sfinger"  fmom15_reg)
   attachParameter(lr  "Lfinger"  fmom15_reg)
   attachParameter(nr  "Nfinger"  fmom15_reg)
   attachParameter(w  "Wfinger"  fmom15_reg)
if( !avSwitch( "spice_extraction") then
	   saveProperty(fmom15_reg "model" "cfmom")
)

extractDevice( "cfmom_rf" fmom15_rf_reg metal5("PLUS") metal5("MINUS") crt_poly("BULK")
   spiceModel("cfmom_rf")
   cellView("cfmom_rf ivpcell")
   flagMalformed
)
   nr = measureParameter(figCount ( MOMDMY1 enclosing MOM_field1))
   w1 = measureParameter(length ( MOM_field1 coincident fmom15_rf_reg) 1e-6)
   w  = calculateParameter(w1/nr)	
   s1 = measureParameter(length ( F_reg1 butting MOM_field1 ))
   s2 = measureParameter( perimeter (F_reg1)) 
   s = calculateParameter(((s2-s1)/2/(nr-1))* 1e-6)
   lr1 = measureParameter(length ( F_reg1 butting MOM_field1 ))
   lr = calculateParameter(lr1/2/(nr-1)* 1e-6)
   stm = calculateParameter(1 * nr/nr)
   spm = calculateParameter(5 * nr/nr)
   attachParameter(stm "stm" fmom15_rf_reg)
   attachParameter(spm "spm" fmom15_rf_reg)
   attachParameter(nr "nr" fmom15_rf_reg)
   attachParameter(lr "lr" fmom15_rf_reg)
   attachParameter(s  "s"  fmom15_rf_reg)
   attachParameter(w  "w"  fmom15_rf_reg)
   attachParameter(stm  "StartMn"  fmom15_rf_reg)
   attachParameter(spm  "StopMn"  fmom15_rf_reg)
   attachParameter(s  "Sfinger"  fmom15_rf_reg)
   attachParameter(lr  "Lfinger"  fmom15_rf_reg)
   attachParameter(nr  "Nfinger"  fmom15_rf_reg)
   attachParameter(w  "Wfinger"  fmom15_rf_reg)
if( !avSwitch( "spice_extraction") then
	   saveProperty(fmom15_rf_reg "model" "cfmom_rf")
)

extractDevice( "cfmom_mx" fmom15_mx_reg mom5p1("PLUS1") mom5m1("MINUS1") mom5p2("PLUS2") mom5m2("MINUS2") crt_poly("BULK")
   spiceModel("cfmom_mx")
   cellView("cfmom_mx ivpcell")
   flagMalformed
)
    mf2 = measureParameter(figCount ( MOMDMY22 enclosing MOM_pin5 ) )
    mf1 = calculateParameter(mf2-2)
    mf  = calculateParameter(mf1/2)
    nr1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field1))
    nr  = calculateParameter(nr1/mf1)
    lr1 = measureParameter(length ( F_reg1 butting MOM_field1 ))
    lr = calculateParameter(lr1/2/(mf1*(nr-1))* 1e-6)
    w1 = measureParameter(length ( MOM_field2 coincident mom15_mx_aux ) 1e-6)	
    w  = calculateParameter(w1/(nr*mf1))
    s1 = measureParameter(length (F_reg1 butting MOM_field1 ))
    s2 = measureParameter(perimeter (F_reg1))
    s  = calculateParameter( (((s2 - s1)/2)/(mf1*(nr-1))) * 1e-6 )
    stm = calculateParameter( 1 * nr/nr )
    spm = calculateParameter( 5 * nr/nr )
   attachParameter(stm "stm" fmom15_mx_reg)
   attachParameter(spm "spm" fmom15_mx_reg)
   attachParameter(nr "nr" fmom15_mx_reg)
   attachParameter(lr "lr" fmom15_mx_reg)
   attachParameter(s  "s"  fmom15_mx_reg)
   attachParameter(w  "w"  fmom15_mx_reg)
   attachParameter(stm  "StartMn"  fmom15_mx_reg )
   attachParameter(spm  "StopMn"  fmom15_mx_reg)
   attachParameter(s  "Sfinger"  fmom15_mx_reg)
   attachParameter(lr  "Lfinger"  fmom15_mx_reg)
   attachParameter(nr  "Nfinger"  fmom15_mx_reg)
   attachParameter(w  "Wfinger"  fmom15_mx_reg)
if( !avSwitch( "spice_extraction") then
	   saveProperty(fmom15_mx_reg "model" "cfmom_mx")
)








    










extractDevice( "crtmom" mom24_reg metal4("PLUS") metal4("MINUS") crt_poly("BULK")
   spiceModel("crtmom")
   cellView("crtmom ivpcell")
   flagMalformed
)
   nv = measureParameter(figCount ( MOMDMY3 enclosing MOM_field3))
   nh = measureParameter(figCount ( MOMDMY2 enclosing MOM_field2))
   w1 = measureParameter(length ( MOM_field2 coincident mom24_reg) 1e-6)
   w  = calculateParameter(w1/nh)
   s1 = measureParameter(length (F_reg2 butting MOM_field2 ))
   s2 = measureParameter(perimeter (F_reg2))
   s  = calculateParameter( (((s2 - s1)/2)/(nh-1)) * 1e-6 )
   stm = calculateParameter(2 * nv/nv)
   spm = calculateParameter(4 * nv/nv)   
   
   attachParameter(stm "stm" mom24_reg)
   attachParameter(spm "spm" mom24_reg)
   attachParameter(nv "nv" mom24_reg)
   attachParameter(nh "nh" mom24_reg)
   attachParameter(s  "s"  mom24_reg)
   attachParameter(w  "w"  mom24_reg)
   attachParameter(s  "sp" mom24_reg)
if( !avSwitch( "spice_extraction") then
	   saveProperty(mom24_reg "model" "crtmom")
)


extractDevice( "cfmom" fmom24_reg metal4("PLUS") metal4("MINUS") crt_poly("BULK")
   spiceModel("cfmom")
   cellView("cfmom ivpcell")
   flagMalformed
)
   nr = measureParameter(figCount ( MOMDMY3 enclosing MOM_field3))
   w1 = measureParameter(length ( MOM_field3 coincident fmom24_reg) 1e-6)
   w  = calculateParameter(w1/nr)	
   s1 = measureParameter(length ( F_reg2 butting MOM_field2 ))
   s2 = measureParameter( perimeter (F_reg2)) 
   s = calculateParameter(((s2-s1)/2/(nr-1))* 1e-6)
   lr1 = measureParameter(length ( F_reg2 butting MOM_field2 ))
   lr = calculateParameter(lr1/2/(nr-1)* 1e-6)
   stm = calculateParameter(2 * nr/nr)
   spm = calculateParameter(4 * nr/nr)
   attachParameter(stm "stm" fmom24_reg)
   attachParameter(spm "spm" fmom24_reg)
   attachParameter(nr "nr" fmom24_reg)
   attachParameter(lr "lr" fmom24_reg)
   attachParameter(s  "s"  fmom24_reg)
   attachParameter(w  "w"  fmom24_reg)
   attachParameter(stm  "StartMn"  fmom24_reg)
   attachParameter(spm  "StopMn"  fmom24_reg)
   attachParameter(s  "Sfinger"  fmom24_reg)
   attachParameter(lr  "Lfinger"  fmom24_reg)
   attachParameter(nr  "Nfinger"  fmom24_reg)
   attachParameter(w  "Wfinger"  fmom24_reg)
if( !avSwitch( "spice_extraction") then
	   saveProperty(fmom24_reg "model" "cfmom")
)

extractDevice( "cfmom_rf" fmom24_rf_reg metal4("PLUS") metal4("MINUS") crt_poly("BULK")
   spiceModel("cfmom_rf")
   cellView("cfmom_rf ivpcell")
   flagMalformed
)
   nr = measureParameter(figCount ( MOMDMY3 enclosing MOM_field3))
   w1 = measureParameter(length ( MOM_field3 coincident fmom24_rf_reg) 1e-6)
   w  = calculateParameter(w1/nr)	
   s1 = measureParameter(length ( F_reg2 butting MOM_field2 ))
   s2 = measureParameter( perimeter (F_reg2)) 
   s = calculateParameter(((s2-s1)/2/(nr-1))* 1e-6)
   lr1 = measureParameter(length ( F_reg2 butting MOM_field2 ))
   lr = calculateParameter(lr1/2/(nr-1)* 1e-6)
   stm = calculateParameter(2 * nr/nr)
   spm = calculateParameter(4 * nr/nr)
   attachParameter(stm "stm" fmom24_rf_reg)
   attachParameter(spm "spm" fmom24_rf_reg)
   attachParameter(nr "nr" fmom24_rf_reg)
   attachParameter(lr "lr" fmom24_rf_reg)
   attachParameter(s  "s"  fmom24_rf_reg)
   attachParameter(w  "w"  fmom24_rf_reg)
   attachParameter(stm  "StartMn"  fmom24_rf_reg)
   attachParameter(spm  "StopMn"  fmom24_rf_reg)
   attachParameter(s  "Sfinger"  fmom24_rf_reg)
   attachParameter(lr  "Lfinger"  fmom24_rf_reg)
   attachParameter(nr  "Nfinger"  fmom24_rf_reg)
   attachParameter(w  "Wfinger"  fmom24_rf_reg)
if( !avSwitch( "spice_extraction") then
	   saveProperty(fmom24_rf_reg "model" "cfmom_rf")
)

extractDevice( "cfmom_mx" fmom24_mx_reg mom4p1("PLUS1") mom4m1("MINUS1") mom4p2("PLUS2") mom4m2("MINUS2") crt_poly("BULK")
   spiceModel("cfmom_mx")
   cellView("cfmom_mx ivpcell")
   flagMalformed
)
    mf2 = measureParameter(figCount ( MOMDMY22 enclosing MOM_pin4 ) )
    mf1 = calculateParameter(mf2-2)
    mf  = calculateParameter(mf1/2)
    nr1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field3))
    nr  = calculateParameter(nr1/mf1)
    lr1 = measureParameter(length ( F_reg2 butting MOM_field3 ))
    lr = calculateParameter(lr1/2/(mf1*(nr-1))* 1e-6)
    w1 = measureParameter(length ( MOM_field2 coincident mom24_mx_aux ) 1e-6)	
    w  = calculateParameter(w1/(nr*mf1))
    s1 = measureParameter(length (F_reg2 butting MOM_field2 ))
    s2 = measureParameter(perimeter (F_reg2))
    s  = calculateParameter( (((s2 - s1)/2)/(mf1*(nr-1))) * 1e-6 )
    stm = calculateParameter( 2 * nr/nr )
    spm = calculateParameter( 4 * nr/nr )
   attachParameter(stm "stm" fmom24_mx_reg)
   attachParameter(spm "spm" fmom24_mx_reg)
   attachParameter(nr "nr" fmom24_mx_reg)
   attachParameter(lr "lr" fmom24_mx_reg)
   attachParameter(s  "s"  fmom24_mx_reg)
   attachParameter(w  "w"  fmom24_mx_reg)
   attachParameter(stm  "StartMn"  fmom24_mx_reg )
   attachParameter(spm  "StopMn"  fmom24_mx_reg)
   attachParameter(s  "Sfinger"  fmom24_mx_reg)
   attachParameter(lr  "Lfinger"  fmom24_mx_reg)
   attachParameter(nr  "Nfinger"  fmom24_mx_reg)
   attachParameter(w  "Wfinger"  fmom24_mx_reg)
if( !avSwitch( "spice_extraction") then
	   saveProperty(fmom24_mx_reg "model" "cfmom_mx")
)








    










extractDevice( "crtmom" mom25_reg metal5("PLUS") metal5("MINUS") crt_poly("BULK")
   spiceModel("crtmom")
   cellView("crtmom ivpcell")
   flagMalformed
)
   nv = measureParameter(figCount ( MOMDMY3 enclosing MOM_field3))
   nh = measureParameter(figCount ( MOMDMY2 enclosing MOM_field2))
   w1 = measureParameter(length ( MOM_field2 coincident mom25_reg) 1e-6)
   w  = calculateParameter(w1/nh)
   s1 = measureParameter(length (F_reg2 butting MOM_field2 ))
   s2 = measureParameter(perimeter (F_reg2))
   s  = calculateParameter( (((s2 - s1)/2)/(nh-1)) * 1e-6 )
   stm = calculateParameter(2 * nv/nv)
   spm = calculateParameter(5 * nv/nv)   
   
   attachParameter(stm "stm" mom25_reg)
   attachParameter(spm "spm" mom25_reg)
   attachParameter(nv "nv" mom25_reg)
   attachParameter(nh "nh" mom25_reg)
   attachParameter(s  "s"  mom25_reg)
   attachParameter(w  "w"  mom25_reg)
   attachParameter(s  "sp" mom25_reg)
if( !avSwitch( "spice_extraction") then
	   saveProperty(mom25_reg "model" "crtmom")
)


extractDevice( "cfmom" fmom25_reg metal5("PLUS") metal5("MINUS") crt_poly("BULK")
   spiceModel("cfmom")
   cellView("cfmom ivpcell")
   flagMalformed
)
   nr = measureParameter(figCount ( MOMDMY3 enclosing MOM_field3))
   w1 = measureParameter(length ( MOM_field3 coincident fmom25_reg) 1e-6)
   w  = calculateParameter(w1/nr)	
   s1 = measureParameter(length ( F_reg2 butting MOM_field2 ))
   s2 = measureParameter( perimeter (F_reg2)) 
   s = calculateParameter(((s2-s1)/2/(nr-1))* 1e-6)
   lr1 = measureParameter(length ( F_reg2 butting MOM_field2 ))
   lr = calculateParameter(lr1/2/(nr-1)* 1e-6)
   stm = calculateParameter(2 * nr/nr)
   spm = calculateParameter(5 * nr/nr)
   attachParameter(stm "stm" fmom25_reg)
   attachParameter(spm "spm" fmom25_reg)
   attachParameter(nr "nr" fmom25_reg)
   attachParameter(lr "lr" fmom25_reg)
   attachParameter(s  "s"  fmom25_reg)
   attachParameter(w  "w"  fmom25_reg)
   attachParameter(stm  "StartMn"  fmom25_reg)
   attachParameter(spm  "StopMn"  fmom25_reg)
   attachParameter(s  "Sfinger"  fmom25_reg)
   attachParameter(lr  "Lfinger"  fmom25_reg)
   attachParameter(nr  "Nfinger"  fmom25_reg)
   attachParameter(w  "Wfinger"  fmom25_reg)
if( !avSwitch( "spice_extraction") then
	   saveProperty(fmom25_reg "model" "cfmom")
)

extractDevice( "cfmom_rf" fmom25_rf_reg metal5("PLUS") metal5("MINUS") crt_poly("BULK")
   spiceModel("cfmom_rf")
   cellView("cfmom_rf ivpcell")
   flagMalformed
)
   nr = measureParameter(figCount ( MOMDMY3 enclosing MOM_field3))
   w1 = measureParameter(length ( MOM_field3 coincident fmom25_rf_reg) 1e-6)
   w  = calculateParameter(w1/nr)	
   s1 = measureParameter(length ( F_reg2 butting MOM_field2 ))
   s2 = measureParameter( perimeter (F_reg2)) 
   s = calculateParameter(((s2-s1)/2/(nr-1))* 1e-6)
   lr1 = measureParameter(length ( F_reg2 butting MOM_field2 ))
   lr = calculateParameter(lr1/2/(nr-1)* 1e-6)
   stm = calculateParameter(2 * nr/nr)
   spm = calculateParameter(5 * nr/nr)
   attachParameter(stm "stm" fmom25_rf_reg)
   attachParameter(spm "spm" fmom25_rf_reg)
   attachParameter(nr "nr" fmom25_rf_reg)
   attachParameter(lr "lr" fmom25_rf_reg)
   attachParameter(s  "s"  fmom25_rf_reg)
   attachParameter(w  "w"  fmom25_rf_reg)
   attachParameter(stm  "StartMn"  fmom25_rf_reg)
   attachParameter(spm  "StopMn"  fmom25_rf_reg)
   attachParameter(s  "Sfinger"  fmom25_rf_reg)
   attachParameter(lr  "Lfinger"  fmom25_rf_reg)
   attachParameter(nr  "Nfinger"  fmom25_rf_reg)
   attachParameter(w  "Wfinger"  fmom25_rf_reg)
if( !avSwitch( "spice_extraction") then
	   saveProperty(fmom25_rf_reg "model" "cfmom_rf")
)

extractDevice( "cfmom_mx" fmom25_mx_reg mom5p1("PLUS1") mom5m1("MINUS1") mom5p2("PLUS2") mom5m2("MINUS2") crt_poly("BULK")
   spiceModel("cfmom_mx")
   cellView("cfmom_mx ivpcell")
   flagMalformed
)
    mf2 = measureParameter(figCount ( MOMDMY22 enclosing MOM_pin5 ) )
    mf1 = calculateParameter(mf2-2)
    mf  = calculateParameter(mf1/2)
    nr1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field3))
    nr  = calculateParameter(nr1/mf1)
    lr1 = measureParameter(length ( F_reg2 butting MOM_field3 ))
    lr = calculateParameter(lr1/2/(mf1*(nr-1))* 1e-6)
    w1 = measureParameter(length ( MOM_field2 coincident mom25_mx_aux ) 1e-6)	
    w  = calculateParameter(w1/(nr*mf1))
    s1 = measureParameter(length (F_reg2 butting MOM_field2 ))
    s2 = measureParameter(perimeter (F_reg2))
    s  = calculateParameter( (((s2 - s1)/2)/(mf1*(nr-1))) * 1e-6 )
    stm = calculateParameter( 2 * nr/nr )
    spm = calculateParameter( 5 * nr/nr )
   attachParameter(stm "stm" fmom25_mx_reg)
   attachParameter(spm "spm" fmom25_mx_reg)
   attachParameter(nr "nr" fmom25_mx_reg)
   attachParameter(lr "lr" fmom25_mx_reg)
   attachParameter(s  "s"  fmom25_mx_reg)
   attachParameter(w  "w"  fmom25_mx_reg)
   attachParameter(stm  "StartMn"  fmom25_mx_reg )
   attachParameter(spm  "StopMn"  fmom25_mx_reg)
   attachParameter(s  "Sfinger"  fmom25_mx_reg)
   attachParameter(lr  "Lfinger"  fmom25_mx_reg)
   attachParameter(nr  "Nfinger"  fmom25_mx_reg)
   attachParameter(w  "Wfinger"  fmom25_mx_reg)
if( !avSwitch( "spice_extraction") then
	   saveProperty(fmom25_mx_reg "model" "cfmom_mx")
)








    










extractDevice( "crtmom" mom35_reg metal5("PLUS") metal5("MINUS") crt_poly("BULK")
   spiceModel("crtmom")
   cellView("crtmom ivpcell")
   flagMalformed
)
   nv = measureParameter(figCount ( MOMDMY3 enclosing MOM_field3))
   nh = measureParameter(figCount ( MOMDMY4 enclosing MOM_field4))
   w1 = measureParameter(length ( MOM_field4 coincident mom35_reg) 1e-6)
   w  = calculateParameter(w1/nh)
   s1 = measureParameter(length (F_reg3 butting MOM_field3 ))
   s2 = measureParameter(perimeter (F_reg3))
   s  = calculateParameter( (((s2 - s1)/2)/(nv-1)) * 1e-6 )
   stm = calculateParameter(3 * nv/nv)
   spm = calculateParameter(5 * nv/nv)   
   
   attachParameter(stm "stm" mom35_reg)
   attachParameter(spm "spm" mom35_reg)
   attachParameter(nv "nv" mom35_reg)
   attachParameter(nh "nh" mom35_reg)
   attachParameter(s  "s"  mom35_reg)
   attachParameter(w  "w"  mom35_reg)
   attachParameter(s  "sp" mom35_reg)
if( !avSwitch( "spice_extraction") then
	   saveProperty(mom35_reg "model" "crtmom")
)


extractDevice( "cfmom" fmom35_reg metal5("PLUS") metal5("MINUS") crt_poly("BULK")
   spiceModel("cfmom")
   cellView("cfmom ivpcell")
   flagMalformed
)
   nr = measureParameter(figCount ( MOMDMY3 enclosing MOM_field3))
   w1 = measureParameter(length ( MOM_field3 coincident fmom35_reg) 1e-6)
   w  = calculateParameter(w1/nr)	
   s1 = measureParameter(length ( F_reg3 butting MOM_field3 ))
   s2 = measureParameter( perimeter (F_reg3)) 
   s = calculateParameter(((s2-s1)/2/(nr-1))* 1e-6)
   lr1 = measureParameter(length ( F_reg3 butting MOM_field3 ))
   lr = calculateParameter(lr1/2/(nr-1)* 1e-6)
   stm = calculateParameter(3 * nr/nr)
   spm = calculateParameter(5 * nr/nr)
   attachParameter(stm "stm" fmom35_reg)
   attachParameter(spm "spm" fmom35_reg)
   attachParameter(nr "nr" fmom35_reg)
   attachParameter(lr "lr" fmom35_reg)
   attachParameter(s  "s"  fmom35_reg)
   attachParameter(w  "w"  fmom35_reg)
   attachParameter(stm  "StartMn"  fmom35_reg)
   attachParameter(spm  "StopMn"  fmom35_reg)
   attachParameter(s  "Sfinger"  fmom35_reg)
   attachParameter(lr  "Lfinger"  fmom35_reg)
   attachParameter(nr  "Nfinger"  fmom35_reg)
   attachParameter(w  "Wfinger"  fmom35_reg)
if( !avSwitch( "spice_extraction") then
	   saveProperty(fmom35_reg "model" "cfmom")
)

extractDevice( "cfmom_rf" fmom35_rf_reg metal5("PLUS") metal5("MINUS") crt_poly("BULK")
   spiceModel("cfmom_rf")
   cellView("cfmom_rf ivpcell")
   flagMalformed
)
   nr = measureParameter(figCount ( MOMDMY3 enclosing MOM_field3))
   w1 = measureParameter(length ( MOM_field3 coincident fmom35_rf_reg) 1e-6)
   w  = calculateParameter(w1/nr)	
   s1 = measureParameter(length ( F_reg3 butting MOM_field3 ))
   s2 = measureParameter( perimeter (F_reg3)) 
   s = calculateParameter(((s2-s1)/2/(nr-1))* 1e-6)
   lr1 = measureParameter(length ( F_reg3 butting MOM_field3 ))
   lr = calculateParameter(lr1/2/(nr-1)* 1e-6)
   stm = calculateParameter(3 * nr/nr)
   spm = calculateParameter(5 * nr/nr)
   attachParameter(stm "stm" fmom35_rf_reg)
   attachParameter(spm "spm" fmom35_rf_reg)
   attachParameter(nr "nr" fmom35_rf_reg)
   attachParameter(lr "lr" fmom35_rf_reg)
   attachParameter(s  "s"  fmom35_rf_reg)
   attachParameter(w  "w"  fmom35_rf_reg)
   attachParameter(stm  "StartMn"  fmom35_rf_reg)
   attachParameter(spm  "StopMn"  fmom35_rf_reg)
   attachParameter(s  "Sfinger"  fmom35_rf_reg)
   attachParameter(lr  "Lfinger"  fmom35_rf_reg)
   attachParameter(nr  "Nfinger"  fmom35_rf_reg)
   attachParameter(w  "Wfinger"  fmom35_rf_reg)
if( !avSwitch( "spice_extraction") then
	   saveProperty(fmom35_rf_reg "model" "cfmom_rf")
)

extractDevice( "cfmom_mx" fmom35_mx_reg mom5p1("PLUS1") mom5m1("MINUS1") mom5p2("PLUS2") mom5m2("MINUS2") crt_poly("BULK")
   spiceModel("cfmom_mx")
   cellView("cfmom_mx ivpcell")
   flagMalformed
)
    mf2 = measureParameter(figCount ( MOMDMY22 enclosing MOM_pin5 ) )
    mf1 = calculateParameter(mf2-2)
    mf  = calculateParameter(mf1/2)
    nr1 = measureParameter(figCount ( MOMDMY22 enclosing MOM_field3))
    nr  = calculateParameter(nr1/mf1)
    lr1 = measureParameter(length ( F_reg3 butting MOM_field3 ))
    lr = calculateParameter(lr1/2/(mf1*(nr-1))* 1e-6)
    w1 = measureParameter(length ( MOM_field4 coincident mom35_mx_aux ) 1e-6)	
    w  = calculateParameter(w1/(nr*mf1))
    s1 = measureParameter(length (F_reg3 butting MOM_field3 ))
    s2 = measureParameter(perimeter (F_reg3))
    s  = calculateParameter( (((s2 - s1)/2)/(mf1*(nr-1))) * 1e-6 )
    stm = calculateParameter( 3 * nr/nr )
    spm = calculateParameter( 5 * nr/nr )
   attachParameter(stm "stm" fmom35_mx_reg)
   attachParameter(spm "spm" fmom35_mx_reg)
   attachParameter(nr "nr" fmom35_mx_reg)
   attachParameter(lr "lr" fmom35_mx_reg)
   attachParameter(s  "s"  fmom35_mx_reg)
   attachParameter(w  "w"  fmom35_mx_reg)
   attachParameter(stm  "StartMn"  fmom35_mx_reg )
   attachParameter(spm  "StopMn"  fmom35_mx_reg)
   attachParameter(s  "Sfinger"  fmom35_mx_reg)
   attachParameter(lr  "Lfinger"  fmom35_mx_reg)
   attachParameter(nr  "Nfinger"  fmom35_mx_reg)
   attachParameter(w  "Wfinger"  fmom35_mx_reg)
if( !avSwitch( "spice_extraction") then
	   saveProperty(fmom35_mx_reg "model" "cfmom_mx")
)



extractDevice("rnpo1_dis" rnpolyl_r_3t poly("PLUS") poly("MINUS") poly_term("B") physical
   spiceModel("rnpo1_dis") 
   cellView( "rnlpoly_dis ivpcell" )
   flagMalformed
)   
   A = measureParameter(area (rnpolyl_r_3t) 1e-12)
   wr = measureParameter(length (rnpolyl_r_3t butting poly) 0.5e-6)
   lr = calculateParameter( A/wr )
   M = calculateParameter( A/A )
   nameParameter(wr "w")
   nameParameter(wr "wr")
   nameParameter(wr "sumW")
   nameParameter(lr "l")
   nameParameter(lr "lr")
   nameParameter(lr "sumL")
   nameParameter(M "m")
if( !avSwitch( "spice_extraction") then   
   saveProperty( rnpolyl_r_3t "model" "rnpo1_dis" )
)

extractDevice( "spiral_sym_mu_x_20k" sym_mu_x_20k_ind indm6p("PLUS") indm6m("MINUS") psub("BULK")
   spiceModel("spiral_sym_mu_x_20k")
   cellView("spiral_sym_mu_x_20k ivpcell")
   flagMalformed
)  
   nnr1  = measureParameter( perimeter (IND_NR) ) 
   nnr   = calculateParameter( ( nnr1 - 0.005*2 ) / 2 )
   nr    =  calculateParameter( ( nnr / 0.01 ) * 0.25 ) 
   lay   = calculateParameter( 6 * nr/nr)
   rad1  = measureParameter( perimeter (IND_RAD) )
   rad   = calculateParameter( ( rad1 - 0.5*2 ) * 0.5e-6 )
   gdis1 = measureParameter( perimeter (IND_GDIS) )
   gdis  = calculateParameter( ( gdis1 - 0.5*2 ) * 0.5e-6 )
   w1    = measureParameter( perimeter (IND_W) )
   w     = calculateParameter( ( w1 - 0.5*2 ) * 0.5e-6 )
   s1    = measureParameter( perimeter (IND_S) )
   spacing     = calculateParameter( ( s1 - 0.5*2 ) * 0.5e-6 )
   attachParameter(w "w" sym_mu_x_20k_ind)
   attachParameter(spacing "spacing" sym_mu_x_20k_ind)
   attachParameter(lay "lay" sym_mu_x_20k_ind)
   attachParameter(rad "rad" sym_mu_x_20k_ind)
   attachParameter(nr "nr" sym_mu_x_20k_ind)
   attachParameter(gdis "gdis" sym_mu_x_20k_ind)
   attachParameter(w "width" sym_mu_x_20k_ind)
   attachParameter(spacing "space" sym_mu_x_20k_ind)
   attachParameter(lay "layer" sym_mu_x_20k_ind)
   attachParameter(rad "radius" sym_mu_x_20k_ind)
   attachParameter(nr "turns" sym_mu_x_20k_ind)
if( !avSwitch( "spice_extraction") then
	   saveProperty(sym_mu_x_20k_ind "model" "spiral_sym_mu_x_20k")
)

extractDevice("rppolyhri_rf" lrpop_rf ppoly("PLUS") ppoly("MINUS") DNW("BULK") physical
   spiceModel("rppolyhri_rf") 
   cellView( "rphripoly_rf ivpcell" )
   flagMalformed
)
   w = measureParameter(length (lrpop_rf butting ppoly) 0.5e-6)
   a = measureParameter(area (lrpop_rf) 1e-12)
   l = calculateParameter(a/w)
   m = calculateParameter( a/a )
   nameParameter(w "W")
   nameParameter(l "L")
   nameParameter(w "sumW")
   nameParameter(l "sumL")
   nameParameter(M "m")   saveProperty( lrpop_rf "model" "rppolyhri_rf" )

if( avSwitch( "CAP_2P0") then
extractDevice("mimcap_2p0_wos" capm5_rf3t_2p0 ctm("PLUS") metal5("MINUS") DNW("BULK")
   spiceModel("mimcap_2p0_wos") 
   cellView( "mimcap_rf_2p0 ivpcell" )
   flagMalformed
)
   PJ = measureParameter(perimeter (capm5_rf3t_2p0 over ctm) 1e-6)
   A  = measureParameter(area (capm5_rf3t_2p0) 1e-12)
   L1 = measureParameter(length (capm5_rf3t_2p0 coincident metal6) 1e-6)
   LT  = calculateParameter(PJ - L1)
   WT  = calculateParameter(A/LT)
   lay = calculateParameter( L1/L1*6 )   
   nameParameter(lay "lay")
   nameParameter(LT "lt")
   nameParameter(WT "wt")
   saveProperty( capm5_rf3t_2p0 "model" "mimcap_2p0_wos" )
)

;;defined in crtmom

extractDevice("xjvar_w40" jvar_ws tpdiff("PLUS") tndiff("MINUS") psub("BULK")
   spiceModel("xjvar_w40") 
   cellView( "jvar ivpcell" )
   flagMalformed
)
   NR  = measureParameter(figCount (jvar_ws enclosing jvarp_rf))
   WR1 = measureParameter(length (jvarp_rf butting w_fac))
   W  = calculateParameter((WR1/(2*NR))*1e-6)
   m  = calculateParameter(NR/NR)
   nameParameter(NR "nr")
   attachParameter(W "w" jvar_ws)
   attachParameter(m "m" jvar_ws)
   saveProperty( jvar_ws "model" "xjvar_w40" )

extractBJT("P1" iemit5 coll_od2("C") nbase_od2("B") emit_od2("E")
  spiceModel( "pnp5_3" )
  cellView( "vpnp3 ivpcell" )
  flagMalformed )
  area_BJT = measureParameter(area (iemit5 over emit_od2) 1e-12)
  M = calculateParameter(area_BJT/area_BJT)
  nameParameter( area_BJT "area" )
  nameParameter( M "m" )
  saveProperty( iemit5 "model" "pnp5_3") 

extractDevice("moscap_rf_nw" varnwmc_rf_nw poly("PLUS") tndiff("MINUS") psub("BULK")
   spiceModel("moscap_rf_nw")
   cellView("moscap_rf_nw ivpcell")
   flagMalformed
)
   br1  = measureParameter(figCount (varnwmc_rf_nw enclosing vargt3_rf))
   gr    = measureParameter(figCount (varnwmc_rf_nw enclosing nthin))
   br    = calculateParameter(br1/gr)
   wr1 = measureParameter(length (vargt3_rf butting tndiff) 0.5e-6)
   wr  = calculateParameter(wr1/br1)
   a1  = measureParameter(area (vargt3_rf) 1e-12)
   lr  = calculateParameter(a1/(wr*br1))
   attachParameter(wr "wr" varnwmc_rf_nw)
   attachParameter(lr "lr" varnwmc_rf_nw)
   attachParameter(br "br" varnwmc_rf_nw)
   attachParameter(gr "gr" varnwmc_rf_nw)
   attachParameter(br "branch" varnwmc_rf_nw)
   attachParameter(gr "group" varnwmc_rf_nw)
   attachParameter(wr "wf" varnwmc_rf_nw)
   attachParameter(lr "lf" varnwmc_rf_nw)
   
if( !avSwitch( "spice_extraction") then
	   saveProperty(varnwmc_rf_nw "model" "moscap_rf_nw")
)

extractDevice("rnodw_m" s_rnods_3t tndiff("PLUS") tndiff("MINUS") psub("B") physical
   spiceModel("rnodw_m") 
   cellView( "rnlplus ivpcell" )
   flagMalformed
)   
   A = measureParameter(area (s_rnods_3t) 1e-12) 
   wr = measureParameter(length (s_rnods_3t butting tndiff) 0.5e-6) 
   lr = calculateParameter( A/wr ) 
   M = calculateParameter( A/A )
   nameParameter(wr "w")
   nameParameter(wr "wr")
   nameParameter(wr "sumW")
   nameParameter(lr "l")
   nameParameter(lr "lr")
   
   nameParameter(lr "sumL")
   nameParameter(M "m")
   saveProperty( s_rnods_3t "model" "rnodw_m" )

if( !avSwitch( "CAP_2P0") then
extractDevice("mimcap_1p0_sin_3t" capm5_1p0_3t ctm("PLUS") metal5("MINUS") psub("BULK")
  spiceModel( "mimcap_1p0_sin_3t" )
  cellView( "mimcap_1p0_sin_3t ivpcell" )
  flagMalformed )
  area_CAP = measureParameter(area (capm5_1p0_3t) 1e-12)
  pj_CAP = measureParameter(perimeter (capm5_1p0_3t) 1e-6)
  A_CAP    = measureParameter(area (capm5_1p0_3t))
  P_CAP   = measureParameter(perimeter (capm5_1p0_3t))
  P_2_CAP = calculateParameter( P_CAP * P_CAP)
  AC4 = calculateParameter( A_CAP * 16)
  KKK = calculateParameter( P_2_CAP-AC4)
  SQ = calculateParameter(sqrt(KKK))
  WT = calculateParameter( ((P_CAP - SQ)/4) * 1e-6)
  LT = calculateParameter( ((P_CAP + SQ)/4) * 1e-6)
  M = calculateParameter( LT/LT )
  LAY = calculateParameter( LT/LT*6 ) 
  nameParameter( LAY "mLvl" )
  nameParameter( LAY "lay" )
  nameParameter( LT "l" )
  nameParameter( WT "w" )
  nameParameter( LT "lt" )
  nameParameter( WT "wt" )
  nameParameter( M "m" )
if( !avSwitch( "spice_extraction") then  
  saveProperty( capm5_1p0_3t "model" "mimcap_1p0_sin_3t")
)  
)
  rcxLayer( capm5_1p0_3t)

extractBJT("PV" emit5 coll("C") nbase("B") emit("E")
  spiceModel( "pnp5" )
  cellView( "vpnp ivpcell" )
  flagMalformed )
  area_BJT = measureParameter(area (emit5 over emit) 1e-12)
  M = calculateParameter(area_BJT/area_BJT)
  nameParameter( area_BJT "area" )
  nameParameter( M "m" )
  saveProperty( emit5 "model" "pnp5") 

extractBJT("P1" iemit10 coll_od2("C") nbase_od2("B") emit_od2("E")
  spiceModel( "pnp10_3" )
  cellView( "vpnp3 ivpcell" )
  flagMalformed )
  area_BJT = measureParameter(area (iemit10 over emit_od2) 1e-12)
  M = calculateParameter(area_BJT/area_BJT)
  nameParameter( area_BJT "area" )
  nameParameter( M "m" )
  saveProperty( iemit10 "model" "pnp10_3") 

extractDevice("sbd_rf" sbd_rf schottky_p("PLUS") schottky_n("MINUS") psub("BULK")
   spiceModel("sbd_rf") 
   cellView( "sbd_rf ivpcell" )
   flagMalformed
)
   NF = measureParameter(figCount (sbd_rf enclosing schottky_p ))
   W1 = measureParameter(length (schottky_p butting sbd_w) 1e-6)
   W = calculateParameter(W1/(2*NF))
   A = measureParameter(area (schottky_p) 1e-12)
   L = calculateParameter(A/(NF*W))
   attachParameter(W "w" sbd_rf)
   attachParameter(L "l" sbd_rf)
   attachParameter(NF "nf" sbd_rf)
   saveProperty( sbd_rf "model" "sbd_rf" )

extractDevice("rnwsti_m" nwstia nxwell("PLUS") nxwell("MINUS") psub("B") physical
   spiceModel("rnwsti_m") 
   cellView( "rnwsti_m ivpcell" )
   flagMalformed
)   
   A = measureParameter(area (nwstia) 1e-12) 
   wr = measureParameter(length (nwstia butting nxwell) 0.5e-6) 
   lr = calculateParameter( A/wr ) 
   M = calculateParameter( A/A )
   nameParameter(wr "w")
   nameParameter(wr "wr")
   nameParameter(wr "sumW")
   nameParameter(lr "l")
   nameParameter(lr "lr")
   
   nameParameter(lr "sumL")
   nameParameter(M "m")
   saveProperty( nwstia "model" "rnwsti_m" )

extractDevice("pmos_rf" pgate_4t_pthin d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B")
   spiceModel("pmos_rf") 
   cellView( "rfpmos2v ivpcell" )
   flagMalformed
)
   NR = measureParameter(figCount (pgate_4t_pthin enclosing pgate_rf4t))
   WD = measureParameter(length (pgate_rf4t butting d_tpdiff ) 1e-6)
   WS = measureParameter(length (pgate_rf4t butting s_tpdiff ) 1e-6)
   WR = calculateParameter((WD+WS)/(2*NR))
   area_gate = measureParameter(area (pgate_rf4t over pgate_4t_pthin) 1e-12)
   LR = calculateParameter(area_gate/(WR*NR))
   attachParameter(WR "wr" pgate_4t_pthin)
   attachParameter(LR "lr" pgate_4t_pthin)
   nameParameter(NR "nr")
   saveProperty( pgate_4t_pthin "model" "pmos_rf" )

extractBJT("PV" emit10 coll("C") nbase("B") emit("E")
  spiceModel( "pnp10" )
  cellView( "vpnp ivpcell" )
  flagMalformed )
  area_BJT = measureParameter(area (emit10 over emit) 1e-12)
  M = calculateParameter(area_BJT/area_BJT)
  nameParameter( area_BJT "area" )
  nameParameter( M "m" )
  saveProperty( emit10 "model" "pnp10") 

extractDevice("rppolywo_rf" prpop_rf3t poly("PLUS") poly("MINUS") DNW("BULK") physical
   spiceModel("rppolywo_rf") 
   cellView( "rphpoly_rf ivpcell" )
   flagMalformed
)
   W = measureParameter(length (prpop_rf3t butting poly) 0.5e-6)
   A = measureParameter(area (prpop_rf3t) 1e-12)
   L = calculateParameter(A/W)
   M = calculateParameter( A/A )
   nameParameter(W "W")
   nameParameter(L "L")
   nameParameter(W "sumW")
   nameParameter(L "sumL")
   nameParameter(M "m")
   saveProperty( prpop_rf3t "model" "rppolywo_rf" )

extractDevice( "spiral_sym_ct_mu_x_20k" sym_ct_mu_x_20k_ind indm6p("PLUS") indm6m("MINUS") psub("BULK") indm4c("CTAP")
   spiceModel("spiral_sym_ct_mu_x_20k")
   cellView("spiral_sym_ct_mu_x_20k ivpcell")
   flagMalformed
)  
   nnr1  = measureParameter( perimeter (IND_NR) ) 
   nnr   = calculateParameter( ( nnr1 - 0.005*2 ) / 2 )
   nr    =  calculateParameter( ( nnr / 0.01 ) * 0.25 ) 
   lay   = calculateParameter( 6 * nr/nr)
   rad1  = measureParameter( perimeter (IND_RAD) )
   rad   = calculateParameter( ( rad1 - 0.5*2 ) * 0.5e-6 )
   gdis1 = measureParameter( perimeter (IND_GDIS) )
   gdis  = calculateParameter( ( gdis1 - 0.5*2 ) * 0.5e-6 )
   w1    = measureParameter( perimeter (IND_W) )
   w     = calculateParameter( ( w1 - 0.5*2 ) * 0.5e-6 )
   s1    = measureParameter( perimeter (IND_S) )
   spacing     = calculateParameter( ( s1 - 0.5*2 ) * 0.5e-6 )
   attachParameter(w "w" sym_ct_mu_x_20k_ind)
   attachParameter(spacing "spacing" sym_ct_mu_x_20k_ind)
   attachParameter(lay "lay" sym_ct_mu_x_20k_ind)
   attachParameter(rad "rad" sym_ct_mu_x_20k_ind)
   attachParameter(nr "nr" sym_ct_mu_x_20k_ind)
   attachParameter(gdis "gdis" sym_ct_mu_x_20k_ind)
   attachParameter(w "width" sym_ct_mu_x_20k_ind)
   attachParameter(spacing "space" sym_ct_mu_x_20k_ind)
   attachParameter(lay "layer" sym_ct_mu_x_20k_ind)
   attachParameter(rad "radius" sym_ct_mu_x_20k_ind)
   attachParameter(nr "turns" sym_ct_mu_x_20k_ind)
if( !avSwitch( "spice_extraction") then
	   saveProperty(sym_ct_mu_x_20k_ind "model" "spiral_sym_ct_mu_x_20k")
)

extractBJT("P1" iemit2 coll_od2("C") nbase_od2("B") emit_od2("E")
  spiceModel( "pnp2_3" )
  cellView( "vpnp3 ivpcell" )
  flagMalformed )
  area_BJT = measureParameter(area (iemit2 over emit_od2) 1e-12)
  M = calculateParameter(area_BJT/area_BJT)
  nameParameter( area_BJT "area" )
  nameParameter( M "m" )
  saveProperty( iemit2 "model" "pnp2_3") 

extractRES("WO" nwod nxwell("PLUS" "MINUS")
   spiceModel("rnwod") 
   cellView( "rnwod_2t ivpcell" )
   flagMalformed
)   
   A  = measureParameter(area (nwod) 1e-12) 
   W  = measureParameter(length (nwod butting nxwell) 0.5e-6) 
   L  = calculateParameter( A/W ) 
   R  = calculateParameter( L/W * RVWO )
   nameParameter(W "w")
   nameParameter(W "sumW")
   nameParameter(L "l")
   nameParameter(L "sumL")
   nameParameter(R "VALUE")
   if( !avSwitch( "spice_extraction") then
   saveProperty( nwod "model" "rnwod" )
   )

extractDevice("rpod_m" l_rpodl_3t tpdiff("PLUS") tpdiff("MINUS") nxwell("B") physical
   spiceModel("rpod_m") 
   cellView( "rplplus ivpcell" )
   flagMalformed
)   
   A = measureParameter(area (l_rpodl_3t) 1e-12) 
   wr = measureParameter(length (l_rpodl_3t butting tpdiff) 0.5e-6) 
   lr = calculateParameter( A/wr ) 
   M = calculateParameter( A/A )
   nameParameter(wr "w")
   nameParameter(wr "wr")
   nameParameter(wr "sumW")
   nameParameter(lr "l")
   nameParameter(lr "lr")
   
   nameParameter(lr "sumL")
   nameParameter(M "m")
   saveProperty( l_rpodl_3t "model" "rpod_m" )

extractDevice("nmos_rf33_6t" bnrgate_6t_nthin d_tndiff("D") poly_rf("G") s_tndiff("S") rw("B") DNW("NG") RFDUMMY6T("PG")
   spiceModel("nmos_rf33_6t")
   cellView( "rfnmos3v_6t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (bnrgate_6t_nthin enclosing bnrgate_rf4t))
   WD = measureParameter(length (bnrgate_rf4t butting d_tndiff))
   WS = measureParameter(length (bnrgate_rf4t butting s_tndiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (bnrgate_rf4t) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" bnrgate_6t_nthin)
   attachParameter(lr "lr" bnrgate_6t_nthin)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( bnrgate_6t_nthin "model" "nmos_rf33_6t")
)

;;defined in crtmom

if( avSwitch( "CAP_2P0") then
extractDevice("mimcap_2p0_sin_3t" capm5_2p0_3t ctm("PLUS") metal5("MINUS") psub("BULK")
  spiceModel( "mimcap_2p0_sin_3t" )
  cellView( "mimcap_2p0_sin_3t ivpcell" )
  flagMalformed )
  area_CAP = measureParameter(area (capm5_2p0_3t) 1e-12)
  pj_CAP = measureParameter(perimeter (capm5_2p0_3t) 1e-6)
  A_CAP    = measureParameter(area (capm5_2p0_3t))
  P_CAP   = measureParameter(perimeter (capm5_2p0_3t))
  P_2_CAP = calculateParameter( P_CAP * P_CAP)
  AC4 = calculateParameter( A_CAP * 16)
  KKK = calculateParameter( P_2_CAP-AC4)
  SQ = calculateParameter(sqrt(KKK))
  WT = calculateParameter( ((P_CAP - SQ)/4) * 1e-6)
  LT = calculateParameter( ((P_CAP + SQ)/4) * 1e-6)
  M = calculateParameter( LT/LT )
  LAY = calculateParameter( LT/LT*6 ) 
  nameParameter( LAY "mLvl" )
  nameParameter( LAY "lay" )
  nameParameter( LT "l")
  nameParameter( WT "w")
  nameParameter( LT "lt" )
  nameParameter( WT "wt" )
  nameParameter( M "m" )
if( !avSwitch( "spice_extraction") then  
  saveProperty( capm5_2p0_3t "model" "mimcap_2p0_sin_3t")
)
)
  rcxLayer(capm5_2p0_3t)

if( avSwitch( "extract_dnwdio") then 
extractDIODE("pwdnw" rwdio psub("PLUS") DNW("MINUS")
   spiceModel("pwdnw")
   cellView( "dio_pwdnw ivpcell" )
   flagMalformed
   )
   area_DIO = measureParameter(area (rwdio) 1e-12) 
   pj_DIO   = measureParameter(perimeter (rwdio) 1e-6) 
   nameParameter( area_DIO "area" ) 
   nameParameter( pj_DIO "pj" ) 
   if( !avSwitch( "spice_extraction") then
	   saveProperty(rwdio "model" "pwdnw")
   )
)

extractDevice("pmos_rf_5t" pgate_5t_pthin d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B") RFDUMMY5T("PG")
   spiceModel("pmos_rf_5t")
   cellView( "rfpmos2v_5t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_5t_pthin enclosing pgate_rf4t))
   WD = measureParameter(length (pgate_rf4t butting d_tpdiff))
   WS = measureParameter(length (pgate_rf4t butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rf4t) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_5t_pthin)
   attachParameter(lr "lr" pgate_5t_pthin)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_5t_pthin "model" "pmos_rf_5t")
)

extractDevice("rnpo1rpo_dis" nrpop_3t poly("PLUS") poly("MINUS") poly_term("B") physical
   spiceModel("rnpo1rpo_dis") 
   cellView( "rnhpoly_dis ivpcell" )
   flagMalformed
)   
   A = measureParameter(area (nrpop_3t) 1e-12)
   wr = measureParameter(length (nrpop_3t butting poly) 0.5e-6)
   lr = calculateParameter( A/wr )
   M = calculateParameter( A/A )
   nameParameter(wr "w")
   nameParameter(wr "wr")
   nameParameter(wr "sumW")
   nameParameter(lr "l")
   nameParameter(lr "lr")
   nameParameter(lr "sumL")
   nameParameter(M "m")
if( !avSwitch( "spice_extraction") then   
   saveProperty( nrpop_3t "model" "rnpo1rpo_dis" )
)

if( !avSwitch( "CAP_2P0") then
extractDevice("mimcap_1p0_sin" capm5_1p0 ctm("TOP") metal5("BOT")
  spiceModel( "mimcap_1p0_sin" )
  cellView( "mimcap_1p0_sin ivpcell" )
  flagMalformed )
  area_CAP = measureParameter(area (capm5_1p0) 1e-12)
  pj_CAP = measureParameter(perimeter (capm5_1p0) 1e-6)
  A_CAP    = measureParameter(area (capm5_1p0))
  P_CAP   = measureParameter(perimeter (capm5_1p0))
  P_2_CAP = calculateParameter( P_CAP * P_CAP)
  AC4 = calculateParameter( A_CAP * 16)
  KKK = calculateParameter( P_2_CAP-AC4)
  SQ = calculateParameter(sqrt(KKK))
  WT = calculateParameter( ((P_CAP - SQ)/4) * 1e-6)
  LT = calculateParameter( ((P_CAP + SQ)/4) * 1e-6)
  M = calculateParameter( LT/LT )
  LAY = calculateParameter( LT/LT*6 )   
  nameParameter( LAY "lay" )
  nameParameter( LAY "mLvl" )
  nameParameter( LT "lt")
  nameParameter( LT "l")
  nameParameter( WT "wt")
  nameParameter( WT "w")
  nameParameter( M "m" )
if( !avSwitch( "spice_extraction") then  
  saveProperty( capm5_1p0 "model" "mimcap_1p0_sin")
)  
extractDevice("mimcap_1p0_sin" capm5_1p0_ud ctm("TOP") metal5("BOT")
  spiceModel( "mimcap_1p0_sin" )
  cellView( "mimcap_1p0_sin ivpcell" )
  flagMalformed )
  area_CAP = measureParameter(area (capm5_1p0_ud) 1e-12)
  pj_CAP = measureParameter(perimeter (capm5_1p0_ud) 1e-6)
  A_CAP    = measureParameter(area (capm5_1p0_ud))
  P_CAP   = measureParameter(perimeter (capm5_1p0_ud))
  P_2_CAP = calculateParameter( P_CAP * P_CAP)
  AC4 = calculateParameter( A_CAP * 16)
  KKK = calculateParameter( P_2_CAP-AC4)
  SQ = calculateParameter(sqrt(KKK))
  WT = calculateParameter( ((P_CAP - SQ)/4) * 1e-6)
  LT = calculateParameter( ((P_CAP + SQ)/4) * 1e-6)
  M = calculateParameter( LT/LT )
  LAY = calculateParameter( LT/LT*6 )   
  nameParameter( LAY "lay" )
  nameParameter( LAY "mLvl" )
  nameParameter( LT "lt")
  nameParameter( LT "l")
  nameParameter( WT "wt")
  nameParameter( WT "w")
  nameParameter( M "m" )
if( !avSwitch( "spice_extraction") then  
  saveProperty( capm5_1p0_ud "model" "mimcap_1p0_sin")
) 
)
  rcxLayer(capm5_1p0)
  rcxLayer(capm5_1p0_ud)

if( avSwitch( "extract_dnwdio") then 
extractDIODE("dnwpsub" dnwdio psub_term("PLUS") DNW("MINUS")
   spiceModel("dnwpsub")
   cellView( "dio_dnwpsub ivpcell" )
   flagMalformed
   )
   area_DIO = measureParameter(area (DNW) 1e-12) 
   pj_DIO   = measureParameter(perimeter (DNW) 1e-6) 
   attachParameter( area_DIO "area" dnwdio ) 
   attachParameter( pj_DIO "pj" dnwdio ) 
   if( !avSwitch( "spice_extraction") then
	   saveProperty(dnwdio "model" "dnwpsub")
   )   
)

extractBJT("NV_mis" nemit10_mis ncoll("C") pbase("B") nemit("E")
  spiceModel( "npn10_mis" )
  cellView( "npn_mis ivpcell" )
  flagMalformed )
  area_BJT = measureParameter(area (nemit10_mis over nemit) 1e-12)
  M = calculateParameter(area_BJT/area_BJT)
  nameParameter( area_BJT "area" )
  nameParameter( M "m" )
  saveProperty( nemit10_mis "model" "npn10_mis") 

extractDevice("moscap_rf33" varnwmi_rf_dnw poly("PLUS") tndiff("MINUS") psub("BULK")
   spiceModel("moscap_rf33")
   cellView("moscap_rf33 ivpcell")
   flagMalformed
)
   br1  = measureParameter(figCount (varnwmi_rf_dnw enclosing bvargt3_rf))
   gr    = measureParameter(figCount (varnwmi_rf_dnw enclosing nthin))
   br    = calculateParameter(br1/gr)
   wr1 = measureParameter(length (bvargt3_rf butting tndiff) 0.5e-6)
   wr  = calculateParameter(wr1/br1)
   a1  = measureParameter(area (bvargt3_rf) 1e-12)
   lr  = calculateParameter(a1/(wr*br1))
   attachParameter(wr "wr" varnwmi_rf_dnw)
   attachParameter(lr "lr" varnwmi_rf_dnw)
   attachParameter(br "br" varnwmi_rf_dnw)
   attachParameter(gr "gr" varnwmi_rf_dnw)
   attachParameter(br "branch" varnwmi_rf_dnw)
   attachParameter(gr "group" varnwmi_rf_dnw)
   attachParameter(wr "wf" varnwmi_rf_dnw)
   attachParameter(lr "lf" varnwmi_rf_dnw)
   
if( !avSwitch( "spice_extraction") then
	   saveProperty(varnwmi_rf_dnw "model" "moscap_rf33")
)

extractDevice("rnwod_m" nwoda nxwell("PLUS") nxwell("MINUS") psub("B") physical
   spiceModel("rnwod_m") 
   cellView( "rnwod ivpcell" )
   flagMalformed
)   
   A = measureParameter(area (nwoda) 1e-12) 
   wr = measureParameter(length (nwoda butting nxwell) 0.5e-6) 
   lr = calculateParameter( A/wr ) 
   M = calculateParameter( A/A )
   nameParameter(wr "w")
   nameParameter(wr "wr")
   nameParameter(wr "sumW")
   nameParameter(lr "l")
   nameParameter(lr "lr")
   
   nameParameter(lr "sumL")
   nameParameter(M "m")
   saveProperty( nwoda "model" "rnwod_m" )

extractBJT("PV_mis" emit5_mis coll("C") nbase("B") emit("E")
  spiceModel( "pnp5_mis" )
  cellView( "vpnp_mis ivpcell" )
  flagMalformed )
  area_BJT = measureParameter(area (emit5_mis over emit) 1e-12)
  M = calculateParameter(area_BJT/area_BJT)
  nameParameter( area_BJT "area" )
  nameParameter( M "m" )
  saveProperty( emit5_mis "model" "pnp5_mis") 

extractDevice("nmos_rf_6t" nrgate_6t_nthin d_tndiff("D") poly_rf("G") s_tndiff("S") rw("B") DNW("NG") RFDUMMY6T("PG")
   spiceModel("nmos_rf_6t")
   cellView( "rfnmos2v_6t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (nrgate_6t_nthin enclosing nrgate_rf4t))
   WD = measureParameter(length (nrgate_rf4t butting d_tndiff))
   WS = measureParameter(length (nrgate_rf4t butting s_tndiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (nrgate_rf4t) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" nrgate_6t_nthin)
   attachParameter(lr "lr" nrgate_6t_nthin)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( nrgate_6t_nthin "model" "nmos_rf_6t")
)

extractDevice( "spiral_std_mu_x_20k" std_mu_x_20k_ind indm6p("PLUS") indm6m("MINUS") psub("BULK")
   spiceModel("spiral_std_mu_x_20k")
   cellView("spiral_std_mu_x_20k ivpcell")
   flagMalformed
)  
   nnr1  = measureParameter( perimeter (IND_NR) ) 
   nnr   = calculateParameter( ( nnr1 - 0.005*2 ) / 2 )
   nr    =  calculateParameter( ( nnr / 0.01 ) * 0.25 ) 
   lay   = calculateParameter( 6 * nr/nr)
   rad1  = measureParameter( perimeter (IND_RAD) )
   rad   = calculateParameter( ( rad1 - 0.5*2 ) * 0.5e-6 )
   gdis1 = measureParameter( perimeter (IND_GDIS) )
   gdis  = calculateParameter( ( gdis1 - 0.5*2 ) * 0.5e-6 )
   w1    = measureParameter( perimeter (IND_W) )
   w     = calculateParameter( ( w1 - 0.5*2 ) * 0.5e-6 )
   s1    = measureParameter( perimeter (IND_S) )
   spacing     = calculateParameter( ( s1 - 0.5*2 ) * 0.5e-6 )
   attachParameter(w "w" std_mu_x_20k_ind)
   attachParameter(spacing "spacing" std_mu_x_20k_ind)
   attachParameter(lay "lay" std_mu_x_20k_ind)
   attachParameter(rad "rad" std_mu_x_20k_ind)
   attachParameter(nr "nr" std_mu_x_20k_ind)
   attachParameter(gdis "gdis" std_mu_x_20k_ind)
   attachParameter(w "width" std_mu_x_20k_ind)
   attachParameter(spacing "space" std_mu_x_20k_ind)
   attachParameter(lay "layer" std_mu_x_20k_ind)
   attachParameter(rad "radius" std_mu_x_20k_ind)
   attachParameter(nr "turns" std_mu_x_20k_ind)
if( !avSwitch( "spice_extraction") then
	   saveProperty(std_mu_x_20k_ind "model" "spiral_std_mu_x_20k")
)

extractBJT("PV_mis" emit2_mis coll("C") nbase("B") emit("E")
  spiceModel( "pnp2_mis" )
  cellView( "vpnp_mis ivpcell" )
  flagMalformed )
  area_BJT = measureParameter(area (emit2_mis over emit) 1e-12)
  M = calculateParameter(area_BJT/area_BJT)
  nameParameter( area_BJT "area" )
  nameParameter( M "m" )
  saveProperty( emit2_mis "model" "pnp2_mis") 

extractDevice("rppo1rpo_dis" prpop_3t poly("PLUS") poly("MINUS") poly_term("B") physical
   spiceModel("rppo1rpo_dis") 
   cellView( "rphpoly_dis ivpcell" )
   flagMalformed
)   
   A = measureParameter(area (prpop_3t) 1e-12)
   wr = measureParameter(length (prpop_3t butting poly) 0.5e-6)
   lr = calculateParameter( A/wr )
   M = calculateParameter( A/A )
   nameParameter(wr "w")
   nameParameter(wr "wr")
   nameParameter(wr "sumW")
   nameParameter(lr "l")
   nameParameter(lr "lr")
   nameParameter(lr "sumL")
   nameParameter(M "m")
if( !avSwitch( "spice_extraction") then   
   saveProperty( prpop_3t "model" "rppo1rpo_dis" )
)

extractDevice("rppolys_rf" rppolys_rf_3t poly("PLUS") poly("MINUS") DNW("BULK") physical
   spiceModel("rppolys_rf") 
   cellView( "rplpoly_rf ivpcell" )
   flagMalformed
)
   w = measureParameter(length (rppolys_rf_3t butting poly) 0.5e-6)
   a = measureParameter(area (rppolys_rf_3t) 1e-12)
   l = calculateParameter(a/w)
   m = calculateParameter( a/a )
   attachParameter(w "W" rppolys_rf_3t)
   attachParameter(l "L" rppolys_rf_3t)
   nameParameter(w "sumW")
   nameParameter(l "sumL")
   nameParameter(m "M")
   saveProperty( rppolys_rf_3t "model" "rppolys_rf" )

;
extractDevice( "lcesd2_rf" lcesd2_rl lcesdp("PLUS") lcesdm("MINUS")
   spiceModel("lcesd2_rf")
   cellView("lcesd2_rf ivpcell")
   flagMalformed
)

extractDevice("pmos_rf_nw" pgate_4t_pthin_nw d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B")
   spiceModel("pmos_rf_nw") 
   cellView( "rfpmos2v_nw ivpcell" )
   flagMalformed
)
   NR = measureParameter(figCount (pgate_4t_pthin_nw enclosing pgate_rf4t_nw))
   WD = measureParameter(length (pgate_rf4t_nw butting d_tpdiff ) 1e-6)
   WS = measureParameter(length (pgate_rf4t_nw butting s_tpdiff ) 1e-6)
   WR = calculateParameter((WD+WS)/(2*NR))
   area_gate = measureParameter(area (pgate_rf4t_nw over pgate_4t_pthin_nw) 1e-12)
   LR = calculateParameter(area_gate/(WR*NR))
   attachParameter(WR "wr" pgate_4t_pthin_nw)
   attachParameter(LR "lr" pgate_4t_pthin_nw)
   nameParameter(NR "nr")
   saveProperty( pgate_4t_pthin_nw "model" "pmos_rf_nw" )

extractDevice("pmos_rf_nw_5t" pgate_5t_pthin_nw d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B") RFDUMMY5T("PG")
   spiceModel("pmos_rf_nw_5t")
   cellView( "rfpmos2v_nw_5t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (pgate_5t_pthin_nw enclosing pgate_rf4t_nw))
   WD = measureParameter(length (pgate_rf4t_nw butting d_tpdiff))
   WS = measureParameter(length (pgate_rf4t_nw butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (pgate_rf4t_nw) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" pgate_5t_pthin_nw)
   attachParameter(lr "lr" pgate_5t_pthin_nw)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( pgate_5t_pthin_nw "model" "pmos_rf_nw_5t")
)

extractDevice("nmos_rf" nrgate_4t_nthin d_tndiff("D") poly_rf("G") s_tndiff("S") psub("B")
   spiceModel("nmos_rf") 
   cellView( "rfnmos2v ivpcell" )
   flagMalformed
)
   NR = measureParameter(figCount (nrgate_4t_nthin enclosing nrgate_rf4t))
   WD = measureParameter(length (nrgate_rf4t butting d_tndiff ))
   WS = measureParameter(length (nrgate_rf4t butting s_tndiff ))
   WR = calculateParameter((WD+WS)*1e-6/(2*NR))
   area_gate = measureParameter(area (nrgate_rf4t over nrgate_4t_nthin) 1e-12)
   LR = calculateParameter(area_gate/(WR*NR))
   attachParameter(WR "wr" nrgate_4t_nthin)
   attachParameter(LR "lr" nrgate_4t_nthin)
   nameParameter(NR "nr")
   saveProperty( nrgate_4t_nthin "model" "nmos_rf" )

extractDevice("pmos_rf33" bpgate_4t_pthin d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B")
   spiceModel("pmos_rf33") 
   cellView( "rfpmos3v ivpcell" )
   flagMalformed
)
   NR = measureParameter(figCount (bpgate_4t_pthin enclosing bpgate_rf4t))
   WD = measureParameter(length (bpgate_rf4t butting d_tpdiff) 1e-6)
   WS = measureParameter(length (bpgate_rf4t butting s_tpdiff) 1e-6)
   WR = calculateParameter((WD+WS)/(2*NR))
   area_gate = measureParameter(area (bpgate_rf4t over bpgate_4t_pthin) 1e-12)
   LR = calculateParameter(area_gate/(WR*NR))
   attachParameter(WR "wr" bpgate_4t_pthin)
   attachParameter(LR "lr" bpgate_4t_pthin)
   nameParameter(NR "nr")
   saveProperty( bpgate_4t_pthin "model" "pmos_rf33" )

extractBJT("NV" nemit2 ncoll("C") pbase("B") nemit("E")
  spiceModel( "npn2" )
  cellView( "npn ivpcell" )
  flagMalformed )
  area_BJT = measureParameter(area (nemit2 over nemit) 1e-12)
  M = calculateParameter(area_BJT/area_BJT)
  nameParameter( area_BJT "area" )
  nameParameter( M "m" )
  saveProperty( nemit2 "model" "npn2") 

extractBJT("NV_mis" nemit2_mis ncoll("C") pbase("B") nemit("E")
  spiceModel( "npn2_mis" )
  cellView( "npn_mis ivpcell" )
  flagMalformed )
  area_BJT = measureParameter(area (nemit2_mis over nemit) 1e-12)
  M = calculateParameter(area_BJT/area_BJT)
  nameParameter( area_BJT "area" )
  nameParameter( M "m" )
  saveProperty( nemit2_mis "model" "npn2_mis") 

extractDevice("rpodrpo_m" t_prdop tpdiff("PLUS") tpdiff("MINUS") nxwell("B") physical
   spiceModel("rpodrpo_m") 
   cellView( "rpplus ivpcell" )
   flagMalformed
)   
   A = measureParameter(area (t_prdop) 1e-12) 
   wr = measureParameter(length (t_prdop butting tpdiff) 0.5e-6) 
   lr = calculateParameter( A/wr ) 
   M = calculateParameter( A/A )
   nameParameter(wr "w")
   nameParameter(wr "wr")
   nameParameter(wr "sumW")
   nameParameter(lr "l")
   nameParameter(lr "lr")
   
   nameParameter(lr "sumL")
   nameParameter(M "m")
   saveProperty( t_prdop "model" "rpodrpo_m" )

extractDevice("moscap_rf" varnwmc_rf_dnw poly("PLUS") tndiff("MINUS") psub("BULK")
   spiceModel("moscap_rf")
   cellView("moscap_rf ivpcell")
   flagMalformed
)
   br1  = measureParameter(figCount (varnwmc_rf_dnw enclosing vargt3_rf))
   gr    = measureParameter(figCount (varnwmc_rf_dnw enclosing nthin))
   br    = calculateParameter(br1/gr)
   wr1 = measureParameter(length (vargt3_rf butting tndiff) 0.5e-6)
   wr  = calculateParameter(wr1/br1)
   a1  = measureParameter(area (vargt3_rf) 1e-12)
   lr  = calculateParameter(a1/(wr*br1))
   attachParameter(wr "wr" varnwmc_rf_dnw)
   attachParameter(lr "lr" varnwmc_rf_dnw)
   attachParameter(br "br" varnwmc_rf_dnw)
   attachParameter(gr "gr" varnwmc_rf_dnw)
   attachParameter(br "branch" varnwmc_rf_dnw)
   attachParameter(gr "group" varnwmc_rf_dnw)
   attachParameter(wr "wf" varnwmc_rf_dnw)
   attachParameter(lr "lf" varnwmc_rf_dnw)
   
if( !avSwitch( "spice_extraction") then
	   saveProperty(varnwmc_rf_dnw "model" "moscap_rf")
)

extractDevice("pmos_rf33_5t" bpgate_5t_pthin d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B") RFDUMMY5T("PG")
   spiceModel("pmos_rf33_5t")
   cellView( "rfpmos3v_5t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (bpgate_5t_pthin enclosing bpgate_rf4t))
   WD = measureParameter(length (bpgate_rf4t butting d_tpdiff))
   WS = measureParameter(length (bpgate_rf4t butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (bpgate_rf4t) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" bpgate_5t_pthin)
   attachParameter(lr "lr" bpgate_5t_pthin)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( bpgate_5t_pthin "model" "pmos_rf33_5t")
)

extractDevice("pmos_rf33_nw_5t" bpgate_5t_pthin_nw d_tpdiff("D") poly_rf("G") s_tpdiff("S") nxwell("B") RFDUMMY5T("PG")
   spiceModel("pmos_rf33_nw_5t")
   cellView( "rfpmos3v_nw_5t ivpcell" )
   flagMalformed
)
   nr = measureParameter(figCount (bpgate_5t_pthin_nw enclosing bpgate_rf4t_nw))
   WD = measureParameter(length (bpgate_rf4t_nw butting d_tpdiff))
   WS = measureParameter(length (bpgate_rf4t_nw butting s_tpdiff))
   wr = calculateParameter((WD+WS)*1e-6/(2*nr))
   area_gate = measureParameter(area (bpgate_rf4t_nw) 1e-12)
   lr = calculateParameter(area_gate/(wr*nr))
   attachParameter(wr "wr" bpgate_5t_pthin_nw)
   attachParameter(lr "lr" bpgate_5t_pthin_nw)
   nameParameter(nr "nr")
if( !avSwitch( "spice_extraction") then
	   saveProperty( bpgate_5t_pthin_nw "model" "pmos_rf33_nw_5t")
)

if( avSwitch( "CAP_2P0") then
extractDevice("mimcap_2p0_shield" capm5_rf3t_shield_m4_2p0 ctm("PLUS") metal5("MINUS") metal4("BULK")
   spiceModel("mimcap_2p0_shield")
   cellView( "mimcap_rf_2p0 ivpcell" )
   flagMalformed
)
   PJ = measureParameter(perimeter (capm5_rf3t_shield_m4_2p0 over ctm) 1e-6)
   A  = measureParameter(area (capm5_rf3t_shield_m4_2p0) 1e-12)
   L1 = measureParameter(length (capm5_rf3t_shield_m4_2p0 coincident metal6) 1e-6)
   LT  = calculateParameter(PJ - L1)
   WT  = calculateParameter(A/LT)
   lay = calculateParameter( L1/L1*6 )   
   nameParameter(lay "lay")
   nameParameter(LT "lt")
   nameParameter(WT "wt")
   saveProperty( capm5_rf3t_shield_m4_2p0 "model" "mimcap_2p0_shield" )
extractDevice("mimcap_2p0_shield" capm5_rf3t_shield_m4_2p0_ud ctm("PLUS") metal5("MINUS") metal4("BULK")
   spiceModel("mimcap_2p0_shield")
   cellView( "mimcap_rf_2p0 ivpcell" )
   flagMalformed
)
   PJ = measureParameter(perimeter (capm5_rf3t_shield_m4_2p0_ud over ctm) 1e-6)
   A  = measureParameter(area (capm5_rf3t_shield_m4_2p0_ud) 1e-12)
   L1 = measureParameter(length (capm5_rf3t_shield_m4_2p0_ud coincident metal6) 1e-6)
   LT  = calculateParameter(PJ - L1)
   WT  = calculateParameter(A/LT)
   lay = calculateParameter( L1/L1*6 )   
   nameParameter(lay "lay")
   nameParameter(LT "lt")
   nameParameter(WT "wt")
   saveProperty( capm5_rf3t_shield_m4_2p0_ud "model" "mimcap_2p0_shield" )
)

extractRES("MT" mt6res metal6("PLUS" "MINUS")
   spiceModel("rmt") 
   cellView( "rmt ivpcell" )
   flagMalformed
)   
   A  = measureParameter(area (mt6res) 1e-12) 
   W  = measureParameter(length (mt6res butting metal6) 0.5e-6) 
   L  = calculateParameter( A/W ) 
   R  = calculateParameter( L/W * RVMT )
   nameParameter(W "w")
   nameParameter(W "sumW")
   nameParameter(L "l")
   nameParameter(L "sumL")
   nameParameter(R "VALUE")
   if( !avSwitch( "spice_extraction") then
   saveProperty( mt6res "model" "rmt" )
   )

extractDevice("rppolyl_rf" rppolyl_rf_3t poly("PLUS") poly("MINUS") DNW("BULK") physical
   spiceModel("rppolyl_rf") 
   cellView( "rplpoly_rf ivpcell" )
   flagMalformed
)
   w = measureParameter(length (rppolyl_rf_3t butting poly) 0.5e-6)
   a = measureParameter(area (rppolyl_rf_3t) 1e-12)
   l = calculateParameter(a/w)
   m = calculateParameter( a/a )
   attachParameter(w "W" rppolyl_rf_3t)
   attachParameter(l "L" rppolyl_rf_3t)
   nameParameter(w "sumW")
   nameParameter(l "sumL")
   nameParameter(m "M")
   saveProperty( rppolyl_rf_3t "model" "rppolyl_rf" )

extractDevice("sbd_rf_nw" sbd_rf_nw schottky_p("PLUS") schottky_n("MINUS") psub("BULK")
   spiceModel("sbd_rf_nw") 
   cellView( "sbd_rf_nw ivpcell" )
   flagMalformed
)
   NF = measureParameter(figCount (sbd_rf_nw enclosing schottky_p ))
   W1 = measureParameter(length (schottky_p butting sbd_w) 1e-6)
   W = calculateParameter(W1/(2*NF))
   A = measureParameter(area (schottky_p) 1e-12)
   L = calculateParameter(A/(NF*W))
   attachParameter(W "w" sbd_rf_nw)
   attachParameter(L "l" sbd_rf_nw)
   attachParameter(NF "nf" sbd_rf_nw)
   saveProperty( sbd_rf_nw "model" "sbd_rf_nw" )

extractDevice("xjvar_nr36" jvar_nr tpdiff("PLUS") tndiff("MINUS") psub("BULK")
   spiceModel("xjvar_nr36") 
   cellView( "jvar ivpcell" )
   flagMalformed
)
   NR  = measureParameter(figCount (jvar_nr enclosing jvarp_rf))
   WR1 = measureParameter(length (jvarp_rf butting w_fac))
   W  = calculateParameter((WR1/(2*NR))*1e-6)
   m  = calculateParameter(NR/NR)
   nameParameter(NR "nr")
   attachParameter(W "w" jvar_nr)
   attachParameter(m "m" jvar_nr)
   saveProperty( jvar_nr "model" "xjvar_nr36" )

extractDevice("nmoscap" nthin_var poly("PLUS") tndiff("MINUS")
   spiceModel("nmoscap") 
   cellView( "mos_var_b ivpcell" )
   flagMalformed
)
   mr = measureParameter(figCount (nthin_var enclosing vargt))
   A1 = measureParameter(area (vargt) 1e-12)
   A = calculateParameter(A1/mr)
   lr1 = measureParameter(length (vargt coincident nthin_var) 1e-6)
   lr = calculateParameter(lr1/(mr*2))
   wr = calculateParameter( A/lr )
   m = calculateParameter( mr/mr )
   attachParameter(mr "mr" nthin_var)
   attachParameter(lr "lr" nthin_var)
   attachParameter(wr "wr" nthin_var)
   attachParameter(mr "branch" nthin_var)
   attachParameter(lr "lf" nthin_var)
   attachParameter(wr "wf" nthin_var)
   attachParameter(m "m" nthin_var)
   saveProperty( nthin_var "model" "nmoscap" )

extractDevice("moscap_rf33_nw" varnwmi_rf_nw poly("PLUS") tndiff("MINUS") psub("BULK")
   spiceModel("moscap_rf33_nw")
   cellView("moscap_rf33_nw ivpcell")
   flagMalformed
)
   br1  = measureParameter(figCount (varnwmi_rf_nw enclosing bvargt3_rf))
   gr    = measureParameter(figCount (varnwmi_rf_nw enclosing nthin))
   br    = calculateParameter(br1/gr)
   wr1 = measureParameter(length (bvargt3_rf butting tndiff) 0.5e-6)
   wr  = calculateParameter(wr1/br1)
   a1  = measureParameter(area (bvargt3_rf) 1e-12)
   lr  = calculateParameter(a1/(wr*br1))
   attachParameter(wr "wr" varnwmi_rf_nw)
   attachParameter(lr "lr" varnwmi_rf_nw)
   attachParameter(br "br" varnwmi_rf_nw)
   attachParameter(gr "gr" varnwmi_rf_nw)
   attachParameter(br "branch" varnwmi_rf_nw)
   attachParameter(gr "group" varnwmi_rf_nw)
   attachParameter(wr "wf" varnwmi_rf_nw)
   attachParameter(lr "lf" varnwmi_rf_nw)
   
if( !avSwitch( "spice_extraction") then
	   saveProperty(varnwmi_rf_nw "model" "moscap_rf33_nw")
)

extractRES("WR" nwsti nxwell("PLUS" "MINUS")
   spiceModel("rnwsti") 
   cellView( "rnwell ivpcell" )
   flagMalformed
)   
   A  = measureParameter(area (nwsti) 1e-12) 
   W  = measureParameter(length (nwsti butting nxwell) 0.5e-6) 
   L  = calculateParameter( A/W ) 
   R  = calculateParameter( L/W * RVWR )
   nameParameter(W "w")
   nameParameter(W "sumW")
   nameParameter(L "l")
   nameParameter(L "sumL")
   nameParameter(R "VALUE")
   if( !avSwitch( "spice_extraction") then
   saveProperty( nwsti "model" "rnwsti" )
   )

;#############################################
;# ERC CHECK                                 #
;#############################################
; I. The soft-connect checks already include in the "Soft-Connect_Checks" ivIf 
;    statement. Please turn on "Soft-Connect_Checks" switch to check the soft 
;    connect issues on Nwell or Substrate. 

if( avSwitch( "WELL_TO_PG_CHECK") then
; ntap connect to GROUND 
 npvss49 = geomGetNet( ntap_not_var  "GND" "AGND" "VSS" "AVSS" "VS33" "VSSPST" "VSSG" "AVS33" "AVSSR" "AVSSG" "AVSSB" "AVSSBG" "AVS33R" "AVS33G" "AVS33B" "AVSSUB" "VSSUB" "AVS33SUB" "VS33SUB" "TAVSS" "TAVSSPST" "DVSS" "VSSM")
 errorLayer( npvss49 "<npvss49> ntap_not_var connected to GROUND !") 
)


if( avSwitch( "GATE_TO_PG_CHECK") then
; gate1_not_IO1 connect to GROUND 
 npvss150 = geomGetNet( gate1_not_IO1  "GND" "AGND" "VSS" "AVSS" "VS33" "VSSPST" "VSSG" "AVS33" "AVSSR" "AVSSG" "AVSSB" "AVSSBG" "AVS33R" "AVS33G" "AVS33B" "AVSSUB" "VSSUB" "AVS33SUB" "VS33SUB" "TAVSS" "TAVSSPST" "DVSS" "VSSM")
 errorLayer( npvss150 "<npvss150> gate1_not_IO1 connected to GROUND !") 
)


; MOS  S/D connect to POWER&GROUND --mnpg*/
 N1tndiff = geomGetNet( tndiff  "VDD" "AVDD" "VD33" "VDDSA" "VDDPST" "VDD5V" "VDDG" "AVD33" "AVDDR" "AVDDG" "AVDDB" "AVDDBG" "AVD33R" "AVD33G" "AVD33B" "AVDWELL" "VDWELL" "AVD33WELL" "VD33WELL" "TAVDD" "TAVD33" "TAVD33PST" "TAVDDPST" "DVDD" "VDDM")
 T1tndiff = geomButtOrOver(erc_nmos_gates N1tndiff)
 N2tndiff = geomGetNet( tndiff  "GND" "AGND" "VSS" "AVSS" "VS33" "VSSPST" "VSSG" "AVS33" "AVSSR" "AVSSG" "AVSSB" "AVSSBG" "AVS33R" "AVS33G" "AVS33B" "AVSSUB" "VSSUB" "AVS33SUB" "VS33SUB" "TAVSS" "TAVSSPST" "DVSS" "VSSM")
 T2tndiff = geomButtOrOver(erc_nmos_gates N2tndiff)
if( avSwitch( "DS_TO_PG_CHECK") then
 mnpg = geomAnd(T1tndiff T2tndiff)
 errorLayer( mnpg "<mnpg> MOS connected to both power and ground !")
)


if( avSwitch( "FLOATING_GATE_CHECK") then
; Floating gate no any CONT interact with the POLY1
 POLY1_no_CONT = geomAndNot(POLY1 geomButtOrOver(POLY1 CONT))
 gate_no_co = geomAnd(POLY1_no_CONT diff)
 gate_no_co1 = geomAndNot(gate_no_co RFDUMMY1)
 floating = geomButtOrOver(POLY1_no_CONT gate_no_co1)
 errorLayer( floating "<floating> Floating gate no any cont ")

)


if( avSwitch( "FLOATING_WELL_CHECK") then
; Floating psub : psub without any ptap no text on ptap
 ptap_no_text = geomAndNot( ptap geomGetNet( ptap "*" ) )
 psub_no_nplug = geomAndNot( psub geomOverlap( psub ptap ) )
 errorLayer( geomOr( ptap_no_text psub_no_nplug ) "<floating.psub> Floating psub is not allowed." )
)

if( avSwitch( "FLOATING_WELL_CHECK") then
; Floating nxwell_float : nxwell_float without any ntap no text on ntap
 ntap_no_text = geomAndNot( ntap geomGetNet( ntap "*" ) )
 nxwell_float_no_nplug = geomAndNot( nxwell_float geomOverlap( nxwell_float ntap ) )
 errorLayer( geomOr( ntap_no_text nxwell_float_no_nplug ) "<floating.nxwell_float> Floating nxwell_float is not allowed." )
)

if( avSwitch( "GATE_TO_PG_CHECK") then
; gate1_not_IO1 connect to POWER 
 ppvdd150 = geomGetNet( gate1_not_IO1  "VDD" "AVDD" "VD33" "VDDSA" "VDDPST" "VDD5V" "VDDG" "AVD33" "AVDDR" "AVDDG" "AVDDB" "AVDDBG" "AVD33R" "AVD33G" "AVD33B" "AVDWELL" "VDWELL" "AVD33WELL" "VD33WELL" "TAVDD" "TAVD33" "TAVD33PST" "TAVDDPST" "DVDD" "VDDM")
 errorLayer( ppvdd150 "<ppvdd150> gate1_not_IO1 connected to POWER !") 
)


if( avSwitch( "WELL_TO_PG_CHECK") then
; ptap connect to POWER 
 ppvdd49 = geomGetNet( ptap  "VDD" "AVDD" "VD33" "VDDSA" "VDDPST" "VDD5V" "VDDG" "AVD33" "AVDDR" "AVDDG" "AVDDB" "AVDDBG" "AVD33R" "AVD33G" "AVD33B" "AVDWELL" "VDWELL" "AVD33WELL" "VD33WELL" "TAVDD" "TAVD33" "TAVD33PST" "TAVDDPST" "DVDD" "VDDM")
 errorLayer( ppvdd49 "<ppvdd49> ptap connected to POWER !") 
)


; MOS  S/D connect to POWER&GROUND --mppg*/
 N1tpdiff = geomGetNet( tpdiff  "VDD" "AVDD" "VD33" "VDDSA" "VDDPST" "VDD5V" "VDDG" "AVD33" "AVDDR" "AVDDG" "AVDDB" "AVDDBG" "AVD33R" "AVD33G" "AVD33B" "AVDWELL" "VDWELL" "AVD33WELL" "VD33WELL" "TAVDD" "TAVD33" "TAVD33PST" "TAVDDPST" "DVDD" "VDDM")
 T1tpdiff = geomButtOrOver(erc_pmos_gates N1tpdiff)
 N2tpdiff = geomGetNet( tpdiff  "GND" "AGND" "VSS" "AVSS" "VS33" "VSSPST" "VSSG" "AVS33" "AVSSR" "AVSSG" "AVSSB" "AVSSBG" "AVS33R" "AVS33G" "AVS33B" "AVSSUB" "VSSUB" "AVS33SUB" "VS33SUB" "TAVSS" "TAVSSPST" "DVSS" "VSSM")
 T2tpdiff = geomButtOrOver(erc_pmos_gates N2tpdiff)
if( avSwitch( "DS_TO_PG_CHECK") then
 mppg = geomAnd(T1tpdiff T2tpdiff)
 errorLayer( mppg "<mppg> MOS connected to both power and ground !")
)

;ERC PATHCHK !LABELED....not support

; Nodes with a path to ground but not power 
;ERC PATHCHK GROUND && !POWER....not support

; Nodes without a path to power and ground 
;ERC PATHCHK !POWER && !GROUND...not support

; Nodes with a path to power but not ground 
;ERC PATHCHK POWER && !GROUND....not support
saveInterconnect( (metal1 "METAL1"))
saveInterconnect( (metal2 "METAL2"))
saveInterconnect( (metal3 "METAL3"))
saveInterconnect( (metal4 "METAL4"))
saveInterconnect( (metal5 "METAL5"))
saveInterconnect( (metal6 "METAL6"))
saveInterconnect( (poly "POLY1"))
) ; end of drcExtractRules 


;#########################################################################
;		END
;#########################################################################
